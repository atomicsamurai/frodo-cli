{
  "meta": {
    "origin": "https://openam-frodo-dev.forgeblocks.com/am",
    "originAmVersion": "7.4.0",
    "exportedBy": "volker.scheuber@forgerock.com",
    "exportDate": "2023-09-14T17:52:53.131Z",
    "exportTool": "frodo",
    "exportToolVersion": "v2.0.0-trivir.2 [v18.5.0]"
  },
  "script": {
    "58d29080-4563-480b-89bb-1e7719776a21": {
      "_id": "58d29080-4563-480b-89bb-1e7719776a21",
      "name": "Google Profile Normalization",
      "description": "Normalizes raw profile data from Google",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.sub),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.given_name),",
        "        field(\"familyName\", rawProfile.family_name),",
        "        field(\"photoUrl\", rawProfile.picture),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email),",
        "        field(\"locale\", rawProfile.locale)))"
      ],
      "default": true,
      "language": "GROOVY",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    },
    "23143919-6b78-40c3-b25e-beca19b229e0": {
      "_id": "23143919-6b78-40c3-b25e-beca19b229e0",
      "name": "GitHub Profile Normalization (VS)",
      "description": "Normalizes raw profile data from GitHub",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.warning(\"GitHub rawProfile: \"+rawProfile)",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.first_name),",
        "        field(\"familyName\", rawProfile.last_name),",
        "        field(\"photoUrl\", rawProfile.picture.data.url),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email)))"
      ],
      "default": false,
      "language": "GROOVY",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    },
    "bae1d54a-e97d-4997-aa5d-c027f21af82c": {
      "_id": "bae1d54a-e97d-4997-aa5d-c027f21af82c",
      "name": "Facebook Profile Normalization",
      "description": "Normalizes raw profile data from Facebook",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.first_name),",
        "        field(\"familyName\", rawProfile.last_name),",
        "        field(\"photoUrl\", rawProfile.picture.data.url),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email)))"
      ],
      "default": true,
      "language": "GROOVY",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    },
    "484e6246-dbc6-4288-97e6-54e55431402e": {
      "_id": "484e6246-dbc6-4288-97e6-54e55431402e",
      "name": "Apple Profile Normalization",
      "description": "Normalizes raw profile data from Apple",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " *",
        " * In some common default configurations, the following keys are required to be not empty:",
        " * username, givenName, familyName, email.",
        " *",
        " * From RFC4517: A value of the Directory String syntax is a string of one or more",
        " * arbitrary characters from the Universal Character Set (UCS).",
        " * A zero-length character string is not permitted.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "String email = \"change@me.com\"",
        "String subjectId = rawProfile.sub",
        "String firstName = \" \"",
        "String lastName = \" \"",
        "String username = subjectId",
        "String name",
        "",
        "if (rawProfile.isDefined(\"email\") && rawProfile.email.isNotNull()){ // User can elect to not share their email",
        "    email = rawProfile.email.asString()",
        "    username = email",
        "}",
        "if (rawProfile.isDefined(\"name\") && rawProfile.name.isNotNull()) {",
        "    if (rawProfile.name.isDefined(\"firstName\") && rawProfile.name.firstName.isNotNull()) {",
        "        firstName = rawProfile.name.firstName.asString()",
        "    }",
        "    if (rawProfile.name.isDefined(\"lastName\") && rawProfile.name.lastName.isNotNull()) {",
        "        lastName = rawProfile.name.lastName.asString()",
        "    }",
        "}",
        "",
        "name = (firstName?.trim() ? firstName : \"\") + (lastName?.trim() ? ((firstName?.trim() ? \" \" : \"\") + lastName) : \"\")",
        "name =  (!name?.trim()) ? \" \" : name",
        "",
        "return json(object(",
        "        field(\"id\", subjectId),",
        "        field(\"displayName\", name),",
        "        field(\"email\", email),",
        "        field(\"givenName\", firstName),",
        "        field(\"familyName\", lastName),",
        "        field(\"username\", username)))"
      ],
      "default": true,
      "language": "GROOVY",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    },
    "6325cf19-a49b-471e-8d26-7e4df76df0e2": {
      "_id": "6325cf19-a49b-471e-8d26-7e4df76df0e2",
      "name": "Okta Profile Normalization",
      "description": "Normalizes raw profile data from GitHub",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.warning(\"Okta rawProfile: \"+rawProfile)",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.first_name),",
        "        field(\"familyName\", rawProfile.last_name),",
        "        field(\"photoUrl\", rawProfile.picture.data.url),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.preferred_username)))"
      ],
      "default": false,
      "language": "GROOVY",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    },
    "dbe0bf9a-72aa-49d5-8483-9db147985a47": {
      "_id": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
      "name": "ADFS Profile Normalization (JS)",
      "description": "Normalizes raw profile data from ADFS",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns the social identity profile information for the authenticating user",
        " * in a standard form expected by the Social Provider Handler Node.",
        " *",
        " * Defined variables:",
        " * rawProfile - The social identity provider profile information for the authenticating user.",
        " *              JsonValue (1).",
        " * logger - The debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * requestHeaders - TreeMap (2).",
        " *                  The object that provides methods for accessing headers in the login request:",
        " *                  https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * requestParameters - TreeMap (2).",
        " *                     The object that contains the authentication request parameters.",
        " * selectedIdp - String (primitive).",
        " *               The social identity provider name. For example: google.",
        " * sharedState - LinkedHashMap (3).",
        " *               The object that holds the state of the authentication tree and allows data exchange between the stateless nodes:",
        " *               https://backstage.forgerock.com/docs/am/7/auth-nodes/core-action.html#accessing-tree-state.",
        " * transientState - LinkedHashMap (3).",
        " *                  The object for storing sensitive information that must not leave the server unencrypted,",
        " *                  and that may not need to persist between authentication requests during the authentication session:",
        " *                  https://backstage.forgerock.com/docs/am/7/auth-nodes/core-action.html#accessing-tree-state.",
        " *",
        " * Return - a JsonValue (1).",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use \"return variable\" statement outside of a function definition.",
        " *",
        " *          This script's last statement should result in a JsonValue (1) with the following keys:",
        " *          {",
        " *              {\"displayName\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"email\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"familyName\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"givenName\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"id\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"locale\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"photoUrl\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"username\": \"corresponding-social-identity-provider-value\"}",
        " *          }",
        " *",
        " *          The consumer of this data defines which keys are required and which are optional.",
        " *          For example, the script associated with the Social Provider Handler Node and,",
        " *          ultimately, the managed object created/updated with this data",
        " *          will expect certain keys to be populated.",
        " *          In some common default configurations, the following keys are required to be not empty:",
        " *          username, givenName, familyName, email.",
        " *",
        " *          From RFC4517: A value of the Directory String syntax is a string of one or more",
        " *          arbitrary characters from the Universal Character Set (UCS).",
        " *          A zero-length character string is not permitted.",
        " *",
        " * (1) JsonValue - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/json/JsonValue.html.",
        " * (2) TreeMap - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html.",
        " * (3) LinkedHashMap - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " */",
        "",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.json.JsonValue",
        "    );",
        "",
        "    var normalizedProfileData = frJava.JsonValue.json(frJava.JsonValue.object());",
        "  ",
        "      //logger.message('Seguin rawProfile: '+rawProfile);",
        "",
        "    normalizedProfileData.put('id', rawProfile.get('sub').asString());",
        "    normalizedProfileData.put('displayName', rawProfile.get('givenName').asString() + ' ' + rawProfile.get('sn').asString());",
        "    normalizedProfileData.put('email', rawProfile.get('mail').asString());",
        "    normalizedProfileData.put('givenName', rawProfile.get('givenName').asString());",
        "    normalizedProfileData.put('familyName', rawProfile.get('sn').asString());",
        "    normalizedProfileData.put('username', rawProfile.get('upn').asString());",
        "    normalizedProfileData.put('roles', rawProfile.get('roles').asString());",
        "  ",
        "      //logger.message('Seguin normalizedProfileData: '+normalizedProfileData);",
        "",
        "    return normalizedProfileData;",
        "}());"
      ],
      "default": false,
      "language": "JAVASCRIPT",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    },
    "73cecbfc-dad0-4395-be6a-6858ee3a80e5": {
      "_id": "73cecbfc-dad0-4395-be6a-6858ee3a80e5",
      "name": "Microsoft Profile Normalization",
      "description": "Normalizes raw profile data from Microsoft",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "{",
        "    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#users/$entity\",",
        "    \"@odata.id\": \"https://graph.microsoft.com/v2/711ffa9c-5972-4713-ace3-688c9732614a/directoryObjects/7d7759e2-36d8-4e64-b173-3f890d7d46d6/Microsoft.DirectoryServices.User\",",
        "    \"businessPhones\": [",
        "        \"18014735451\"",
        "    ],",
        "    \"displayName\": \"Volker Scheuber\",",
        "    \"givenName\": \"Volker\",",
        "    \"jobTitle\": null,",
        "    \"mail\": \"vscheuber@vscheuber.onmicrosoft.com\",",
        "    \"mobilePhone\": null,",
        "    \"officeLocation\": null,",
        "    \"preferredLanguage\": null,",
        "    \"surname\": \"Scheuber\",",
        "    \"userPrincipalName\": \"vscheuber@vscheuber.onmicrosoft.com\",",
        "    \"id\": \"7d7759e2-36d8-4e64-b173-3f890d7d46d6\"",
        "}",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.message(\"Kauai Microsoft Profile Normalization: rawProfile={}\", rawProfile)",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.displayName),",
        "        field(\"givenName\", rawProfile.givenName),",
        "        field(\"familyName\", rawProfile.surname),",
        "        field(\"email\", rawProfile.userPrincipalName),",
        "        field(\"username\", rawProfile.userPrincipalName),",
        "        field(\"groups\", rawProfile.groups)))"
      ],
      "default": true,
      "language": "GROOVY",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "lastModifiedBy": "null",
      "lastModifiedDate": 0
    }
  },
  "idp": {
    "google": {
      "clientId": "297338177925-mho17cgnm540s2gre8h27feb6sbs1msd.apps.googleusercontent.com",
      "pkceMethod": "S256",
      "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "encryptJwtRequestParameter": false,
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email"
      ],
      "issuer": "https://accounts.google.com",
      "userInfoResponseType": "JSON",
      "acrValues": [],
      "encryptedIdTokens": false,
      "enabled": true,
      "jwtRequestParameterOption": "NONE",
      "authenticationIdKey": "sub",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "Google",
        "buttonImage": "images/g-logo.png",
        "iconBackground": "#4184f3",
        "iconClass": "fa-google",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "enableNativeNonce": true,
      "transform": "58d29080-4563-480b-89bb-1e7719776a21",
      "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://idc.scheuber.io/login",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "DEFAULT",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
      "_id": "google",
      "_type": {
        "_id": "googleConfig",
        "name": "Client configuration for Google.",
        "collection": true
      }
    },
    "github": {
      "clientId": "bdae6d141d4dcf95a630",
      "pkceMethod": "S256",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://github.com/login/oauth/authorize",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "scopeDelimiter": " ",
      "scopes": [
        "user"
      ],
      "enabled": true,
      "authenticationIdKey": "id",
      "uiConfig": {
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "GitHub",
        "buttonImage": "https://cdn-icons-png.flaticon.com/512/25/25231.png",
        "iconBackground": "#4184f3",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "transform": "23143919-6b78-40c3-b25e-beca19b229e0",
      "userInfoEndpoint": "https://ig.mytestrun.com/user",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://idc.scheuber.io/login",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "DEFAULT",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://ig.mytestrun.com/login/oauth/access_token",
      "_id": "github",
      "_type": {
        "_id": "oauth2Config",
        "name": "Client configuration for providers that implement the OAuth2 specification.",
        "collection": true
      }
    },
    "facebook": {
      "clientId": "123741918345526",
      "pkceMethod": "S256",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://www.facebook.com/dialog/oauth",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "scopeDelimiter": " ",
      "scopes": [
        "email"
      ],
      "enabled": true,
      "authenticationIdKey": "id",
      "uiConfig": {
        "buttonClass": "fa-facebook-official",
        "buttonCustomStyle": "background-color: #3b5998; border-color: #3b5998; color: white;",
        "buttonCustomStyleHover": "background-color: #334b7d; border-color: #334b7d; color: white;",
        "buttonDisplayName": "Facebook",
        "buttonImage": "",
        "iconBackground": "#3b5998",
        "iconClass": "fa-facebook",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 3600,
      "revocationCheckOptions": [],
      "transform": "bae1d54a-e97d-4997-aa5d-c027f21af82c",
      "userInfoEndpoint": "https://graph.facebook.com/me?fields=id,name,picture,email,first_name,last_name,locale",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://idc.scheuber.io/am/XUI/?realm=%2Falpha",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "DEFAULT",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://graph.facebook.com/v2.7/oauth/access_token",
      "_id": "facebook",
      "_type": {
        "_id": "oauth2Config",
        "name": "Client configuration for providers that implement the OAuth2 specification.",
        "collection": true
      }
    },
    "apple-stoyan": {
      "clientId": "CHANGE ME",
      "pkceMethod": "S256",
      "wellKnownEndpoint": "https://appleid.apple.com/.well-known/openid-configuration",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://appleid.apple.com/auth/authorize",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "encryptJwtRequestParameter": false,
      "scopeDelimiter": " ",
      "scopes": [
        "name",
        "email"
      ],
      "issuer": "https://appleid.apple.com",
      "redirectAfterFormPostURI": "https://openam-volker-dev.forgeblocks.com/login",
      "userInfoResponseType": "JSON",
      "acrValues": [],
      "jwksUriEndpoint": "https://appleid.apple.com/auth/keys",
      "encryptedIdTokens": false,
      "requestNativeAppForUserInfo": false,
      "enabled": false,
      "jwtRequestParameterOption": "NONE",
      "authenticationIdKey": "sub",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonCustomStyleHover": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonDisplayName": "Apple",
        "buttonImage": "/login/images/apple-logo.png",
        "iconBackground": "#000000",
        "iconClass": "fa-apple",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "enableNativeNonce": true,
      "transform": "484e6246-dbc6-4288-97e6-54e55431402e",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://openam-volker-dev.forgeblocks.com/am/oauth2/alpha/client/form_post/apple-stoyan",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "FORM_POST",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://appleid.apple.com/auth/token",
      "_id": "apple-stoyan",
      "_type": {
        "_id": "appleConfig",
        "name": "Client configuration for Apple.",
        "collection": true
      }
    },
    "apple_web": {
      "clientId": "io.scheuber.idc.signinWithApple.service",
      "pkceMethod": "S256",
      "wellKnownEndpoint": "https://appleid.apple.com/.well-known/openid-configuration",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://appleid.apple.com/auth/authorize",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "encryptJwtRequestParameter": false,
      "scopeDelimiter": " ",
      "scopes": [
        "name",
        "email"
      ],
      "issuer": "https://appleid.apple.com",
      "redirectAfterFormPostURI": "https://idc.scheuber.io/login",
      "userInfoResponseType": "JSON",
      "acrValues": [],
      "jwksUriEndpoint": "https://appleid.apple.com/auth/keys",
      "encryptedIdTokens": false,
      "requestNativeAppForUserInfo": false,
      "enabled": true,
      "jwtRequestParameterOption": "NONE",
      "authenticationIdKey": "sub",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonCustomStyleHover": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonDisplayName": "Apple",
        "buttonImage": "/login/images/apple-logo.png",
        "iconBackground": "#000000",
        "iconClass": "fa-apple",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "enableNativeNonce": true,
      "transform": "484e6246-dbc6-4288-97e6-54e55431402e",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://idc.scheuber.io/am/oauth2/client/form_post/apple_web",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "FORM_POST",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://appleid.apple.com/auth/token",
      "_id": "apple_web",
      "_type": {
        "_id": "appleConfig",
        "name": "Client configuration for Apple.",
        "collection": true
      }
    },
    "okta-trial-5735851": {
      "clientId": "0oa13r2cp29Rynmyw697",
      "pkceMethod": "S256",
      "wellKnownEndpoint": "https://trial-5735851.okta.com/.well-known/openid-configuration",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://trial-5735851.okta.com/oauth2/v1/authorize",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "encryptJwtRequestParameter": false,
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email"
      ],
      "issuer": "https://trial-5735851.okta.com",
      "userInfoResponseType": "JSON",
      "acrValues": [],
      "encryptedIdTokens": false,
      "enabled": true,
      "jwtRequestParameterOption": "NONE",
      "authenticationIdKey": "id",
      "uiConfig": {
        "buttonDisplayName": "Okta"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "enableNativeNonce": true,
      "transform": "6325cf19-a49b-471e-8d26-7e4df76df0e2",
      "userInfoEndpoint": "https://trial-5735851.okta.com/oauth2/v1/userinfo",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://idc.scheuber.io/login",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "DEFAULT",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://trial-5735851.okta.com/oauth2/v1/token",
      "_id": "okta-trial-5735851",
      "_type": {
        "_id": "oidcConfig",
        "name": "Client configuration for providers that implement the OpenID Connect specification.",
        "collection": true
      }
    },
    "adfs": {
      "clientId": "aa9a179e-cdba-4db8-8477-3d1069d5ec04",
      "pkceMethod": "S256",
      "wellKnownEndpoint": "https://adfs.mytestrun.com/adfs/.well-known/openid-configuration",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/authorize",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "encryptJwtRequestParameter": false,
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email"
      ],
      "issuer": "https://adfs.mytestrun.com/adfs",
      "userInfoResponseType": "JSON",
      "acrValues": [],
      "jwksUriEndpoint": "https://adfs.mytestrun.com/adfs/discovery/keys",
      "encryptedIdTokens": false,
      "enabled": true,
      "jwtRequestParameterOption": "NONE",
      "authenticationIdKey": "sub",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft ADFS",
        "buttonImage": "/login/images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "enableNativeNonce": true,
      "transform": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
      "jwtSigningAlgorithm": "RS256",
      "redirectURI": "https://idc.scheuber.io/login",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "DEFAULT",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/token",
      "_id": "adfs",
      "_type": {
        "_id": "oidcConfig",
        "name": "Client configuration for providers that implement the OpenID Connect specification.",
        "collection": true
      }
    },
    "azure": {
      "clientId": "c42a3dc8-f276-496b-a722-269f131cc21c",
      "pkceMethod": "S256",
      "jwtEncryptionMethod": "NONE",
      "authorizationEndpoint": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/oauth2/v2.0/authorize",
      "jwtEncryptionAlgorithm": "NONE",
      "clientSecret": null,
      "issuerComparisonCheckType": "EXACT",
      "scopeDelimiter": " ",
      "scopes": [
        "User.Read",
        "openid"
      ],
      "enabled": true,
      "authenticationIdKey": "id",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft Azure",
        "buttonImage": "/login/images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white"
      },
      "privateKeyJwtExpTime": 600,
      "revocationCheckOptions": [],
      "transform": "73cecbfc-dad0-4395-be6a-6858ee3a80e5",
      "userInfoEndpoint": "https://graph.microsoft.com/v1.0/me",
      "jwtSigningAlgorithm": "NONE",
      "redirectURI": "https://idc.scheuber.io/login",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "responseMode": "DEFAULT",
      "useCustomTrustStore": false,
      "tokenEndpoint": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/oauth2/v2.0/token",
      "_id": "azure",
      "_type": {
        "_id": "microsoftConfig",
        "name": "Client configuration for Microsoft.",
        "collection": true
      }
    }
  }
}