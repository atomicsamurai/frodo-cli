{
  "agents": {
    "frodo-test-ig-agent": {
      "_id": "frodo-test-ig-agent",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents"
      },
      "agentgroup": null,
      "igCdssoLoginUrlTemplate": "http://testurl.com:8080/frodo",
      "igCdssoRedirectUrls": [
        "http://testurl.com:8080/frodo"
      ],
      "igTokenIntrospection": "Realm",
      "status": "Inactive"
    },
    "frodo-test-ig-agent2": {
      "_id": "frodo-test-ig-agent2",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents"
      },
      "agentgroup": null,
      "igCdssoLoginUrlTemplate": "http://testurl.com:8080/frodo",
      "igCdssoRedirectUrls": [
        "http://testurl.com:8080/frodo"
      ],
      "igTokenIntrospection": "Realm",
      "status": "Inactive"
    },
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents"
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          ""
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          ""
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {}
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          ""
        ],
        "conditionalLogoutUrl": [
          ""
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          ""
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          ""
        ],
        "urlPolicyEnvJsessionParameters": [
          ""
        ],
        "urlPolicyEnvPostParameters": [
          ""
        ]
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF"
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          ""
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          ""
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {}
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/"
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL"
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          ""
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*"
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http"
        },
        "unwantedHttpUrlParams": [
          ""
        ],
        "unwantedHttpUrlRegexParams": [
          ""
        ],
        "wantedHttpUrlParams": [
          ""
        ],
        "wantedHttpUrlRegexParams": [
          ""
        ]
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          ""
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          ""
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          ""
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {}
      }
    },
    "frodo-test-java-agent2": {
      "_id": "frodo-test-java-agent2",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents"
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          ""
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          ""
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {}
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          ""
        ],
        "conditionalLogoutUrl": [
          ""
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          ""
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          ""
        ],
        "urlPolicyEnvJsessionParameters": [
          ""
        ],
        "urlPolicyEnvPostParameters": [
          ""
        ]
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF"
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          ""
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          ""
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {}
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/"
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL"
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          ""
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*"
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http"
        },
        "unwantedHttpUrlParams": [
          ""
        ],
        "unwantedHttpUrlRegexParams": [
          ""
        ],
        "wantedHttpUrlParams": [
          ""
        ],
        "wantedHttpUrlRegexParams": [
          ""
        ]
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          ""
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          ""
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          ""
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {}
      }
    },
    "frodo-test-web-agent": {
      "_id": "frodo-test-web-agent",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents"
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": false,
        "overrideRequestPort": false,
        "overrideRequestProtocol": false,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          ""
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false
      },
      "amServicesWebAgent": {
        "amLoginUrl": [],
        "amLogoutUrl": [
          "http://testserverurl.com:8080/UI/Logout"
        ],
        "applicationLogoutUrls": [
          ""
        ],
        "conditionalLoginUrl": [
          ""
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          ""
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          ""
        ],
        "regexConditionalLoginUrl": [
          ""
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session"
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          ""
        ],
        "notEnforcedIpsList": [
          ""
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          ""
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {}
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Error",
        "agentUriPrefix": "http://testagenturl.com:8080/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testagenturl.com:8080/"
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "testagenturl.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Inactive",
        "webSocketConnectionIntervalInMinutes": 30
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": false,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          ""
        ]
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          ""
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          ""
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false
      }
    },
    "frodo-test-web-agent2": {
      "_id": "frodo-test-web-agent2",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents"
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": false,
        "overrideRequestPort": false,
        "overrideRequestProtocol": false,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          ""
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false
      },
      "amServicesWebAgent": {
        "amLoginUrl": [],
        "amLogoutUrl": [
          "http://testserverurl.com:8080/UI/Logout"
        ],
        "applicationLogoutUrls": [
          ""
        ],
        "conditionalLoginUrl": [
          ""
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          ""
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          ""
        ],
        "regexConditionalLoginUrl": [
          ""
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session"
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          ""
        ],
        "notEnforcedIpsList": [
          ""
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          ""
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {}
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Error",
        "agentUriPrefix": "http://testagenturl.com:8080/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testagenturl.com:8080/"
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "testagenturl.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Inactive",
        "webSocketConnectionIntervalInMinutes": 30
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": false,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          ""
        ]
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          ""
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          ""
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false
      }
    }
  },
  "application": {
    "RCSClient": {
      "_id": "RCSClient",
      "_provider": {
        "_id": "",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider"
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid"
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email"
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer"
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "includeSubnameInTokenClaims": true,
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "Login",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler"
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens"
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise"
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger"
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator"
          ]
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512"
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256"
          ]
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris"
          ]
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ]
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ]
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]"
        }
      },
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients"
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "client_credentials"
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token"
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:idm:*"
        ],
        "status": "Active"
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": []
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": []
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "c234ba0b-58a1-4cfd-9567-09edde980745",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": true,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "SCRIPTED",
        "oidcClaimsScript": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": true,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": true,
        "tokenEncryptionEnabled": false,
        "useForceAuthnForMaxAge": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]"
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am.fr-platform:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null
      }
    },
    "rfc7523-client1": {
      "_id": "rfc7523-client1",
      "_provider": {
        "_id": "",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider"
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid"
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email"
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer"
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "includeSubnameInTokenClaims": true,
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "Login",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler"
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens"
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise"
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger"
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator"
          ]
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512"
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256"
          ]
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris"
          ]
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ]
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW"
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512"
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512"
          ]
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]"
        }
      },
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients"
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "urn:ietf:params:oauth:grant-type:jwt-bearer"
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "requestUris": [],
        "responseTypes": [
          "token"
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "none",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "rfc7523-client1"
        ],
        "clientType": "Public",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "openid",
          "fr:am:*",
          "fr:idm:*"
        ],
        "status": "Active"
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": []
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": []
      },
      "signEncOAuth2ClientConfig": {
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": "{\"keys\":[{\"kty\":\"RSA\",\"kid\":\"5rpTrxBPGieY8tVMmxMq_m3ZBbrATN0SlikhoM13VJM\",\"alg\":\"RS256\",\"e\":\"AQAB\",\"n\":\"3oLso7E5tS9FL0ui5KaQe2qEsozeZAwqCHqzEP7KzgMAAvPCQHPZ8etsC9xeYxAyjPnfQc-EXMRqCHqlyxeyR912gBKYVZ6VB9h1zWKCIiUQHpY_nz6bDAt1EisRiH_jqENDOJ0m5ELVLPZoXcsEQ9e_yg352YToGvS560YCBi6xYj4JX5SGs0Rah-SmhpsOZNr46XHolGYivLaRNLJRQc2YV2NArMfb5JcDQ9aSv3EyIXOim7MRFh8uORCiyNpF_y3jOjC17rdJ_0IPnYvPl1-Krq283RzzhIDe2s2CoKAK50XEM8J5FT9298xd7ku1_nyCcNsltGPLj3a7p9OYzofaC8FIfBXX_T4MoNfJ0edNp3FWGin_C_l1z4JnKdSyyBMr4-mB0mIx3td2qK8StFj2hfXZXxtG4cJ0vnP4Qizse-BlqG0Wkmbjijun9cfPiL5AFv-W5OcfQ5R8HqU5JHkQGkWXopZpZtGbqCS7LbDyNBZJNa_qacAIZ98C4sbbRwZgv824hxJlVGu0uxyIqwNHyNnPkZ8zhJ9OCp2l4y8KC3aALyVlBzmi55xh4J8J1cgFXX2v_ilPqUYN9uwQAR4mJ6_tHEPzX7BPxFl1BubNyK5S1ZZevtbUUE8oV9an2fP51H64oYy_1ni6badcu0TOPr2ISGuwFvQxtllHRcE\"}]}",
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null
      }
    }
  },
  "authentication": {
    "_id": "",
    "_type": {
      "_id": "EMPTY",
      "collection": false,
      "name": "Core"
    },
    "accountlockout": {
      "lockoutDuration": 0,
      "lockoutDurationMultiplier": 1,
      "lockoutWarnUserCount": 0,
      "loginFailureCount": 5,
      "loginFailureDuration": 300,
      "loginFailureLockoutMode": false,
      "storeInvalidAttemptsInDataStore": true
    },
    "core": {
      "adminAuthModule": "Login",
      "orgConfig": "Login"
    },
    "general": {
      "defaultAuthLevel": 0,
      "identityType": [
        "agent",
        "user"
      ],
      "locale": "en_US",
      "statelessSessionsEnabled": false,
      "twoFactorRequired": false,
      "userStatusCallbackPlugins": []
    },
    "postauthprocess": {
      "loginFailureUrl": [],
      "loginPostProcessClass": [],
      "loginSuccessUrl": [
        "/enduser/?realm=/alpha"
      ],
      "userAttributeSessionMapping": [],
      "usernameGeneratorClass": "com.sun.identity.authentication.spi.DefaultUserIDGenerator",
      "usernameGeneratorEnabled": true
    },
    "security": {
      "addClearSiteDataHeader": true,
      "keyAlias": "test",
      "moduleBasedAuthEnabled": false,
      "sharedSecret": {
        "$string": "&{am.authentication.shared.secret}"
      },
      "zeroPageLoginAllowedWithoutReferrer": true,
      "zeroPageLoginEnabled": false,
      "zeroPageLoginReferrerWhiteList": []
    },
    "trees": {
      "authenticationSessionsMaxDuration": 5,
      "authenticationSessionsStateManagement": "JWT",
      "authenticationSessionsWhitelist": false,
      "authenticationTreeCookieHttpOnly": true,
      "suspendedAuthenticationTimeout": 1440
    },
    "userprofile": {
      "aliasAttributeName": [
        "uid"
      ],
      "defaultRole": [],
      "dynamicProfileCreation": "false"
    }
  },
  "config": {
    "access": {
      "_id": "access",
      "configs": [
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/*",
          "roles": "*"
        },
        {
          "actions": "login,logout",
          "methods": "read,action",
          "pattern": "authentication",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fidc/*",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "*",
          "pattern": "config/fidc/*",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themeconfig",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themerealm",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/uilocale/*",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fieldPolicy/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/uiconfig",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/dashboard",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "methods": "query",
          "pattern": "info/features",
          "roles": "*"
        },
        {
          "actions": "listPrivileges",
          "methods": "action",
          "pattern": "privilege",
          "roles": "*"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "privilege/*",
          "roles": "*"
        },
        {
          "actions": "validate",
          "methods": "action",
          "pattern": "util/validateQueryFilter",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "customAuthz": "checkIfAnyFeatureEnabled('kba')",
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "excludePatterns": "repo,repo/*",
          "methods": "*",
          "pattern": "*",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "",
          "methods": "create,read,update,delete,patch,query",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "*",
          "methods": "script",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo/*",
          "roles": "internal/role/openidm-admin"
        },
        {
          "actions": "command",
          "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
          "methods": "action",
          "pattern": "repo/link",
          "roles": "internal/role/openidm-admin"
        },
        {
          "methods": "create,read,query,patch",
          "pattern": "managed/*",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "methods": "read,query",
          "pattern": "internal/role/*",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "actions": "*",
          "methods": "create,read,action,update",
          "pattern": "profile/*",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "methods": "read",
          "pattern": "selfservice/terms",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "methods": "read",
          "pattern": "identityProviders",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "actions": "sendTemplate",
          "methods": "action",
          "pattern": "external/email",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "actions": "authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/platform-provisioning"
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "bind,unbind",
          "customAuthz": "ownDataOnly()",
          "methods": "read,action,delete",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
          "methods": "update,patch,action",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "patch",
          "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
          "methods": "patch,action",
          "pattern": "selfservice/user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "patch",
          "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
          "methods": "patch,action",
          "pattern": "managed/user",
          "roles": "internal/role/openidm-cert"
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_meta', false)",
          "methods": "read",
          "pattern": "internal/usermeta/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_notifications', true)",
          "methods": "read,delete",
          "pattern": "internal/notification/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized"
        },
        {
          "actions": "deleteNotificationsForTarget",
          "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
          "methods": "action",
          "pattern": "notification",
          "roles": "internal/role/openidm-authorized"
        }
      ]
    },
    "alphaOrgPrivileges": {
      "_id": "alphaOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": false
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/ownerIDs eq \"{{_id}}\" or /parentOwnerIDs eq \"{{_id}}\"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": false
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq \"__org_id_placeholder__\"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": true
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/adminIDs eq \"{{_id}}\" or /parentAdminIDs eq \"{{_id}}\"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": true
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq \"__org_id_placeholder__\"",
          "name": "admin-view-update-delete-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE"
          ]
        }
      ]
    },
    "audit": {
      "_id": "audit",
      "auditServiceConfig": {
        "availableAuditEventHandlers": [
          "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
          "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
          "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
          "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
          "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
          "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
          "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler"
        ],
        "caseInsensitiveFields": [
          "/access/http/request/headers",
          "/access/http/response/headers"
        ],
        "filterPolicies": {
          "value": {
            "excludeIf": [
              "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
              "/access/http/request/cookies/session-jwt",
              "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
              "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
              "/access/http/request/headers/accept-encoding",
              "/access/http/request/headers/accept-language",
              "/access/http/request/headers/Authorization",
              "/access/http/request/headers/cache-control",
              "/access/http/request/headers/connection",
              "/access/http/request/headers/content-length",
              "/access/http/request/headers/content-type",
              "/access/http/request/headers/proxy-authorization",
              "/access/http/request/headers/X-OpenAM-Password",
              "/access/http/request/headers/X-OpenIDM-Password",
              "/access/http/request/queryParameters/access_token",
              "/access/http/request/queryParameters/IDToken1",
              "/access/http/request/queryParameters/id_token_hint",
              "/access/http/request/queryParameters/Login.Token1",
              "/access/http/request/queryParameters/redirect_uri",
              "/access/http/request/queryParameters/requester",
              "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
              "/access/http/request/queryParameters/tokenId",
              "/access/http/response/headers/Authorization",
              "/access/http/response/headers/Set-Cookie",
              "/access/http/response/headers/X-OpenIDM-Password"
            ],
            "includeIf": []
          }
        },
        "handlerForQueries": "json"
      },
      "eventHandlers": [
        {
          "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "config": {
            "name": "json",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config"
            ]
          }
        },
        {
          "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "config": {
            "enabled": false,
            "name": "repo",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config"
            ]
          }
        }
      ],
      "eventTopics": {
        "activity": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action"
            ]
          },
          "passwordFields": [
            "password"
          ],
          "watchedFields": []
        },
        "config": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action"
            ]
          }
        }
      },
      "exceptionFormatter": {
        "file": "bin/defaults/script/audit/stacktraceFormatter.js",
        "type": "text/javascript"
      }
    },
    "authentication": {
      "_id": "authentication",
      "rsFilter": {
        "augmentSecurityContext": {
          "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
          "type": "text/javascript"
        },
        "cache": {
          "maxTimeout": "300 seconds"
        },
        "scopes": [
          "fr:idm:*"
        ],
        "staticUserMapping": [
          {
            "localUser": "internal/user/idm-provisioning",
            "roles": [
              "internal/role/openidm-admin"
            ],
            "subject": "autoid-resource-server"
          }
        ],
        "subjectMapping": [
          {
            "additionalUserFields": [
              "adminOfOrg",
              "ownerOfOrg"
            ],
            "defaultRoles": [
              "internal/role/openidm-authorized"
            ],
            "propertyMapping": {
              "sub": "_id"
            },
            "queryOnResource": "managed/{{substring realm 1}}_user",
            "userRoles": "authzRoles/*"
          }
        ]
      }
    },
    "bravoOrgPrivileges": {
      "_id": "bravoOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": false
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/ownerIDs eq \"{{_id}}\" or /parentOwnerIDs eq \"{{_id}}\"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": false
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq \"__org_id_placeholder__\"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": true
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/adminIDs eq \"{{_id}}\" or /parentAdminIDs eq \"{{_id}}\"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "owners",
              "readOnly": true
            },
            {
              "attribute": "admins",
              "readOnly": true
            },
            {
              "attribute": "members",
              "readOnly": false
            },
            {
              "attribute": "parent",
              "readOnly": false
            },
            {
              "attribute": "children",
              "readOnly": false
            },
            {
              "attribute": "parentIDs",
              "readOnly": true
            },
            {
              "attribute": "adminIDs",
              "readOnly": true
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq \"__org_id_placeholder__\"",
          "name": "admin-view-update-delete-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE"
          ]
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false
            },
            {
              "attribute": "password",
              "readOnly": false
            },
            {
              "attribute": "givenName",
              "readOnly": false
            },
            {
              "attribute": "sn",
              "readOnly": false
            },
            {
              "attribute": "mail",
              "readOnly": false
            },
            {
              "attribute": "description",
              "readOnly": false
            },
            {
              "attribute": "accountStatus",
              "readOnly": false
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false
            },
            {
              "attribute": "postalAddress",
              "readOnly": false
            },
            {
              "attribute": "city",
              "readOnly": false
            },
            {
              "attribute": "postalCode",
              "readOnly": false
            },
            {
              "attribute": "country",
              "readOnly": false
            },
            {
              "attribute": "stateProvince",
              "readOnly": false
            },
            {
              "attribute": "roles",
              "readOnly": false
            },
            {
              "attribute": "groups",
              "readOnly": false
            },
            {
              "attribute": "manager",
              "readOnly": false
            },
            {
              "attribute": "authzRoles",
              "readOnly": false
            },
            {
              "attribute": "reports",
              "readOnly": false
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false
            },
            {
              "attribute": "lastSync",
              "readOnly": false
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false
            },
            {
              "attribute": "preferences",
              "readOnly": false
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true
            }
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE"
          ]
        }
      ]
    },
    "emailTemplate/forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href=\"{{object.resumeURI}}\">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href=\"{{object.resumeURI}}\">Cliquez ici pour vous connecter</a></p></body></html>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #455469; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style=\"background-color: #324054; color: #455469; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Cliquez ici pour vous connecter</a></p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur"
      }
    },
    "emailTemplate/frEmailUpdated": {
      "_id": "emailTemplate/frEmailUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"display:block;height:50px;width:45px;margin:0 auto 16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Your account email has changed</h1></div><p>Your ForgeRock Identity Cloud email has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your email has been updated"
      }
    },
    "emailTemplate/frForgotUsername": {
      "_id": "emailTemplate/frForgotUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"height:50px;margin-bottom:16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Forgot your username?</h1></div><p>Your username is <b>{{ object.userName }}</b>.</p><p style=\"text-align:center\"><a href=\"{{ object.resumeURI }}\" style=\"background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none\">Sign In to Your Account</a></p><p>If you didn't request this, please ignore this email.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Forgot Username"
      }
    },
    "emailTemplate/frOnboarding": {
      "_id": "emailTemplate/frOnboarding",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"display:block;height:50px;width:45px;margin:0 auto 16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Your account is ready</h1></div><p>Your ForgeRock Identity Cloud account is ready. Click the button below to complete registration and access your environment.</p><p style=\"text-align:center\"><a href=\"{{ object.resumeURI }}\" style=\"background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none\">Complete Registration</a></p><p>If you did not request this account, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Complete your ForgeRock Identity Cloud registration"
      }
    },
    "emailTemplate/frPasswordUpdated": {
      "_id": "emailTemplate/frPasswordUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"display:block;height:50px;width:45px;margin:0 auto 16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Your account password has changed</h1></div><p>Your ForgeRock Identity Cloud password has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your password has been updated"
      }
    },
    "emailTemplate/frProfileUpdated": {
      "_id": "emailTemplate/frProfileUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"display:block;height:50px;width:45px;margin:0 auto 16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Your account profile has changed</h1></div><p>Your ForgeRock Identity Cloud profile has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your profile has been updated"
      }
    },
    "emailTemplate/frResetPassword": {
      "_id": "emailTemplate/frResetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"display:block;height:50px;width:45px;margin:0 auto 16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Reset your password</h1></div><p>It seems you have forgotten the password for your ForgeRock Identity Cloud account. Click the button below to reset your password and access your environment.</p><p style=\"text-align:center\"><a href=\"{{ object.resumeURI }}\" style=\"background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none\">Reset Password</a></p><p>If you did not request to reset your password, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password"
      }
    },
    "emailTemplate/frUsernameUpdated": {
      "_id": "emailTemplate/frUsernameUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type=\"text/css\">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:\"Open Sans\",\"Google Sans\",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style=\"background-color:#f6f8fa;margin:0;padding:0\"><div class=\"webfont\" style=\"background-color:#f6f8fa;color:#5e6d82;padding:48px 0\"><div style=\"margin:0 auto;max-width:600px\"><div style=\"background-color:#fff;border-radius:4px;line-height:1.5\"><div style=\"padding:48px\"><div style=\"text-align:center\"><img src=\"https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png\" style=\"display:block;height:50px;width:45px;margin:0 auto 16px\" alt=\"ForgeRock Logo\"><h1 style=\"font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px\">Your account username has changed</h1></div><p>Your ForgeRock Identity Cloud username has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style=\"font-size:13px;margin-top:24px;line-height:1.7;text-align:center\">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style=\"color:#109cf1;text-decoration:none\" href=\"https://www.forgerock.com/privacy-policy\">Privacy Policy</a></div></div></div></body></html>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your username has been updated"
      }
    },
    "emailTemplate/registration": {
      "_id": "emailTemplate/registration",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\">Email verification link</a></p></body></html>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\">Lien de vérification email</a></p></body></html>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Email verification link</a></p></div></body></html>",
        "fr": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a></p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Register new account",
        "fr": "Créer un nouveau compte"
      }
    },
    "emailTemplate/resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href=\"{{object.resumeURI}}\">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href=\"{{object.resumeURI}}\">Mot de passe lien de réinitialisation</a></h4>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe"
      }
    },
    "emailTemplate/updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href=\"{{object.resumeURI}}\">Update password link</a></p>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3 id=\"verifyemailtoupdatepassword\">Verify email to update password</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Update password link</a></p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password"
      }
    },
    "emailTemplate/welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class=\"content\"><p>Welcome. Your username is '{{object.userName}}'.</p></div>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{\n background-color:#324054;\n color:#5e6d82;\n padding:60px;\n text-align:center\n}\na{\n text-decoration:none;\n color:#109cf1\n}\n.content{\n background-color:#fff;\n border-radius:4px;\n margin:0 auto;\n padding:48px;\n width:235px\n}\n",
      "subject": {
        "en": "Your account has been created"
      }
    },
    "external.email": {
      "_id": "external.email",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey"
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false
      },
      "starttls": {
        "enable": true
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000
    },
    "external.emailDefault": {
      "_id": "external.emailDefault",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey"
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false
      },
      "starttls": {
        "enable": true
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000
    },
    "fieldPolicy/alpha_user": {
      "_id": "fieldPolicy/alpha_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256"
        }
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/alpha_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "alpha_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based"
        },
        {
          "_id": "alpha_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn"
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value"
        },
        {
          "_id": "alpha_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?\"'\\`"
          ],
          "enabled": true,
          "type": "character-set"
        }
      ]
    },
    "fieldPolicy/bravo_user": {
      "_id": "fieldPolicy/bravo_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256"
        }
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/bravo_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "bravo_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based"
        },
        {
          "_id": "bravo_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn"
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value"
        },
        {
          "_id": "bravo_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?\"'\\`"
          ],
          "enabled": true,
          "type": "character-set"
        }
      ]
    },
    "internal": {
      "_id": "internal",
      "objects": [
        {
          "name": "role",
          "properties": {
            "authzMembers": {
              "items": {
                "resourceCollection": [
                  {
                    "conditionalAssociation": true,
                    "label": "User",
                    "notify": true,
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn"
                      ],
                      "queryFilter": "true"
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "managed": {
      "_id": "managed",
      "objects": [
        {
          "lastSync": {
            "effectiveAssignmentsProperty": "effectiveAssignments",
            "lastSyncProperty": "lastSync"
          },
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/alpha_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged"
            ]
          },
          "name": "alpha_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "assignments",
              "groups",
              "applications",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "effectiveGroups",
              "effectiveApplications",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "ownerOfApp",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard"
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  }
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string"
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false
              },
              "applications": {
                "description": "Applications",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name"
                        ]
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": true,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "name"
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications"
                    ],
                    [
                      "applications"
                    ]
                  ]
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "assignments": {
                "description": "Assignments",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Assignments Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Assignments",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "cn": {
                "default": "{{givenName}} {{sn}}",
                "description": "Common Name",
                "isPersonal": true,
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate"
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true
                      }
                    },
                    "required": [
                      "mapping",
                      "consentDate"
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object"
                  },
                  "title": "Consented Mappings Items",
                  "type": "array"
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "effectiveApplications": {
                "description": "Effective Applications",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assigned Application Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "name"
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications"
                    ],
                    [
                      "applications"
                    ]
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Applications",
                "type": "array",
                "viewable": false
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*"
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "assignments"
                    ],
                    [
                      "assignments"
                    ]
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups"
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles"
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/alpha_group",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId"
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string"
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string"
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object"
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp"
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object"
                    },
                    "title": "Effective Assignments",
                    "type": "array"
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string"
                  }
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format"
                  }
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string"
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string"
                      }
                    },
                    "title": "Manager _refProperties",
                    "type": "object"
                  }
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn"
                      ],
                      "queryFilter": "true"
                    }
                  }
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs"
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "ownerOfApp": {
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name"
                        ]
                      }
                    }
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Applications I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing"
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean"
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean"
                  }
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username"
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  },
                  {
                    "params": {
                      "minLength": 1
                    },
                    "policyId": "minimum-length"
                  },
                  {
                    "params": {
                      "maxLength": 255
                    },
                    "policyId": "maximum-length"
                  }
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              }
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail"
            ],
            "title": "Alpha realm - User",
            "type": "object",
            "viewable": true
          }
        },
        {
          "lastSync": {
            "effectiveAssignmentsProperty": "effectiveAssignments",
            "lastSyncProperty": "lastSync"
          },
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/bravo_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged"
            ]
          },
          "name": "bravo_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "assignments",
              "groups",
              "applications",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "effectiveGroups",
              "effectiveApplications",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "ownerOfApp",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard"
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  }
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string"
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false
              },
              "applications": {
                "description": "Applications",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name"
                        ]
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": true,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "name"
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications"
                    ],
                    [
                      "applications"
                    ]
                  ]
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "assignments": {
                "description": "Assignments",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Assignments Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Assignments",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "cn": {
                "default": "{{givenName}} {{sn}}",
                "description": "Common Name",
                "isPersonal": true,
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate"
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true
                      }
                    },
                    "required": [
                      "mapping",
                      "consentDate"
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object"
                  },
                  "title": "Consented Mappings Items",
                  "type": "array"
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "effectiveApplications": {
                "description": "Effective Applications",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assigned Application Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "name"
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications"
                    ],
                    [
                      "applications"
                    ]
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Applications",
                "type": "array",
                "viewable": false
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*"
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "assignments"
                    ],
                    [
                      "assignments"
                    ]
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups"
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object"
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles"
                  ]
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string"
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/bravo_group",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId"
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string"
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string"
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object"
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp"
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object"
                    },
                    "title": "Effective Assignments",
                    "type": "array"
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string"
                  }
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format"
                  }
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string"
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string"
                      }
                    },
                    "title": "Manager _refProperties",
                    "type": "object"
                  }
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/bravo_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn"
                      ],
                      "queryFilter": "true"
                    }
                  }
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs"
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "ownerOfApp": {
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name"
                        ]
                      }
                    }
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Applications I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing"
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean"
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean"
                  }
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username"
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  },
                  {
                    "params": {
                      "minLength": 1
                    },
                    "policyId": "minimum-length"
                  },
                  {
                    "params": {
                      "maxLength": 255
                    },
                    "policyId": "maximum-length"
                  }
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true
              }
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail"
            ],
            "title": "Bravo realm - User",
            "type": "object",
            "viewable": true
          }
        },
        {
          "name": "alpha_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "applications",
              "condition",
              "temporalConstraints"
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false
              },
              "applications": {
                "description": "Role Applications",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Role Application Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Application Items",
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "members"
                ],
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "viewable": false
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "members"
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "policies": [
                  {
                    "policyId": "unique"
                  }
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration"
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string"
                    }
                  },
                  "required": [
                    "duration"
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object"
                },
                "notifyRelationships": [
                  "members"
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false
              }
            },
            "required": [
              "name"
            ],
            "title": "Alpha realm - Role",
            "type": "object"
          }
        },
        {
          "name": "bravo_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "applications",
              "condition",
              "temporalConstraints"
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false
              },
              "applications": {
                "description": "Role Applications",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Role Application Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Application Items",
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "members"
                ],
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "viewable": false
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "members"
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "policies": [
                  {
                    "policyId": "unique"
                  }
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration"
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string"
                    }
                  },
                  "required": [
                    "duration"
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object"
                },
                "notifyRelationships": [
                  "members"
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false
              }
            },
            "required": [
              "name"
            ],
            "title": "Bravo realm - Role",
            "type": "object"
          }
        },
        {
          "attributeEncryption": {},
          "name": "alpha_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "type",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
              "members",
              "condition",
              "weight"
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value"
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name",
                      "type": "string"
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object"
                },
                "notifyRelationships": [
                  "roles",
                  "members"
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true
              },
              "condition": {
                "description": "A conditional filter for this assignment",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string"
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists"
                  }
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true
              },
              "members": {
                "description": "Assignment Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Assignment Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Assignment Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Assignment Members",
                "type": "array",
                "viewable": true
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "type": {
                "description": "The type of object this assignment represents",
                "title": "Type",
                "type": "string",
                "viewable": true
              },
              "weight": {
                "description": "The weight of the assignment.",
                "notifyRelationships": [
                  "roles",
                  "members"
                ],
                "searchable": false,
                "title": "Weight",
                "type": [
                  "number",
                  "null"
                ],
                "viewable": true
              }
            },
            "required": [
              "name",
              "description",
              "mapping"
            ],
            "title": "Alpha realm - Assignment",
            "type": "object"
          }
        },
        {
          "attributeEncryption": {},
          "name": "bravo_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "type",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
              "members",
              "condition",
              "weight"
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value"
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name",
                      "type": "string"
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object"
                },
                "notifyRelationships": [
                  "roles",
                  "members"
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true
              },
              "condition": {
                "description": "A conditional filter for this assignment",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string"
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists"
                  }
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true
              },
              "members": {
                "description": "Assignment Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Assignment Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Assignment Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Assignment Members",
                "type": "array",
                "viewable": true
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "type": {
                "description": "The type of object this assignment represents",
                "title": "Type",
                "type": "string",
                "viewable": true
              },
              "weight": {
                "description": "The weight of the assignment.",
                "notifyRelationships": [
                  "roles",
                  "members"
                ],
                "searchable": false,
                "title": "Weight",
                "type": [
                  "number",
                  "null"
                ],
                "viewable": true
              }
            },
            "required": [
              "name",
              "description",
              "mapping"
            ],
            "title": "Bravo realm - Assignment",
            "type": "object"
          }
        },
        {
          "name": "alpha_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "mat-icon": "domain",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs"
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id"
                  ],
                  "referencedRelationshipFields": [
                    "admins"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "children"
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id"
                  ],
                  "referencedRelationshipFields": [
                    "owners"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "children"
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members"
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string"
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/alpha_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description"
                      ],
                      "queryFilter": "true",
                      "sortKeys": []
                    }
                  }
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs"
                  ],
                  "referencedRelationshipFields": [
                    "parent"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs"
                  ],
                  "referencedRelationshipFields": [
                    "parent"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs"
                  ],
                  "referencedRelationshipFields": [
                    "parent"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false
              }
            },
            "required": [
              "name"
            ],
            "title": "Alpha realm - Organization",
            "type": "object"
          }
        },
        {
          "name": "bravo_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "mat-icon": "domain",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs"
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id"
                  ],
                  "referencedRelationshipFields": [
                    "admins"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "children"
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id"
                  ],
                  "referencedRelationshipFields": [
                    "owners"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "notifyRelationships": [
                  "children"
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members"
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string"
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/bravo_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description"
                      ],
                      "queryFilter": "true",
                      "sortKeys": []
                    }
                  }
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs"
                  ],
                  "referencedRelationshipFields": [
                    "parent"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs"
                  ],
                  "referencedRelationshipFields": [
                    "parent"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string"
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs"
                  ],
                  "referencedRelationshipFields": [
                    "parent"
                  ]
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false
              }
            },
            "required": [
              "name"
            ],
            "title": "Bravo realm - Organization",
            "type": "object"
          }
        },
        {
          "name": "alpha_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members"
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name"
                    },
                    "policyId": "id-must-equal-property"
                  }
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter"
                  }
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required"
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  }
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true
              }
            },
            "required": [
              "name"
            ],
            "title": "Alpha realm - Group",
            "viewable": true
          }
        },
        {
          "name": "bravo_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members"
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name"
                    },
                    "policyId": "id-must-equal-property"
                  }
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter"
                  }
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required"
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  }
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true
              }
            },
            "required": [
              "name"
            ],
            "title": "Bravo realm - Group",
            "viewable": true
          }
        },
        {
          "name": "alpha_application",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "Application Object",
            "icon": "fa-folder",
            "order": [
              "name",
              "description",
              "url",
              "icon",
              "mappingNames",
              "owners",
              "roles",
              "members"
            ],
            "properties": {
              "_id": {
                "description": "Application ID",
                "isPersonal": false,
                "searchable": false,
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "authoritative": {
                "description": "Is this an authoritative application",
                "searchable": false,
                "title": "Authoritative",
                "type": "boolean",
                "viewable": false
              },
              "connectorId": {
                "description": "Id of the connector associated with the application",
                "searchable": false,
                "title": "Connector ID",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "description": {
                "description": "Application Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true
              },
              "icon": {
                "searchable": true,
                "title": "Icon",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "mappingNames": {
                "description": "Names of the sync mappings used by an application with provisioning configured.",
                "items": {
                  "title": "Mapping Name Items",
                  "type": "string"
                },
                "searchable": true,
                "title": "Sync Mapping Names",
                "type": "array",
                "viewable": true
              },
              "members": {
                "description": "Application Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "name": {
                "description": "Application name",
                "notifyRelationships": [
                  "roles",
                  "members"
                ],
                "policies": [
                  {
                    "policyId": "unique"
                  }
                ],
                "returnByDefault": true,
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "owners": {
                "description": "Application Owners",
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Application _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "ownerOfApp",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Owners",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "roles": {
                "description": "Roles granting users the application",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "ssoEntities": {
                "description": "SSO Entity Id",
                "properties": {
                  "idpLocation": {
                    "type": "string"
                  },
                  "idpPrivateId": {
                    "type": "string"
                  },
                  "spLocation": {
                    "type": "string"
                  },
                  "spPrivate": {
                    "type": "string"
                  }
                },
                "searchable": false,
                "title": "SSO Entity Id",
                "type": "object",
                "userEditable": false,
                "viewable": false
              },
              "templateName": {
                "description": "Name of the template the application was created from",
                "searchable": false,
                "title": "Template Name",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "templateVersion": {
                "description": "The template version",
                "searchable": false,
                "title": "Template Version",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "uiConfig": {
                "description": "UI Config",
                "isPersonal": false,
                "properties": {},
                "searchable": false,
                "title": "UI Config",
                "type": "object",
                "usageDescription": "",
                "viewable": false
              },
              "url": {
                "searchable": true,
                "title": "Url",
                "type": "string",
                "userEditable": true,
                "viewable": true
              }
            },
            "required": [
              "name"
            ],
            "title": "Alpha realm - Application",
            "type": "object"
          }
        },
        {
          "name": "bravo_application",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "Application Object",
            "icon": "fa-folder",
            "order": [
              "name",
              "description",
              "url",
              "icon",
              "mappingNames",
              "owners",
              "roles",
              "members"
            ],
            "properties": {
              "_id": {
                "description": "Application ID",
                "isPersonal": false,
                "searchable": false,
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "authoritative": {
                "description": "Is this an authoritative application",
                "searchable": false,
                "title": "Authoritative",
                "type": "boolean",
                "viewable": false
              },
              "connectorId": {
                "description": "Id of the connector associated with the application",
                "searchable": false,
                "title": "Connector ID",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "description": {
                "description": "Application Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true
              },
              "icon": {
                "searchable": true,
                "title": "Icon",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "mappingNames": {
                "description": "Names of the sync mappings used by an application with provisioning configured.",
                "items": {
                  "title": "Mapping Name Items",
                  "type": "string"
                },
                "searchable": true,
                "title": "Sync Mapping Names",
                "type": "array",
                "viewable": true
              },
              "members": {
                "description": "Application Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string"
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "name": {
                "description": "Application name",
                "notifyRelationships": [
                  "roles",
                  "members"
                ],
                "policies": [
                  {
                    "policyId": "unique"
                  }
                ],
                "returnByDefault": true,
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true
              },
              "owners": {
                "description": "Application Owners",
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Application _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "ownerOfApp",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Owners",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "roles": {
                "description": "Roles granting users the application",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true
              },
              "ssoEntities": {
                "description": "SSO Entity Id",
                "properties": {
                  "idpLocation": {
                    "type": "string"
                  },
                  "idpPrivateId": {
                    "type": "string"
                  },
                  "spLocation": {
                    "type": "string"
                  },
                  "spPrivate": {
                    "type": "string"
                  }
                },
                "searchable": false,
                "title": "SSO Entity Id",
                "type": "object",
                "userEditable": false,
                "viewable": false
              },
              "templateName": {
                "description": "Name of the template the application was created from",
                "searchable": false,
                "title": "Template Name",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "templateVersion": {
                "description": "The template version",
                "searchable": false,
                "title": "Template Version",
                "type": "string",
                "userEditable": false,
                "viewable": false
              },
              "uiConfig": {
                "description": "UI Config",
                "isPersonal": false,
                "properties": {},
                "searchable": false,
                "title": "UI Config",
                "type": "object",
                "usageDescription": "",
                "viewable": false
              },
              "url": {
                "searchable": true,
                "title": "Url",
                "type": "string",
                "userEditable": true,
                "viewable": true
              }
            },
            "required": [
              "name"
            ],
            "title": "Bravo realm - Application",
            "type": "object"
          }
        }
      ]
    },
    "policy": {
      "_id": "policy",
      "additionalFiles": [],
      "resources": []
    },
    "privilegeAssignments": {
      "_id": "privilegeAssignments",
      "privilegeAssignments": [
        {
          "name": "ownerPrivileges",
          "privileges": [
            "owner-view-update-delete-orgs",
            "owner-create-orgs",
            "owner-view-update-delete-admins-and-members",
            "owner-create-admins",
            "admin-view-update-delete-members",
            "admin-create-members"
          ],
          "relationshipField": "ownerOfOrg"
        },
        {
          "name": "adminPrivileges",
          "privileges": [
            "admin-view-update-delete-orgs",
            "admin-create-orgs",
            "admin-view-update-delete-members",
            "admin-create-members"
          ],
          "relationshipField": "adminOfOrg"
        }
      ]
    },
    "privileges": {
      "_id": "privileges",
      "privileges": []
    },
    "provisioner.openicf.connectorinfoprovider": {
      "_id": "provisioner.openicf.connectorinfoprovider",
      "connectorsLocation": "connectors",
      "remoteConnectorClients": [
        {
          "enabled": true,
          "name": "rcs1",
          "useSSL": true
        }
      ],
      "remoteConnectorClientsGroups": [],
      "remoteConnectorServers": [],
      "remoteConnectorServersGroups": []
    },
    "repo.ds": {
      "_id": "repo.ds",
      "resourceMapping": {
        "explicitMapping": {
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming"
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj"
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple"
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference"
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple"
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple"
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple"
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple"
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple"
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple"
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple"
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple"
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple"
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple"
              }
            }
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames"
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple"
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple"
              }
            }
          }
        },
        "genericMapping": {
          "managed/alpha_application": {
            "dnTemplate": "ou=application,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-application-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-application"
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "applications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-application-name",
                "type": "simple"
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfApp",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "roles": {
                "isMultiValued": true,
                "propertyName": "applications",
                "resourcePath": "managed/alpha_role",
                "type": "reverseReference"
              }
            }
          },
          "managed/alpha_assignment": {
            "dnTemplate": "ou=assignment,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-assignment-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-assignment"
            ],
            "properties": {
              "condition": {
                "ldapAttribute": "fr-idm-assignment-condition",
                "type": "simple"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "assignments",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "roles": {
                "isMultiValued": true,
                "propertyName": "assignments",
                "resourcePath": "managed/alpha_role",
                "type": "reverseReference"
              }
            }
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property"
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming"
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group"
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly"
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple"
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              }
            }
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs"
            ],
            "properties": {
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple"
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference"
              }
            }
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role"
            ],
            "properties": {
              "applications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-role-applications",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_application",
                "type": "reference"
              },
              "assignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-role-assignments",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_assignment",
                "type": "reference"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              }
            }
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming"
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs"
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple"
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference"
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference"
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple"
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference"
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple"
              },
              "applications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-application-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_application",
                "type": "reference"
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple"
              },
              "assignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-assignment-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_assignment",
                "type": "reference"
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference"
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple"
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple"
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json"
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple"
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple"
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple"
              },
              "effectiveApplications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveApplications",
                "type": "json"
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json"
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json"
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json"
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple"
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple"
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple"
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple"
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple"
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple"
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple"
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple"
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple"
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple"
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple"
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple"
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple"
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple"
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple"
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple"
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple"
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple"
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple"
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple"
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple"
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple"
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple"
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple"
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple"
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple"
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple"
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple"
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple"
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple"
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple"
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple"
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple"
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple"
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple"
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple"
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple"
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple"
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple"
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple"
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple"
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference"
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json"
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json"
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple"
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference"
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference"
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple"
              },
              "ownerOfApp": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-application-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_application",
                "type": "reference"
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference"
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple"
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple"
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple"
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json"
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple"
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference"
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple"
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple"
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple"
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple"
              }
            }
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj"
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference"
              }
            }
          },
          "managed/bravo_application": {
            "dnTemplate": "ou=application,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-application-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-application"
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "applications",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-application-name",
                "type": "simple"
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfApp",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "roles": {
                "isMultiValued": true,
                "propertyName": "applications",
                "resourcePath": "managed/bravo_role",
                "type": "reverseReference"
              }
            }
          },
          "managed/bravo_assignment": {
            "dnTemplate": "ou=assignment,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-assignment-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-assignment"
            ],
            "properties": {
              "condition": {
                "ldapAttribute": "fr-idm-assignment-condition",
                "type": "simple"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "assignments",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "roles": {
                "isMultiValued": true,
                "propertyName": "assignments",
                "resourcePath": "managed/bravo_role",
                "type": "reverseReference"
              }
            }
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property"
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming"
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group"
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly"
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple"
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              }
            }
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs"
            ],
            "properties": {
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple"
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference"
              }
            }
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role"
            ],
            "properties": {
              "applications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-role-applications",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_application",
                "type": "reference"
              },
              "assignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-role-assignments",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_assignment",
                "type": "reference"
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              }
            }
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming"
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs"
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple"
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference"
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference"
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple"
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference"
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple"
              },
              "applications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-application-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_application",
                "type": "reference"
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple"
              },
              "assignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-assignment-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_assignment",
                "type": "reference"
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference"
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple"
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple"
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json"
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple"
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple"
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple"
              },
              "effectiveApplications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveApplications",
                "type": "json"
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json"
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json"
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json"
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple"
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple"
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple"
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple"
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple"
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple"
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple"
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple"
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple"
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple"
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple"
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple"
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple"
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple"
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple"
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple"
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple"
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple"
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple"
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple"
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple"
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple"
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple"
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple"
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple"
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple"
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple"
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple"
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple"
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple"
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple"
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple"
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple"
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple"
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple"
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple"
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple"
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple"
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple"
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple"
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple"
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference"
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json"
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json"
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple"
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference"
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference"
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple"
              },
              "ownerOfApp": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-application-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_application",
                "type": "reference"
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference"
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple"
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple"
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple"
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json"
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple"
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference"
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple"
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple"
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple"
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple"
              }
            }
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj"
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference"
              }
            }
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj"
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference"
              }
            }
          }
        }
      }
    },
    "router": {
      "_id": "router",
      "filters": []
    },
    "secrets": {
      "_id": "secrets",
      "populateDefaults": true,
      "stores": [
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
            "mappings": [
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                  "openidm-localhost"
                ],
                "secretId": "idm.default",
                "types": [
                  "ENCRYPT",
                  "DECRYPT"
                ]
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}"
                ],
                "secretId": "idm.config.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT"
                ]
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}"
                ],
                "secretId": "idm.password.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT"
                ]
              },
              {
                "aliases": [
                  "&{openidm.https.keystore.cert.alias|openidm-localhost}"
                ],
                "secretId": "idm.jwt.session.module.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT"
                ]
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}"
                ],
                "secretId": "idm.jwt.session.module.signing",
                "types": [
                  "SIGN",
                  "VERIFY"
                ]
              },
              {
                "aliases": [
                  "selfservice"
                ],
                "secretId": "idm.selfservice.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT"
                ]
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}"
                ],
                "secretId": "idm.selfservice.signing",
                "types": [
                  "SIGN",
                  "VERIFY"
                ]
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}"
                ],
                "secretId": "idm.assignment.attribute.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT"
                ]
              }
            ],
            "providerName": "&{openidm.keystore.provider|SunJCE}",
            "storePassword": "&{openidm.keystore.password|changeit}",
            "storetype": "&{openidm.keystore.type|JCEKS}"
          },
          "name": "mainKeyStore"
        },
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
            "mappings": [],
            "providerName": "&{openidm.truststore.provider|SUN}",
            "storePassword": "&{openidm.truststore.password|changeit}",
            "storetype": "&{openidm.truststore.type|JKS}"
          },
          "name": "mainTrustStore"
        }
      ]
    },
    "selfservice.kba": {
      "_id": "selfservice.kba",
      "kbaPropertyName": "kbaInfo",
      "minimumAnswersToDefine": 1,
      "minimumAnswersToVerify": 1,
      "questions": {
        "1": {
          "en": "What's your favorite color?"
        }
      }
    },
    "selfservice.terms": {
      "_id": "selfservice.terms",
      "active": "0.0",
      "uiConfig": {
        "buttonText": "Accept",
        "displayName": "We've updated our terms",
        "purpose": "You must accept the updated terms in order to proceed."
      },
      "versions": [
        {
          "createDate": "2019-10-28T04:20:11.320Z",
          "termsTranslations": {
            "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
          },
          "version": "0.0"
        }
      ]
    },
    "servletfilter/cors": {
      "_id": "servletfilter/cors",
      "initParams": {
        "allowCredentials": false,
        "allowedHeaders": "authorization,accept,content-type,origin,x-requested-with,cache-control,accept-api-version,if-match,if-none-match",
        "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
        "allowedOrigins": "*",
        "chainPreflight": false,
        "exposedHeaders": "WWW-Authenticate"
      },
      "urlPatterns": [
        "/*"
      ]
    },
    "servletfilter/payload": {
      "_id": "servletfilter/payload",
      "initParams": {
        "maxRequestSizeInMegabytes": 5
      },
      "urlPatterns": [
        "&{openidm.servlet.alias}/*"
      ]
    },
    "servletfilter/upload": {
      "_id": "servletfilter/upload",
      "initParams": {
        "maxRequestSizeInMegabytes": 50
      },
      "urlPatterns": [
        "&{openidm.servlet.upload.alias}/*"
      ]
    },
    "ui.context/admin": {
      "_id": "ui.context/admin",
      "defaultDir": "&{idm.install.dir}/ui/admin/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/admin/extension",
      "responseHeaders": {
        "X-Frame-Options": "SAMEORIGIN"
      },
      "urlContextRoot": "/admin"
    },
    "ui.context/api": {
      "_id": "ui.context/api",
      "authEnabled": true,
      "cacheEnabled": false,
      "defaultDir": "&{idm.install.dir}/ui/api/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/api/extension",
      "urlContextRoot": "/api"
    },
    "ui.context/enduser": {
      "_id": "ui.context/enduser",
      "defaultDir": "&{idm.install.dir}/ui/enduser",
      "enabled": true,
      "responseHeaders": {
        "X-Frame-Options": "DENY"
      },
      "urlContextRoot": "/"
    },
    "ui.context/oauth": {
      "_id": "ui.context/oauth",
      "cacheEnabled": true,
      "defaultDir": "&{idm.install.dir}/ui/oauth/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
      "urlContextRoot": "/oauthReturn"
    },
    "ui/configuration": {
      "_id": "ui/configuration",
      "configuration": {
        "defaultNotificationType": "info",
        "forgotUsername": false,
        "lang": "en",
        "notificationTypes": {
          "error": {
            "iconPath": "images/notifications/error.png",
            "name": "common.notification.types.error"
          },
          "info": {
            "iconPath": "images/notifications/info.png",
            "name": "common.notification.types.info"
          },
          "warning": {
            "iconPath": "images/notifications/warning.png",
            "name": "common.notification.types.warning"
          }
        },
        "passwordReset": true,
        "passwordResetLink": "",
        "platformSettings": {
          "adminOauthClient": "idmAdminClient",
          "adminOauthClientScopes": "fr:idm:*",
          "amUrl": "/am",
          "loginUrl": ""
        },
        "roles": {
          "internal/role/openidm-admin": "ui-admin",
          "internal/role/openidm-authorized": "ui-user"
        },
        "selfRegistration": true
      }
    },
    "ui/dashboard": {
      "_id": "ui/dashboard",
      "adminDashboards": [
        {
          "isDefault": true,
          "name": "Quick Start",
          "widgets": [
            {
              "cards": [
                {
                  "href": "#resource/managed/alpha_user/list/",
                  "icon": "fa-user",
                  "name": "Manage Users"
                },
                {
                  "href": "#resource/managed/alpha_role/list/",
                  "icon": "fa-check-square-o",
                  "name": "Manage Roles"
                },
                {
                  "href": "#connectors/add/",
                  "icon": "fa-database",
                  "name": "Add Connector"
                },
                {
                  "href": "#mapping/add/",
                  "icon": "fa-map-marker",
                  "name": "Create Mapping"
                },
                {
                  "href": "#managed/add/",
                  "icon": "fa-tablet",
                  "name": "Add Device"
                },
                {
                  "href": "#settings/",
                  "icon": "fa-user",
                  "name": "Configure System Preferences"
                }
              ],
              "size": "large",
              "type": "quickStart"
            }
          ]
        },
        {
          "isDefault": false,
          "name": "System Monitoring",
          "widgets": [
            {
              "legendRange": {
                "month": [
                  500,
                  2500,
                  5000
                ],
                "week": [
                  10,
                  30,
                  90,
                  270,
                  810
                ],
                "year": [
                  10000,
                  40000,
                  100000,
                  250000
                ]
              },
              "maxRange": "#24423c",
              "minRange": "#b0d4cd",
              "size": "large",
              "type": "audit"
            },
            {
              "size": "large",
              "type": "clusterStatus"
            },
            {
              "size": "large",
              "type": "systemHealthFull"
            },
            {
              "barchart": "false",
              "size": "large",
              "type": "lastRecon"
            }
          ]
        },
        {
          "isDefault": false,
          "name": "Resource Report",
          "widgets": [
            {
              "selected": "activeUsers",
              "size": "x-small",
              "type": "counter"
            },
            {
              "selected": "rolesEnabled",
              "size": "x-small",
              "type": "counter"
            },
            {
              "selected": "activeConnectors",
              "size": "x-small",
              "type": "counter"
            },
            {
              "size": "large",
              "type": "resourceList"
            }
          ]
        },
        {
          "isDefault": false,
          "name": "Business Report",
          "widgets": [
            {
              "graphType": "fa-pie-chart",
              "providers": [
                "Username/Password"
              ],
              "size": "x-small",
              "type": "signIns",
              "widgetTitle": "Sign-Ins"
            },
            {
              "graphType": "fa-bar-chart",
              "size": "x-small",
              "type": "passwordResets",
              "widgetTitle": "Password Resets"
            },
            {
              "graphType": "fa-line-chart",
              "providers": [
                "Username/Password"
              ],
              "size": "x-small",
              "type": "newRegistrations",
              "widgetTitle": "New Registrations"
            },
            {
              "size": "x-small",
              "timezone": {
                "hours": "07",
                "minutes": "00",
                "negative": true
              },
              "type": "socialLogin"
            },
            {
              "selected": "socialEnabled",
              "size": "x-small",
              "type": "counter"
            },
            {
              "selected": "manualRegistrations",
              "size": "x-small",
              "type": "counter"
            }
          ]
        }
      ],
      "dashboard": {
        "widgets": [
          {
            "size": "large",
            "type": "Welcome"
          }
        ]
      }
    },
    "ui/profile": {
      "_id": "ui/profile",
      "tabs": [
        {
          "name": "personalInfoTab",
          "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab"
        },
        {
          "name": "signInAndSecurity",
          "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab"
        },
        {
          "name": "preference",
          "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab"
        },
        {
          "name": "trustedDevice",
          "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab"
        },
        {
          "name": "oauthApplication",
          "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab"
        },
        {
          "name": "privacyAndConsent",
          "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab"
        },
        {
          "name": "sharing",
          "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab"
        },
        {
          "name": "auditHistory",
          "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab"
        },
        {
          "name": "accountControls",
          "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab"
        }
      ]
    },
    "ui/themeconfig": {
      "_id": "ui/themeconfig",
      "icon": "favicon.ico",
      "path": "",
      "settings": {
        "footer": {
          "mailto": "info@forgerock.com"
        },
        "loginLogo": {
          "alt": "ForgeRock",
          "height": "104px",
          "src": "images/login-logo-dark.png",
          "title": "ForgeRock",
          "width": "210px"
        },
        "logo": {
          "alt": "ForgeRock",
          "src": "images/logo-horizontal-white.png",
          "title": "ForgeRock"
        }
      },
      "stylesheets": [
        "css/bootstrap-3.4.1-custom.css",
        "css/structure.css",
        "css/theme.css"
      ]
    },
    "ui/themerealm": {
      "_id": "ui/themerealm",
      "realm": {
        "alpha": [
          {
            "accountFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\" style=\"color: #5e6d82\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\" style=\"color: #5e6d82\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class=\"w-100\">\n    <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n        <div class=\"container w-100\">\n            <div class=\"mt-5 py-4 border-top border-darkened\">\n                <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Company\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Support\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Community\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                            <span class=\"pr-1\">&copy; 2021</span>\n                            <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Highlander, Inc.</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</footer>\n\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class=\"w-100\">\n            <div\n              class=\"\n                d-flex\n                flex-column flex-md-row\n                justify-content-center\n                align-items-center\n                py-4\n              \"\n            >\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Company\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >About Us</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Contact Us</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Privacy &amp; Terms</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Support\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Help Center</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Docs</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Privacy &amp; Terms</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Community\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Facebook</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Twitter</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Forum</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                      <div\n                        class=\"\n                          d-flex\n                          align-items-center\n                          justify-content-lg-end\n                          py-4 py-lg-0\n                        \"\n                      >\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\"\n                          >Rob Roy Markets, Inc</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </footer>\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src=\"https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg\" class=\"w-100\">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<footer>\n  <div class=\"container-md\">\n    <div class=\"py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100\">\n      <div class=\"text-nowrap\">\n        <span class=\"pr-1\">© 2022</span>\n        <a href=\"#\" target=\"_blank\" class=\"notranslate text-body\">Zardoz, Inc</a>\n      </div>\n      <ul class=\"nav\">\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">Privacy Policy</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">Terms of Use</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>\n            <div class=\"container-md\">\n            <div class=\"py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100\">\n              <div class=\"text-nowrap\">\n                <span class=\"pr-1\">© 2022</span>\n                <a href=\"#\" target=\"_blank\" class=\"notranslate text-body\">Zardoz, Inc</a>\n              </div>\n              <ul class=\"nav\">\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link\">Privacy Policy</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link\">Terms of Use</a>\n                </li>\n              </ul>\n            </div>\n            </div>\n          </footer>\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style=\"display: flex; background-color: black; height: 100vh;\">\n    <div class=\"d-none d-md-flex justify-content-center align-items-center p-5\" style=\"background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);\n    background-size: cover;\"><h1 class=\"text-center display-3\" style=\"color: rgb(255, 255, 255);\">Uptime &amp; Performance Benchmarking Made Easy</h1></div>\n</div>\n\n",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\" style=\"color: #5e6d82\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\" style=\"color: #5e6d82\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class=\"w-100\">\n    <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n        <div class=\"container w-100\">\n            <div class=\"mt-5 py-4 border-top border-darkened\">\n                <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Company\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Support\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Community\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                            <span class=\"pr-1\">&copy; 2021</span>\n                            <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Highlander, Inc.</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</footer>\n\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          }
        ],
        "bravo": [
          {
            "accountFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\" style=\"color: #5e6d82\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\" style=\"color: #5e6d82\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class=\"w-100\">\n    <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n        <div class=\"container w-100\">\n            <div class=\"mt-5 py-4 border-top border-darkened\">\n                <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Company\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Support\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Community\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                            <span class=\"pr-1\">&copy; 2021</span>\n                            <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Highlander, Inc.</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</footer>\n\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class=\"w-100\">\n            <div\n              class=\"\n                d-flex\n                flex-column flex-md-row\n                justify-content-center\n                align-items-center\n                py-4\n              \"\n            >\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Company\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >About Us</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Contact Us</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Privacy &amp; Terms</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Support\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Help Center</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Docs</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Privacy &amp; Terms</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Community\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Facebook</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Twitter</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Forum</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                      <div\n                        class=\"\n                          d-flex\n                          align-items-center\n                          justify-content-lg-end\n                          py-4 py-lg-0\n                        \"\n                      >\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\"\n                          >Rob Roy Markets, Inc</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </footer>\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src=\"https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg\" class=\"w-100\">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          },
          {
            "accountFooter": "<footer>\n  <div class=\"container-md\">\n    <div class=\"py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100\">\n      <div class=\"text-nowrap\">\n        <span class=\"pr-1\">© 2022</span>\n        <a href=\"#\" target=\"_blank\" class=\"notranslate text-body\">Zardoz, Inc</a>\n      </div>\n      <ul class=\"nav\">\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">Privacy Policy</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">Terms of Use</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</footer>\n",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true
                  },
                  "securityQuestions": {
                    "enabled": false
                  },
                  "twoStepVerification": {
                    "enabled": true
                  },
                  "username": {
                    "enabled": true
                  }
                }
              },
              "consent": {
                "enabled": false
              },
              "oauthApplications": {
                "enabled": false
              },
              "personalInformation": {
                "enabled": true
              },
              "preferences": {
                "enabled": false
              },
              "social": {
                "enabled": false
              },
              "trustedDevices": {
                "enabled": true
              }
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>\n            <div class=\"container-md\">\n            <div class=\"py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100\">\n              <div class=\"text-nowrap\">\n                <span class=\"pr-1\">© 2022</span>\n                <a href=\"#\" target=\"_blank\" class=\"notranslate text-body\">Zardoz, Inc</a>\n              </div>\n              <ul class=\"nav\">\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link\">Privacy Policy</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link\">Terms of Use</a>\n                </li>\n              </ul>\n            </div>\n            </div>\n          </footer>\n",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style=\"display: flex; background-color: black; height: 100vh;\">\n    <div class=\"d-none d-md-flex justify-content-center align-items-center p-5\" style=\"background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);\n    background-size: cover;\"><h1 class=\"text-center display-3\" style=\"color: rgb(255, 255, 255);\">Uptime &amp; Performance Benchmarking Made Easy</h1></div>\n</div>\n\n",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff"
          }
        ]
      }
    }
  },
  "emailTemplate": {
    "forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href=\"{{object.resumeURI}}\">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href=\"{{object.resumeURI}}\">Cliquez ici pour vous connecter</a></p></body></html>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #455469; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style=\"background-color: #324054; color: #455469; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Cliquez ici pour vous connecter</a></p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur"
      }
    },
    "registration": {
      "_id": "emailTemplate/registration",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\">Email verification link</a></p></body></html>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\">Lien de vérification email</a></p></body></html>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Email verification link</a></p></div></body></html>",
        "fr": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a></p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Register new account",
        "fr": "Créer un nouveau compte"
      }
    },
    "resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href=\"{{object.resumeURI}}\">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href=\"{{object.resumeURI}}\">Mot de passe lien de réinitialisation</a></h4>"
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe"
      }
    },
    "updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href=\"{{object.resumeURI}}\">Update password link</a></p>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3 id=\"verifyemailtoupdatepassword\">Verify email to update password</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Update password link</a></p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password"
      }
    },
    "welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class=\"content\"><p>Welcome. Your username is '{{object.userName}}'.</p></div>"
      },
      "message": {
        "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>"
      },
      "mimeType": "text/html",
      "styles": "body{\n background-color:#324054;\n color:#5e6d82;\n padding:60px;\n text-align:center\n}\na{\n text-decoration:none;\n color:#109cf1\n}\n.content{\n background-color:#fff;\n border-radius:4px;\n margin:0 auto;\n padding:48px;\n width:235px\n}\n",
      "subject": {
        "en": "Your account has been created"
      }
    }
  },
  "idp": {
    "adfs": {
      "_id": "adfs",
      "_type": {
        "_id": "oidcConfig",
        "collection": true,
        "name": "Client configuration for providers that implement the OpenID Connect specification."
      },
      "acrValues": [],
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "aa9a179e-cdba-4db8-8477-3d1069d5ec04",
      "enableNativeNonce": true,
      "enabled": true,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://adfs.mytestrun.com/adfs",
      "issuerComparisonCheckType": "EXACT",
      "jwksUriEndpoint": "https://adfs.mytestrun.com/adfs/discovery/keys",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "RS256",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email"
      ],
      "tokenEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/token",
      "transform": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft ADFS",
        "buttonImage": "/login/images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white"
      },
      "useCustomTrustStore": false,
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://adfs.mytestrun.com/adfs/.well-known/openid-configuration"
    },
    "github": {
      "_id": "github",
      "_type": {
        "_id": "oauth2Config",
        "collection": true,
        "name": "Client configuration for providers that implement the OAuth2 specification."
      },
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://github.com/login/oauth/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "bdae6d141d4dcf95a630",
      "enabled": true,
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "user"
      ],
      "tokenEndpoint": "https://ig.mytestrun.com/login/oauth/access_token",
      "transform": "23143919-6b78-40c3-b25e-beca19b229e0",
      "uiConfig": {
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "GitHub",
        "buttonImage": "https://cdn-icons-png.flaticon.com/512/25/25231.png",
        "iconBackground": "#4184f3",
        "iconFontColor": "white"
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://ig.mytestrun.com/user"
    },
    "google": {
      "_id": "google",
      "_type": {
        "_id": "googleConfig",
        "collection": true,
        "name": "Client configuration for Google."
      },
      "acrValues": [],
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "297338177925-mho17cgnm540s2gre8h27feb6sbs1msd.apps.googleusercontent.com",
      "enableNativeNonce": true,
      "enabled": true,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://accounts.google.com",
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email"
      ],
      "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
      "transform": "58d29080-4563-480b-89bb-1e7719776a21",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "Google",
        "buttonImage": "images/g-logo.png",
        "iconBackground": "#4184f3",
        "iconClass": "fa-google",
        "iconFontColor": "white"
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration"
    }
  },
  "managedApplication": {
    "e124e6f6-e25a-4180-a6c3-ff8b782a422c": {
      "_id": "e124e6f6-e25a-4180-a6c3-ff8b782a422c",
      "authoritative": true,
      "icon": "",
      "name": "testLDAP",
      "templateName": "ldap",
      "templateVersion": "2.1"
    }
  },
  "meta": {
    "exportDate": "2023-12-14T16:59:16.778Z",
    "exportTool": "frodo",
    "exportToolVersion": "v2.0.0-54 [v18.5.0]",
    "exportedBy": "phales@trivir.com",
    "origin": "https://openam-frodo-dev.forgeblocks.com/am",
    "originAmVersion": "7.5.0"
  },
  "policy": {
    "FeatureStorePolicy": {
      "_id": "FeatureStorePolicy",
      "actionValues": {},
      "active": true,
      "applicationName": "test-policy-set",
      "createdBy": "id=76618ff6-e851-433e-9704-9d2852a17b7a,ou=user,ou=am-config",
      "creationDate": "2023-12-11T19:52:32.441Z",
      "description": "FeatureStorePolicy",
      "lastModifiedBy": "id=76618ff6-e851-433e-9704-9d2852a17b7a,ou=user,ou=am-config",
      "lastModifiedDate": "2023-12-11T19:52:48.71Z",
      "name": "FeatureStorePolicy",
      "resourceTypeUuid": "76656a38-5f8e-401b-83aa-4ccb74ce88d2",
      "resources": [
        "https://www.example.com:443/*"
      ],
      "subject": {
        "type": "NONE"
      }
    },
    "Test Policy": {
      "_id": "Test Policy",
      "actionValues": {
        "GET": true,
        "POST": false
      },
      "active": false,
      "applicationName": "test-policy-set",
      "condition": {
        "conditions": [
          {
            "endDate": "2023:08:02",
            "endDay": "fri",
            "endTime": "11:59",
            "enforcementTimeZone": "GMT",
            "startDate": "2023:08:01",
            "startDay": "mon",
            "startTime": "12:00",
            "type": "SimpleTime"
          },
          {
            "scriptId": "59f84396-71e4-4c1d-a6ae-c4fc624d9752",
            "type": "Script"
          }
        ],
        "type": "AND"
      },
      "createdBy": "id=76618ff6-e851-433e-9704-9d2852a17b7a,ou=user,ou=am-config",
      "creationDate": "2023-12-11T19:52:32.689Z",
      "description": "Test Policy Description",
      "lastModifiedBy": "id=1e9280f6-eab6-467e-889c-83d147c8b936,ou=user,ou=am-config",
      "lastModifiedDate": "2023-12-14T16:52:26.817Z",
      "name": "Test Policy",
      "resourceAttributes": [
        {
          "propertyName": "Test_Name",
          "propertyValues": [
            "Test_Value"
          ],
          "type": "Static"
        }
      ],
      "resourceTypeUuid": "76656a38-5f8e-401b-83aa-4ccb74ce88d2",
      "resources": [
        "lorem://ipsum:dolor/sit"
      ],
      "subject": {
        "type": "NONE"
      }
    }
  },
  "policyset": {
    "FeatureStorePolicySet": {
      "applicationType": "iPlanetAMWebAgentService",
      "attributeNames": [],
      "conditions": [
        "AMIdentityMembership",
        "AND",
        "AuthLevel",
        "AuthScheme",
        "AuthenticateToRealm",
        "AuthenticateToService",
        "IPv4",
        "IPv6",
        "LDAPFilter",
        "LEAuthLevel",
        "NOT",
        "OAuth2Scope",
        "OR",
        "Policy",
        "ResourceEnvIP",
        "Script",
        "Session",
        "SessionProperty",
        "SimpleTime",
        "Transaction"
      ],
      "createdBy": "id=8efaa5b6-8c98-4489-9b21-ee41f5589ab7,ou=user,ou=am-config",
      "creationDate": 1695912757709,
      "description": null,
      "displayName": "FeatureStorePolicySet",
      "editable": true,
      "entitlementCombiner": "DenyOverride",
      "lastModifiedBy": "id=76618ff6-e851-433e-9704-9d2852a17b7a,ou=user,ou=am-config",
      "lastModifiedDate": 1702324352112,
      "name": "FeatureStorePolicySet",
      "resourceComparator": null,
      "resourceTypeUuids": [
        "76656a38-5f8e-401b-83aa-4ccb74ce88d2"
      ],
      "saveIndex": null,
      "searchIndex": null,
      "subjects": [
        "AND",
        "AuthenticatedUsers",
        "Identity",
        "JwtClaim",
        "NONE",
        "NOT",
        "OR",
        "Policy"
      ]
    },
    "oauth2Scopes": {
      "applicationType": "iPlanetAMWebAgentService",
      "attributeNames": [],
      "conditions": [
        "Script",
        "AMIdentityMembership",
        "IPv6",
        "SimpleTime",
        "IPv4",
        "LEAuthLevel",
        "LDAPFilter",
        "AuthScheme",
        "Session",
        "AND",
        "AuthenticateToRealm",
        "ResourceEnvIP",
        "SessionProperty",
        "OAuth2Scope",
        "OR",
        "Transaction",
        "NOT",
        "AuthLevel",
        "AuthenticateToService"
      ],
      "createdBy": "id=dsameuser,ou=user,ou=am-config",
      "creationDate": 1578580064992,
      "description": "The built-in Application used by the OAuth2 scope authorization process.",
      "displayName": "Default OAuth2 Scopes Policy Set",
      "editable": true,
      "entitlementCombiner": "DenyOverride",
      "lastModifiedBy": "id=dsameuser,ou=user,ou=am-config",
      "lastModifiedDate": 1595479030629,
      "name": "oauth2Scopes",
      "resourceComparator": null,
      "resourceTypeUuids": [
        "d60b7a71-1dc6-44a5-8e48-e4b9d92dee8b"
      ],
      "saveIndex": null,
      "searchIndex": null,
      "subjects": [
        "AuthenticatedUsers",
        "NOT",
        "Identity",
        "OR",
        "AND",
        "NONE",
        "JwtClaim"
      ]
    },
    "test-policy-set": {
      "applicationType": "iPlanetAMWebAgentService",
      "attributeNames": [],
      "conditions": [
        "AMIdentityMembership",
        "AND",
        "AuthLevel",
        "AuthScheme",
        "AuthenticateToRealm",
        "AuthenticateToService",
        "IPv4",
        "IPv6",
        "LDAPFilter",
        "LEAuthLevel",
        "NOT",
        "OAuth2Scope",
        "OR",
        "Policy",
        "ResourceEnvIP",
        "Script",
        "Session",
        "SessionProperty",
        "SimpleTime",
        "Transaction"
      ],
      "createdBy": "id=fbdeb2a9-beb6-4a14-ae66-e35f16ce421d,ou=user,ou=am-config",
      "creationDate": 1693494279401,
      "description": "Test Policy Set Description",
      "displayName": "Test Policy Set",
      "editable": true,
      "entitlementCombiner": "DenyOverride",
      "lastModifiedBy": "id=76618ff6-e851-433e-9704-9d2852a17b7a,ou=user,ou=am-config",
      "lastModifiedDate": 1702324368471,
      "name": "test-policy-set",
      "resourceComparator": null,
      "resourceTypeUuids": [
        "76656a38-5f8e-401b-83aa-4ccb74ce88d2"
      ],
      "saveIndex": null,
      "searchIndex": null,
      "subjects": [
        "AND",
        "AuthenticatedUsers",
        "Identity",
        "JwtClaim",
        "NONE",
        "NOT",
        "OR",
        "Policy"
      ]
    }
  },
  "resourcetype": {
    "76656a38-5f8e-401b-83aa-4ccb74ce88d2": {
      "actions": {
        "DELETE": true,
        "GET": true,
        "HEAD": true,
        "OPTIONS": true,
        "PATCH": true,
        "POST": true,
        "PUT": true
      },
      "createdBy": "id=dsameuser,ou=user,ou=am-config",
      "creationDate": 1595479030487,
      "description": "The built-in URL Resource Type available to OpenAMPolicies.",
      "lastModifiedBy": "id=76618ff6-e851-433e-9704-9d2852a17b7a,ou=user,ou=am-config",
      "lastModifiedDate": 1702324368314,
      "name": "URL",
      "patterns": [
        "*://*:*/*",
        "*://*:*/*?*"
      ],
      "uuid": "76656a38-5f8e-401b-83aa-4ccb74ce88d2"
    },
    "d60b7a71-1dc6-44a5-8e48-e4b9d92dee8b": {
      "actions": {
        "GRANT": true
      },
      "createdBy": "id=dsameuser,ou=user,ou=am-config",
      "creationDate": 1595479030586,
      "description": "The built-in OAuth2 Scope Resource Type for OAuth2policy-provided scope.",
      "lastModifiedBy": "id=dsameuser,ou=user,ou=am-config",
      "lastModifiedDate": 1595479030586,
      "name": "OAuth2 Scope",
      "patterns": [
        "*://*:*/*",
        "*://*:*/*?*",
        "*"
      ],
      "uuid": "d60b7a71-1dc6-44a5-8e48-e4b9d92dee8b"
    }
  },
  "saml": {
    "cot": {
      "2f04818d-561e-4f8a-82e8-af2426112138": {
        "_id": "2f04818d-561e-4f8a-82e8-af2426112138",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust"
        },
        "status": "active",
        "trustedProviders": [
          "benefits-IDP|saml2",
          "iSPAzure|saml2"
        ]
      },
      "AzureCOT": {
        "_id": "AzureCOT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust"
        },
        "status": "active",
        "trustedProviders": [
          "iSPAzure|saml2",
          "urn:federation:MicrosoftOnline|saml2",
          "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/|saml2",
          "SPAzure|saml2",
          "https://idc.scheuber.io/am/saml2/IDPAzure|saml2"
        ]
      }
    },
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder"
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure"
            }
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0
                }
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
              ]
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {}
            }
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true
            },
            "adapter": {},
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid"
                }
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper"
            },
            "autoFederation": {
              "autoFedEnabled": false
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI"
            },
            "url": {}
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"
                }
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"
                }
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"
                }
              ]
            }
          }
        }
      }
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>",
        "<EntityDescriptor entityID=\"iSPAzure\" xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:query=\"urn:oasis:names:tc:SAML:metadata:ext:query\" xmlns:mdattr=\"urn:oasis:names:tc:SAML:metadata:attribute\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\" xmlns:xenc11=\"http://www.w3.org/2009/xmlenc11#\" xmlns:alg=\"urn:oasis:names:tc:SAML:metadata:algsupport\" xmlns:x509qry=\"urn:oasis:names:tc:SAML:metadata:X509:query\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">",
        "    <SPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">",
        "        <KeyDescriptor use=\"signing\">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIZKO699rkpmYwDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzEyMDEwMDI2NThaFw0zMzExMjgwMDI2NThaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQC32R6yZEUoqnrQLnw3sKCYy5bxo3TdKdew7AvuxCYwVB3c2khauBqDD99Z",
        "+Dl3Q31vQ3vJ8ZVuXQauHowWT+C6aK/tEhGSeRWPdHzexWW/5OBXHtRJf99HdakUt8HToRquCoyL",
        "d+KrAvg2Cq/f4vb0dIJ3RDQ7BOgmpJ4Ym6Z5B3jAiRSWEP2ZW+RExpyTq8uIPjQGoYbqQSXC/td5",
        "27rAw0Pvlo3YTKrJNVWV+hgIUUPwfuF0ijunPTkseFW6ZH0VWnFswPIvzF5Y6iAjcaFj9aQDyejV",
        "AEWT8mpsPtetbPFWPfZlg4KVbx8tL/u7E27FfWRJr0yRPsXGHvZrUU5lAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBTY0biEminc++0WTPVXy7CqC+fdQDANBgkqhkiG9w0BAQsFAAOCAQEAG0cE49mQ46hmezGB",
        "2E24x+7Czwy9LQXB8vn9xyJEcVCudZ7aZzq3Y5NLjuP8y6rbhnd2v1pTpZHhEP4bfGUBnq2dacqY",
        "LVlQTmEit0p4NNHGNFKQi+96P07bftnVBIf0yN32KPka7nuRsmQNj9PvpnqVMU8Fqhyb26PKQJXA",
        "MVRC4ZYJZMbX/1gQ1YOCATwcHryZkoOFUOeJya9Ard4xmlyi6gX+D51x3zuQjiIql5Qe/MDOvN6v",
        "OdLzwiUdh6qt0NvUee+Fxq1R6afHgz+0M2CY74ZzcRYKHrVvySHFLBpfFJVTv6/KWK2Wsr/20FYt",
        "gKHO7RETEtknWIqelZ2uQg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use=\"encryption\">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDSzCCAjOgAwIBAgIIGacRljg0x5UwDQYJKoZIhvcNAQELBQAwVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDAeFw0yMzEyMDEwMDI3MDBaFw0zMzExMjgwMDI3MDBaMFQxCzAJBgNVBAYTAlVL",
        "MRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sx",
        "DTALBgNVBAMTBHRlc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3tiqY0i+wRCQk",
        "CPTsBvJOjoG5T9X3hKxhYwVSPMZ9MAjP95FOqNXzx+pG9gudjH3deAcqXWCzI8NkAHeG0RVASL1i",
        "Va47wsXn3zzydQFC19C1kOdyLOS69TJp329CkvLF0s14HHvzgMzlWd3tZ9MNbXmSNt8Nn1j+huvv",
        "Ef82c+R3SRZgaOVfTXFTTI7/ITRdybt6khE3nPEO1ad5SfqW0BZuhhh8PNxXMd8LFSjmyY07ThVR",
        "SapJWOx4O/gMbSDumhNzwhB4TD3OFWSRHQ5oX4eO6QzU3pGKz+sLSam6EwyjYboEBlSyFY1Tyld0",
        "CIi0NMOM/0cSsPqxUbwqo3DrAgMBAAGjITAfMB0GA1UdDgQWBBRjGMVgIxS05j+MceyZoMllwO9P",
        "jzANBgkqhkiG9w0BAQsFAAOCAQEAVFikGxSq+8dpg/QEEo0Q1k5tVNbK46cp6jao2nM8nAiXQrho",
        "PEei/H9qo7peubMTLKtkcSMtLII/f71AuuztdurlQLJxxii1qn+1vJSNo2QXLGPS6vgdPXDkoyFf",
        "TiSbfTejYrJAdodf7xXuA3A2hs0T32NIuOuo1DLIPKpRAIxk+0GrEMlEy62ZWUKjx8vuigDRnFqc",
        "Ov4G6GYydrTz9pv9UBTRUl4mnz3sGyspaKg3Ows4GbBGHgwGo87KzcSnwH91Jz7IalGBglL0+pYX",
        "fKi+4s5iLtznKxYoDI3+ZnriQ0VZP/r/sm+U9jRZ0ntw0HtAaZRHKQcMOOQ7XiVFcQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\">",
        "                <ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes128-cbc\">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure\"/>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure\"/>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure\"/>",
        "        <ManageNameIDService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure\"/>",
        "        <ManageNameIDService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure\"/>",
        "        <ManageNameIDService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure\"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index=\"0\" isDefault=\"true\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure\"/>",
        "        <AssertionConsumerService index=\"1\" isDefault=\"false\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure\"/>",
        "        <AssertionConsumerService index=\"2\" isDefault=\"false\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:PAOS\" Location=\"https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure\"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        ""
      ],
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>",
        "<EntityDescriptor entityID=\"urn:federation:MicrosoftOnline\" ID=\"_e46a1193-e8a7-48ed-804f-1516729ecb5f\" xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:query=\"urn:oasis:names:tc:SAML:metadata:ext:query\" xmlns:mdattr=\"urn:oasis:names:tc:SAML:metadata:attribute\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\" xmlns:xenc11=\"http://www.w3.org/2009/xmlenc11#\" xmlns:alg=\"urn:oasis:names:tc:SAML:metadata:algsupport\" xmlns:x509qry=\"urn:oasis:names:tc:SAML:metadata:X509:query\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/>",
        "        <alg:SigningMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">",
        "        <KeyDescriptor use=\"signing\">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use=\"signing\">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use=\"signing\">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://login.microsoftonline.com/login.srf\"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index=\"0\" isDefault=\"true\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://login.microsoftonline.com/login.srf\"/>",
        "        <AssertionConsumerService index=\"1\" isDefault=\"false\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign\" Location=\"https://login.microsoftonline.com/login.srf\"/>",
        "        <AssertionConsumerService index=\"2\" isDefault=\"false\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:PAOS\" Location=\"https://login.microsoftonline.com/login.srf\"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        ""
      ]
    },
    "remote": {
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {}
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
              ]
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true
              },
              "secretIdAndAlgorithms": {}
            }
          },
          "assertionProcessing": {
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail"
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID"
                }
              ]
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI"
            }
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf"
                }
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf"
                }
              ]
            }
          }
        }
      }
    }
  },
  "script": {
    "01e1a3c0-038b-4c16-956a-6c9d89328cff": {
      "_id": "01e1a3c0-038b-4c16-956a-6c9d89328cff",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for a scripted decision node",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Authentication Tree Decision Node Script",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either \"true\" or \"false\".",
        " */",
        "",
        "outcome = \"true\";",
        ""
      ]
    },
    "1244e639-4a31-401d-ab61-d75133d8dc9e": {
      "_id": "1244e639-4a31-401d-ab61-d75133d8dc9e",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Instagram",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Instagram Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"username\", rawProfile.username)))"
      ]
    },
    "13e3f263-9cd3-4844-8d1c-040fd0dd02eb": {
      "_id": "13e3f263-9cd3-4844-8d1c-040fd0dd02eb",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script template for Device Profile Match decision node script for Authentication Tree",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Device Profile Match Template - Decision Node Script",
      "script": [
        "/*",
        " * Copyright 2020-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/** ******************************************************************",
        " *",
        " * The following script is a simplified template for understanding",
        " * the basics of device matching. _This is not functionally complete._",
        " * For a functionally complete script as well as a development toolkit,",
        " * visit https://github.com/ForgeRock/forgerock-device-match-script.",
        " *",
        " * Global node variables accessible within this scope:",
        " * 1. `sharedState` provides access to incoming request",
        " * 2. `deviceProfilesDao` provides access to stored profiles",
        " * 3. `outcome` variable maps to auth tree node outcomes; values are",
        " *    'true', 'false', or 'unknownDevice' (notice _all_ are strings).",
        " * ******************************************************************/",
        "",
        "/**",
        " * Get the incoming request's device profile.",
        " * Returns serialized JSON (type string); parsing this will result a",
        " * native JS object.",
        " */",
        "var incomingJson = sharedState.get('forgeRock.device.profile').toString();",
        "var incoming = JSON.parse(incomingJson);",
        "",
        "/**",
        " * Get the incoming user's username and realm.",
        " * Notice the use of `.asString()`.",
        " */",
        "var username = sharedState.get(\"username\").asString();",
        "var realm = sharedState.get(\"realm\").asString();",
        "",
        "/**",
        " * Get the user's stored profiles for appropriate realm.",
        " * Returns a _special_ object with methods for profile data",
        " */",
        "var storedProfiles = deviceProfilesDao.getDeviceProfiles(username, realm);",
        "",
        "// Default to `outcome` of 'unknownDevice'",
        "outcome = 'unknownDevice';",
        "",
        "if (storedProfiles) {",
        "    var i = 0;",
        "    // NOTE: `.size()` method returns the number of stored profiles",
        "    var len = storedProfiles.size();",
        "",
        "    for (i; i < len; i++) {",
        "        /**",
        "         * Get the stored profile.",
        "         * Returns serialized JSON (type string); parsing this will result",
        "         * a native JS object.",
        "         */",
        "        var storedJson = storedProfiles.get(i);",
        "        var stored = JSON.parse(storedJson);",
        "",
        "        /**",
        "         * Find a stored profile with the same identifier.",
        "         */",
        "        if (incoming.identifier === stored.identifier) {",
        "",
        "            /**",
        "             * Now that you've found the appropriate profile, you will perform",
        "             * the logic here to match the values of the `incoming` profile",
        "             * with that of the `stored` profile.",
        "             *",
        "             * The result of the matching logic is assigned to `outcome`. Since",
        "             * we have profiles of the same identifier, the value (type string)",
        "             * should now be either 'true' or 'false' (properties matched or not).",
        "             *",
        "             * For more information about this topic, visit this Github repo:",
        "             * https://github.com/ForgeRock/forgerock-device-match-script",
        "             */",
        "            outcome = 'false';",
        "        }",
        "    }",
        "}"
      ]
    },
    "157298c0-7d31-4059-a95b-eeb08473b7e5": {
      "_id": "157298c0-7d31-4059-a95b-eeb08473b7e5",
      "context": "AUTHENTICATION_CLIENT_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for client side Device Id (Match) Authentication Module",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Device Id (Match) - Client Side",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var fontDetector = (function () {",
        "    /**",
        "     * JavaScript code to detect available availability of a",
        "     * particular font in a browser using JavaScript and CSS.",
        "     *",
        "     * Author : Lalit Patel",
        "     * Website: http://www.lalit.org/lab/javascript-css-font-detect/",
        "     * License: Apache Software License 2.0",
        "     *          http://www.apache.org/licenses/LICENSE-2.0",
        "     * Version: 0.15 (21 Sep 2009)",
        "     *          Changed comparision font to default from sans-default-default,",
        "     *          as in FF3.0 font of child element didn't fallback",
        "     *          to parent element if the font is missing.",
        "     * Version: 0.2 (04 Mar 2012)",
        "     *          Comparing font against all the 3 generic font families ie,",
        "     *          'monospace', 'sans-serif' and 'sans'. If it doesn't match all 3",
        "     *          then that font is 100% not available in the system",
        "     * Version: 0.3 (24 Mar 2012)",
        "     *          Replaced sans with serif in the list of baseFonts",
        "     */",
        "    /*",
        "     * Portions Copyrighted 2013 ForgeRock AS.",
        "     */",
        "    var detector = {}, baseFonts, testString, testSize, h, s, defaultWidth = {}, defaultHeight = {}, index;",
        "",
        "    // a font will be compared against all the three default fonts.",
        "    // and if it doesn't match all 3 then that font is not available.",
        "    baseFonts = ['monospace', 'sans-serif', 'serif'];",
        "",
        "    //we use m or w because these two characters take up the maximum width.",
        "    // And we use a LLi so that the same matching fonts can get separated",
        "    testString = \"mmmmmmmmmmlli\";",
        "",
        "    //we test using 72px font size, we may use any size. I guess larger the better.",
        "    testSize = '72px';",
        "",
        "    h = document.getElementsByTagName(\"body\")[0];",
        "",
        "    // create a SPAN in the document to get the width of the text we use to test",
        "    s = document.createElement(\"span\");",
        "    s.style.fontSize = testSize;",
        "    s.innerHTML = testString;",
        "    for (index in baseFonts) {",
        "        //get the default width for the three base fonts",
        "        s.style.fontFamily = baseFonts[index];",
        "        h.appendChild(s);",
        "        defaultWidth[baseFonts[index]] = s.offsetWidth; //width for the default font",
        "        defaultHeight[baseFonts[index]] = s.offsetHeight; //height for the defualt font",
        "        h.removeChild(s);",
        "    }",
        "",
        "    detector.detect = function(font) {",
        "        var detected = false, index, matched;",
        "        for (index in baseFonts) {",
        "            s.style.fontFamily = font + ',' + baseFonts[index]; // name of the font along with the base font for fallback.",
        "            h.appendChild(s);",
        "            matched = (s.offsetWidth !== defaultWidth[baseFonts[index]] || s.offsetHeight !== defaultHeight[baseFonts[index]]);",
        "            h.removeChild(s);",
        "            detected = detected || matched;",
        "        }",
        "        return detected;",
        "    };",
        "",
        "    return detector;",
        "}());",
        "/*",
        " * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.",
        " *",
        " * Copyright (c) 2009 Sun Microsystems Inc. All Rights Reserved",
        " *",
        " * The contents of this file are subject to the terms",
        " * of the Common Development and Distribution License",
        " * (the License). You may not use this file except in",
        " * compliance with the License.",
        " *",
        " * You can obtain a copy of the License at",
        " * https://opensso.dev.java.net/public/CDDLv1.0.html or",
        " * opensso/legal/CDDLv1.0.txt",
        " * See the License for the specific language governing",
        " * permission and limitations under the License.",
        " *",
        " * When distributing Covered Code, include this CDDL",
        " * Header Notice in each file and include the License file",
        " * at opensso/legal/CDDLv1.0.txt.",
        " * If applicable, add the following below the CDDL Header,",
        " * with the fields enclosed by brackets [] replaced by",
        " * your own identifying information:",
        " * \"Portions Copyrighted [year] [name of copyright owner]\"",
        " *",
        " */",
        "/*",
        " * Portions Copyrighted 2013 Syntegrity.",
        " * Portions Copyrighted 2013-2014 ForgeRock AS.",
        " */",
        "",
        "var collectScreenInfo = function () {",
        "        var screenInfo = {};",
        "        if (screen) {",
        "            if (screen.width) {",
        "                screenInfo.screenWidth = screen.width;",
        "            }",
        "",
        "            if (screen.height) {",
        "                screenInfo.screenHeight = screen.height;",
        "            }",
        "",
        "            if (screen.pixelDepth) {",
        "                screenInfo.screenColourDepth = screen.pixelDepth;",
        "            }",
        "        } else {",
        "            console.warn(\"Cannot collect screen information. screen is not defined.\");",
        "        }",
        "        return screenInfo;",
        "    },",
        "    collectTimezoneInfo = function () {",
        "        var timezoneInfo =  {}, offset = new Date().getTimezoneOffset();",
        "",
        "        if (offset) {",
        "            timezoneInfo.timezone = offset;",
        "        } else {",
        "            console.warn(\"Cannot collect timezone information. timezone is not defined.\");",
        "        }",
        "",
        "        return timezoneInfo;",
        "    },",
        "    collectBrowserPluginsInfo = function () {",
        "",
        "        if (navigator && navigator.plugins) {",
        "            var pluginsInfo = {}, i, plugins = navigator.plugins;",
        "            pluginsInfo.installedPlugins = \"\";",
        "",
        "            for (i = 0; i < plugins.length; i++) {",
        "                pluginsInfo.installedPlugins = pluginsInfo.installedPlugins + plugins[i].filename + \";\";",
        "            }",
        "",
        "            return pluginsInfo;",
        "        } else {",
        "            console.warn(\"Cannot collect browser plugin information. navigator.plugins is not defined.\");",
        "            return {};",
        "        }",
        "",
        "    },",
        "// Getting geolocation takes some time and is done asynchronously, hence need a callback which is called once geolocation is retrieved.",
        "    collectGeolocationInfo = function (callback) {",
        "        var geolocationInfo = {},",
        "            successCallback = function(position) {",
        "                geolocationInfo.longitude = position.coords.longitude;",
        "                geolocationInfo.latitude = position.coords.latitude;",
        "                callback(geolocationInfo);",
        "            }, errorCallback = function(error) {",
        "                console.warn(\"Cannot collect geolocation information. \" + error.code + \": \" + error.message);",
        "                callback(geolocationInfo);",
        "            };",
        "        if (navigator && navigator.geolocation) {",
        "            // NB: If user chooses 'Not now' on Firefox neither callback gets called",
        "            //     https://bugzilla.mozilla.org/show_bug.cgi?id=675533",
        "            navigator.geolocation.getCurrentPosition(successCallback, errorCallback);",
        "        } else {",
        "            console.warn(\"Cannot collect geolocation information. navigator.geolocation is not defined.\");",
        "            callback(geolocationInfo);",
        "        }",
        "    },",
        "    collectBrowserFontsInfo = function () {",
        "        var fontsInfo = {}, i, fontsList = [\"cursive\",\"monospace\",\"serif\",\"sans-serif\",\"fantasy\",\"default\",\"Arial\",\"Arial Black\",",
        "            \"Arial Narrow\",\"Arial Rounded MT Bold\",\"Bookman Old Style\",\"Bradley Hand ITC\",\"Century\",\"Century Gothic\",",
        "            \"Comic Sans MS\",\"Courier\",\"Courier New\",\"Georgia\",\"Gentium\",\"Impact\",\"King\",\"Lucida Console\",\"Lalit\",",
        "            \"Modena\",\"Monotype Corsiva\",\"Papyrus\",\"Tahoma\",\"TeX\",\"Times\",\"Times New Roman\",\"Trebuchet MS\",\"Verdana\",",
        "            \"Verona\"];",
        "        fontsInfo.installedFonts = \"\";",
        "",
        "        for (i = 0; i < fontsList.length; i++) {",
        "            if (fontDetector.detect(fontsList[i])) {",
        "                fontsInfo.installedFonts = fontsInfo.installedFonts + fontsList[i] + \";\";",
        "            }",
        "        }",
        "        return fontsInfo;",
        "    },",
        "    devicePrint = {};",
        "",
        "devicePrint.screen = collectScreenInfo();",
        "devicePrint.timezone = collectTimezoneInfo();",
        "devicePrint.plugins = collectBrowserPluginsInfo();",
        "devicePrint.fonts = collectBrowserFontsInfo();",
        "",
        "if (navigator.userAgent) {",
        "    devicePrint.userAgent = navigator.userAgent;",
        "}",
        "if (navigator.appName) {",
        "    devicePrint.appName = navigator.appName;",
        "}",
        "if (navigator.appCodeName) {",
        "    devicePrint.appCodeName = navigator.appCodeName;",
        "}",
        "if (navigator.appVersion) {",
        "    devicePrint.appVersion = navigator.appVersion;",
        "}",
        "if (navigator.appMinorVersion) {",
        "    devicePrint.appMinorVersion = navigator.appMinorVersion;",
        "}",
        "if (navigator.buildID) {",
        "    devicePrint.buildID = navigator.buildID;",
        "}",
        "if (navigator.platform) {",
        "    devicePrint.platform = navigator.platform;",
        "}",
        "if (navigator.cpuClass) {",
        "    devicePrint.cpuClass = navigator.cpuClass;",
        "}",
        "if (navigator.oscpu) {",
        "    devicePrint.oscpu = navigator.oscpu;",
        "}",
        "if (navigator.product) {",
        "    devicePrint.product = navigator.product;",
        "}",
        "if (navigator.productSub) {",
        "    devicePrint.productSub = navigator.productSub;",
        "}",
        "if (navigator.vendor) {",
        "    devicePrint.vendor = navigator.vendor;",
        "}",
        "if (navigator.vendorSub) {",
        "    devicePrint.vendorSub = navigator.vendorSub;",
        "}",
        "if (navigator.language) {",
        "    devicePrint.language = navigator.language;",
        "}",
        "if (navigator.userLanguage) {",
        "    devicePrint.userLanguage = navigator.userLanguage;",
        "}",
        "if (navigator.browserLanguage) {",
        "    devicePrint.browserLanguage = navigator.browserLanguage;",
        "}",
        "if (navigator.systemLanguage) {",
        "    devicePrint.systemLanguage = navigator.systemLanguage;",
        "}",
        "",
        "// Attempt to collect geo-location information and return this with the data collected so far.",
        "// Otherwise, if geo-location fails or takes longer than 30 seconds, auto-submit the data collected so far.",
        "autoSubmitDelay = 30000;",
        "output.value = JSON.stringify(devicePrint);",
        "collectGeolocationInfo(function(geolocationInfo) {",
        "    devicePrint.geolocation = geolocationInfo;",
        "    output.value = JSON.stringify(devicePrint);",
        "    submit();",
        "});",
        ""
      ]
    },
    "1d475815-72cb-42eb-aafd-4026989d28a7": {
      "_id": "1d475815-72cb-42eb-aafd-4026989d28a7",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for Social Identity Provider Profile Transformation",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Social Identity Provider Profile Transformation Script",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/* Default Social Identity Provider Profile Transformation script to use as a template for new scripts */"
      ]
    },
    "1f389a3d-21cf-417c-a6d3-42ea620071f0": {
      "_id": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Internal OIDC Claims script",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ForgeRock Internal: OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the \"OAuth2Provider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use \"return variable\" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * \"Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim.\"",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
        ""
      ]
    },
    "23143919-6b78-40c3-b25e-beca19b229e0": {
      "_id": "23143919-6b78-40c3-b25e-beca19b229e0",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Normalizes raw profile data from GitHub",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "GitHub Profile Normalization (VS)",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.warning(\"GitHub rawProfile: \"+rawProfile)",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.first_name),",
        "        field(\"familyName\", rawProfile.last_name),",
        "        field(\"photoUrl\", rawProfile.picture.data.url),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email)))"
      ]
    },
    "248b8a56-df81-4b1b-b4ba-45d994f6504c": {
      "_id": "248b8a56-df81-4b1b-b4ba-45d994f6504c",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for SAML2 IDP Adapter",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "SAML2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7.3/scripting-guide/scripting-api-global-logger.html.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}"
      ]
    },
    "25e6c06d-cf70-473b-bd28-26931edc476b": {
      "_id": "25e6c06d-cf70-473b-bd28-26931edc476b",
      "context": "OAUTH2_VALIDATE_SCOPE",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for OAuth2 Scope Validation",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "OAuth2 Validate Scope Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script validates the requested scopes against the allowed scopes.",
        " * If no scopes are requested, default scopes are assumed.",
        " * The script has four top level functions that could be executed during the different OAuth2 flows:",
        " *      - validateAuthorizationScope",
        " *      - validateAccessTokenScope",
        " *      - validateRefreshTokenScope",
        " *      - validateBackChannelAuthorizationScope",
        " *",
        " * Defined variables:",
        " * requestedScopes - Set<String> (1).",
        " *          The set of requested scopes.",
        " * defaultScopes - Set<String> (1).",
        " *                 The set of default scopes.",
        " * allowedScopes - Set<String> (1).",
        " *                 The set of allowed scopes.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_VALIDATE_SCOPE",
        " * httpClient - HTTP Client (2).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *",
        " * Throws InvalidScopeException:",
        " *      - if there are no scopes requested and default scopes are empty",
        " *      - if a requested scope is not allowed",
        " *",
        " * Return - a Set<String> of validated scopes (1).",
        " *",
        " * Class reference:",
        " * (1) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (2) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " */",
        "",
        "/**",
        " * Default validate scope script.",
        " */",
        "function validateScopes () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.oauth2.core.exceptions.InvalidScopeException",
        "    );",
        "",
        "    var scopes;",
        "    if (requestedScopes == null || requestedScopes.isEmpty()) {",
        "        scopes = defaultScopes;",
        "    } else {",
        "        scopes = new java.util.HashSet(allowedScopes);",
        "        scopes.retainAll(requestedScopes);",
        "        if (requestedScopes.size() > scopes.size()) {",
        "            var invalidScopes = new java.util.HashSet(requestedScopes);",
        "            invalidScopes.removeAll(allowedScopes);",
        "            throw new frJava.InvalidScopeException('Unknown/invalid scope(s)');",
        "        }",
        "    }",
        "",
        "    if (scopes == null || scopes.isEmpty()) {",
        "        throw new frJava.InvalidScopeException('No scope requested and no default scope configured');",
        "    }",
        "    return scopes;",
        "}",
        "",
        "function validateAuthorizationScope () {",
        "    return validateScopes();",
        "}",
        "",
        "function validateAccessTokenScope () {",
        "    return validateScopes();",
        "}",
        "",
        "function validateRefreshTokenScope () {",
        "    return validateScopes();",
        "}",
        "",
        "function validateBackChannelAuthorizationScope () {",
        "    return validateScopes();",
        "}"
      ]
    },
    "312e951f-70c5-49d2-a9ae-93aef909d5df": {
      "_id": "312e951f-70c5-49d2-a9ae-93aef909d5df",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Salesforce",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Salesforce Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.user_id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.given_name),",
        "        field(\"familyName\", rawProfile.family_name),",
        "        field(\"photoUrl\", rawProfile.picture),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email),",
        "        field(\"locale\", rawProfile.zoneInfo)))"
      ]
    },
    "36863ffb-40ec-48b9-94b1-9a99f71cc3b5": {
      "_id": "36863ffb-40ec-48b9-94b1-9a99f71cc3b5",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for OIDC claims",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the \"OAuth2Provider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use \"return variable\" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * \"Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim.\"",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
        ""
      ]
    },
    "39c08084-1238-43e8-857f-2e11005eac49": {
      "_id": "39c08084-1238-43e8-857f-2e11005eac49",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Default alpha realm script for OAuth2 Access Token Modification",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha OAuth2 Access Token Modification Script",
      "script": [
        "/*",
        " * Copyright 2019-2021 ForgeRock AS. All Rights Reserved.",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you modify information associated with an OAuth2 access token",
        " * with methods provided by the AccessToken (1) interface.",
        " * The changes made to OAuth2 access tokens will directly impact the size of the CTS tokens,",
        " * and, similarly, the size of the JWTs if client-based OAuth2 tokens are utilized.",
        " * When adding/updating fields make sure that the token size remains within client/user-agent limits.",
        " *",
        " * Defined variables:",
        " * accessToken - AccessToken (1).",
        " *               The access token to be updated.",
        " *               Mutable object, all changes to the access token will be reflected.",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the \"OAuth2Provider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_ACCESS_TOKEN_MODIFICATION.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *",
        " * Return - no value is expected, changes shall be made to the accessToken parameter directly.",
        " *",
        " * Class reference:",
        " * (1) AccessToken - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/AccessToken.html.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " */",
        "",
        "/* EXAMPLE",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.http.protocol.Request,",
        "        org.forgerock.http.protocol.Response",
        "    );",
        "",
        "    // Always includes this field in the token.",
        "    accessToken.setField('key1', 'value1');",
        "",
        "    // Receives and adds to the access token additional values by performing a REST call to an external service.",
        "    // WARNING: Below, you will find a reference to a third-party site, which is provided only as an example.",
        "    var uri = 'https://jsonplaceholder.typicode.com/posts';",
        "",
        "    try {",
        "        var request = new frJava.Request();",
        "",
        "        // You can chain methods that return the request object.",
        "        request.setUri(uri)",
        "            .setMethod('POST')",
        "            .setEntity(JSON.stringify({",
        "                updatedFields: {",
        "                    key2: 'value2',",
        "                    key3: 'value3'",
        "                }",
        "            }));",
        "",
        "        // You can call a method when chaining is not possible.",
        "        request.getHeaders().add('Content-Type', 'application/json; charset=UTF-8');",
        "",
        "        // Sends the request and receives the response.",
        "        var response = httpClient.send(request).getOrThrow();",
        "",
        "        // Checks if the response status is as expected.",
        "        if (response.getStatus() === org.forgerock.http.protocol.Status.CREATED) {",
        "            var result = JSON.parse(response.getEntity().getString());",
        "",
        "            // Set multiple token fields at once.",
        "            accessToken.setFields(result.updatedFields);",
        "        } else {",
        "            logger.error('Unable to obtain access token modifications. Status: ' + response.getStatus() + '. Content: ' + response.getEntity().getString());",
        "        }",
        "    } catch (e) {",
        "        logger.error('The request processing was interrupted. ' + e);",
        "",
        "        // The access token request fails with the HTTP 500 error in this case.",
        "        throw ('Unable to obtain response from: ' + uri);",
        "    }",
        "",
        "    // Adds new fields containing identity attribute values to the access token.",
        "    accessToken.setField('mail', identity.getAttribute('mail'));",
        "    accessToken.setField('phone', identity.getAttribute('telephoneNumber').toArray()[0]);",
        "",
        "    // Adds new fields containing the session property values.",
        "    // NOTE: session may not be available for non-interactive authorization grants.",
        "    if (session) {",
        "        try {",
        "            accessToken.setField('ipAddress', session.getProperty('Host'));",
        "        } catch (e) {",
        "            logger.error('Unable to retrieve session property value. ' + e);",
        "        }",
        "    }",
        "",
        "    // Removes a native field from the token entry, that was set by AM.",
        "    // WARNING: removing native fields from the token may result in loss of functionality.",
        "    // accessToken.removeTokenName()",
        "",
        "    // No return value is expected. Let it be undefined.",
        "}());",
        "*/",
        ""
      ]
    },
    "3d97c436-42c0-4dd0-a571-ea6f34f752b3": {
      "_id": "3d97c436-42c0-4dd0-a571-ea6f34f752b3",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Itsme",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Itsme Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue managedUser = json(object(",
        "        field(\"id\", rawProfile.sub),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.given_name),",
        "        field(\"familyName\", rawProfile.family_name),",
        "        field(\"username\", rawProfile.email),",
        "        field(\"email\", rawProfile.email)))",
        "return managedUser"
      ]
    },
    "3f93ef6e-e54a-4393-aba1-f322656db28a": {
      "_id": "3f93ef6e-e54a-4393-aba1-f322656db28a",
      "context": "OAUTH2_AUTHORIZE_ENDPOINT_DATA_PROVIDER",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for OAuth2 Authorize Endpoint Data Provider",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "OAuth2 Authorize Endpoint Data Provider Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you return additional data when authorize request is called.",
        " *",
        " * Defined variables:",
        " *",
        " * session - SSOToken (1)",
        " *           Present if the request contains the session cookie, the user's session object.",
        " *",
        " * httpClient - HTTP Client (2).",
        " *              Always present, the HTTP client that can be used to make external HTTP requests",
        " *",
        " * logger - Debug (3)",
        " *          Always present, the \"ScriptedAuthorizeEndpointDataProvider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_AUTHORIZE_ENDPOINT_DATA_PROVIDER.",
        " *",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script",
        " *",
        " * Return - a Map<String, String> of additional data (4).",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (3) Debug - https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * (4) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html.",
        " */",
        "",
        "/**",
        " * Default authorize endpoint data provider script to use as a template for new scripts.",
        " */",
        "",
        "/* EXAMPLE",
        "var map = new java.util.HashMap();",
        "",
        "function addAdditionalData() {",
        "",
        "    //If constant data needs to be returned",
        "    map.put(\"hello\", \"world\");",
        "",
        "    //If some data needs to be returned from third party service",
        "    addAdditionalDataFromExternalService();",
        "",
        "    //If there is a need to return some user session data",
        "    addAdditionalDataFromSessionProperties()",
        "",
        "    return map;",
        "};",
        "",
        "function addAdditionalDataFromExternalService() {",
        "  var frJava = JavaImporter(",
        "        org.forgerock.oauth2.core.exceptions.ServerException",
        "    );",
        "  try {",
        "        //Obtain additional data by performing a REST call to an external service",
        "        var request = new org.forgerock.http.protocol.Request();",
        "        request.setUri(\"https://third.party.app/hello.jsp\");",
        "        request.setMethod(\"POST\");",
        "        //request.setEntity(\"foo=bar&hello=world\");",
        "        request.setEntity(json(object(",
        "                    field(\"foo\", \"bar\"))));",
        "        var response = httpClient.send(request).getOrThrow();",
        "        logResponse(response);",
        "        var result = JSON.parse(response.getEntity());",
        "        map.put(\"someKey\",result.get(\"someKey\"));",
        "  } catch (err) {",
        "     throw new frJava.ServerException(err);",
        "  }",
        "};",
        "",
        "function addAdditionalDataFromSessionProperties() {",
        "  //Add additional data from session property values",
        "   if (session != null) { // session is not available for resource owner password credentials grant",
        "     map.put(\"ipAddress\", session.getProperty(\"Host\"))",
        "   }",
        "};",
        "",
        "function logResponse(response) {",
        "    logger.message(\"User REST Call. Status: \" + response.getStatus() + \", Body: \" + response.getEntity());",
        "};",
        "",
        "addAdditionalData();",
        "*/"
      ]
    },
    "400e48ba-3f13-4144-ac7b-f824ea8e98c5": {
      "_id": "400e48ba-3f13-4144-ac7b-f824ea8e98c5",
      "context": "OAUTH2_SCRIPTED_JWT_ISSUER",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for scripted JWT Issuers",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "OAuth2 JWT Issuer Script",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you to derive the configuration for a dynamic JWT issuer from the issuer string.",
        " * A JWT issuer is made up of the following:",
        " *   - issuer - the identifier of the entity that issues JWTs",
        " *   - resource owner subject claim - the name of the claim in the JWT that identifies the resource owner",
        " *   - consented scope claim - the name of the claim in the JWT that represents scope that the resource owner",
        " *                             has already consented to externally",
        " *   - authorized subjects - the set of principal identifiers that are authorized to be used as resource owners",
        " *                           by the issuer",
        " *   - JWKs - either a set of JWKs or connection details for obtaining that set, that are the public keys that",
        " *            can verify the signature on the issued JWTs.",
        " *",
        " * Defined variables:",
        " * issuer - String",
        " *          The issuer from the bearer JWT.",
        " * realm - String",
        " *         The path of the realm that is handling the request.",
        " * scriptName - String.",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the script debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_SCRIPTED_JWT_ISSUER.",
        " * httpClient - HTTP Client (1).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " * idRepository - Identity Repository (2). Always present.",
        " * secrets - Secrets accessor (3). Always present.",
        " *",
        " * Return - org.forgerock.oauth2.core.TrustedJwtIssuerConfig (4) - the configuration of the trusted JWT issuer.",
        " *",
        " * Class reference:",
        " * (1) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (2) ScriptedIdentityRepository - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openam/scripting/api/identity/ScriptedIdentityRepository.html.",
        " * (3) ScriptedSecrets - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openam/scripting/api/secrets/ScriptedSecrets.html.",
        " * (4) TrustedJwtIssuerConfig - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/TrustedJwtIssuerConfig.html.",
        " */",
        "",
        "/* EXAMPLE",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.oauth2.core.TrustedJwtIssuerConfig,",
        "        java.util.Collections",
        "    );",
        "",
        "    var iss = idRepository.getIdentity(issuer);",
        "    if (iss == null) {",
        "        logger.message('No issuer found for: '+issuer);",
        "        return null;",
        "    }",
        "    logger.message('Found issuer: '+iss);",
        "    // in this example either a JWK set or a URI to a JWK set are in the postalAddress attribute",
        "    var jwksAttrs = iss.getAttributeValues('postalAddress');",
        "    var jwkSet = jwksAttrs.length === 0 ? null : jwksAttrs[0];",
        "    var config = new frJava.TrustedJwtIssuerConfig(",
        "        issuer,",
        "        'sub',",
        "        'scope',",
        "        // in this example, valid subjects are stored in the mail attribute",
        "        iss.getAttributeValues('mail'),",
        "        jwkSet.startsWith('{') ? jwkSet : null,",
        "        jwkSet.startsWith('http') ? jwkSet : null,",
        "        '5 minutes',",
        "        '1 minute'",
        "    );",
        "    return config;",
        "}());",
        "*/"
      ]
    },
    "403cf226-6051-4368-8b72-9ba14f9a5140": {
      "_id": "403cf226-6051-4368-8b72-9ba14f9a5140",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from VKontakte",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "VKontakte Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.first_name),",
        "        field(\"givenName\", rawProfile.first_name),",
        "        field(\"familyName\", rawProfile.last_name),",
        "        field(\"photoUrl\", rawProfile.photo_50),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email)))"
      ]
    },
    "424da748-82cc-4b54-be6f-82bd64d82a74": {
      "_id": "424da748-82cc-4b54-be6f-82bd64d82a74",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Yahoo",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Yahoo Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.sub),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.given_name),",
        "        field(\"familyName\", rawProfile.family_name),",
        "        field(\"photoUrl\", rawProfile.picture),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email),",
        "        field(\"locale\", rawProfile.locale)))"
      ]
    },
    "472534ec-a25f-468d-a606-3fb1935190df": {
      "_id": "472534ec-a25f-468d-a606-3fb1935190df",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from WeChat",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "WeChat Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.openid),",
        "        field(\"displayName\", rawProfile.nickname),",
        "        field(\"photoUrl\", rawProfile.headimgurl),",
        "        field(\"username\", rawProfile.nickname)))"
      ]
    },
    "484e6246-dbc6-4288-97e6-54e55431402e": {
      "_id": "484e6246-dbc6-4288-97e6-54e55431402e",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Apple",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Apple Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " *",
        " * In some common default configurations, the following keys are required to be not empty:",
        " * username, givenName, familyName, email.",
        " *",
        " * From RFC4517: A value of the Directory String syntax is a string of one or more",
        " * arbitrary characters from the Universal Character Set (UCS).",
        " * A zero-length character string is not permitted.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "String email = \"change@me.com\"",
        "String subjectId = rawProfile.sub",
        "String firstName = \" \"",
        "String lastName = \" \"",
        "String username = subjectId",
        "String name",
        "",
        "if (rawProfile.isDefined(\"email\") && rawProfile.email.isNotNull()){ // User can elect to not share their email",
        "    email = rawProfile.email.asString()",
        "    username = email",
        "}",
        "if (rawProfile.isDefined(\"name\") && rawProfile.name.isNotNull()) {",
        "    if (rawProfile.name.isDefined(\"firstName\") && rawProfile.name.firstName.isNotNull()) {",
        "        firstName = rawProfile.name.firstName.asString()",
        "    }",
        "    if (rawProfile.name.isDefined(\"lastName\") && rawProfile.name.lastName.isNotNull()) {",
        "        lastName = rawProfile.name.lastName.asString()",
        "    }",
        "}",
        "",
        "name = (firstName?.trim() ? firstName : \"\") + (lastName?.trim() ? ((firstName?.trim() ? \" \" : \"\") + lastName) : \"\")",
        "name =  (!name?.trim()) ? \" \" : name",
        "",
        "return json(object(",
        "        field(\"id\", subjectId),",
        "        field(\"displayName\", name),",
        "        field(\"email\", email),",
        "        field(\"givenName\", firstName),",
        "        field(\"familyName\", lastName),",
        "        field(\"username\", username)))"
      ]
    },
    "58c824ae-84ed-4724-82cd-db128fc3f6c": {
      "_id": "58c824ae-84ed-4724-82cd-db128fc3f6c",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Converts a normalized social profile into a managed user",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Normalized Profile to Managed User",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue managedUser = json(object(",
        "        field(\"givenName\", normalizedProfile.givenName),",
        "        field(\"sn\", normalizedProfile.familyName),",
        "        field(\"mail\", normalizedProfile.email),",
        "        field(\"userName\", normalizedProfile.username)))",
        "",
        "if (normalizedProfile.postalAddress.isNotNull()) managedUser.put(\"postalAddress\", normalizedProfile.postalAddress)",
        "if (normalizedProfile.addressLocality.isNotNull()) managedUser.put(\"city\", normalizedProfile.addressLocality)",
        "if (normalizedProfile.addressRegion.isNotNull()) managedUser.put(\"stateProvince\", normalizedProfile.addressRegion)",
        "if (normalizedProfile.postalCode.isNotNull()) managedUser.put(\"postalCode\", normalizedProfile.postalCode)",
        "if (normalizedProfile.country.isNotNull()) managedUser.put(\"country\", normalizedProfile.country)",
        "if (normalizedProfile.phone.isNotNull()) managedUser.put(\"telephoneNumber\", normalizedProfile.phone)",
        "",
        "// if the givenName and familyName is null or empty",
        "// then add a boolean flag to the shared state to indicate names are not present",
        "// this could be used elsewhere",
        "// for eg. this could be used in a scripted decision node to by-pass patching",
        "// the user object with blank values when givenName  and familyName is not present",
        "boolean noGivenName = normalizedProfile.givenName.isNull() || (!normalizedProfile.givenName.asString()?.trim())",
        "boolean noFamilyName = normalizedProfile.familyName.isNull() || (!normalizedProfile.familyName.asString()?.trim())",
        "sharedState.put(\"nameEmptyOrNull\", noGivenName && noFamilyName)",
        "",
        "return managedUser",
        ""
      ]
    },
    "58d29080-4563-480b-89bb-1e7719776a21": {
      "_id": "58d29080-4563-480b-89bb-1e7719776a21",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Google",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Google Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.sub),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.given_name),",
        "        field(\"familyName\", rawProfile.family_name),",
        "        field(\"photoUrl\", rawProfile.picture),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email),",
        "        field(\"locale\", rawProfile.locale)))"
      ]
    },
    "59f84396-71e4-4c1d-a6ae-c4fc624d9752": {
      "_id": "59f84396-71e4-4c1d-a6ae-c4fc624d9752",
      "context": "LIBRARY",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "A test script that uses an environment variable and a secret variable",
      "evaluatorVersion": "2.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Test-Script-1",
      "script": [
        "// Calculate E=mc^2 using m = 42",
        "const c2 = systemEnv.getProperty(\"esv.test.variable.light\");",
        "console.log(`E = ${42 * c2 * c2}`);",
        "// Calculate the area of a circle with radius r = 42",
        "const pi = parseFloat(systemEnv.getProperty(\"esv.test.secret.pi\"));",
        "console.log(`A = ${pi * 42 * 42}`);"
      ]
    },
    "5e854779-6ec1-4c39-aeba-0477e0986646": {
      "_id": "5e854779-6ec1-4c39-aeba-0477e0986646",
      "context": "CONFIG_PROVIDER_NODE",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Script to provide values for a config provider node",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Config Provider Node Script",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/**",
        " * The following script is a simplified template for understanding how to build",
        " * up a config Map object with custom values. The Config Provider Node will then",
        " * provide this config Map to the desired node type. It is important that the Map",
        " * you build here is named 'config'.",
        " *",
        " * Defined variables:",
        " *",
        " * nodeState - Node State (1)",
        " *           Always present, this represents the current values stored in the node state.",
        " *",
        " * idRepository - Profile Data (2)",
        " *           Always present, a repository to retrieve user information.",
        " *",
        " * secrets - Credentials and Secrets (3)",
        " *           Always present, an interface to access the Secrets API from a scripting context.",
        " *",
        " * requestHeaders (4) - Map (5)",
        " *           Always present, an object that provides methods for accessing headers in the login request.",
        " *",
        " * logger - Debug Logging (6)",
        " *          Always present, the debug logger instance.",
        " *",
        " * httpClient - HTTP Client (7)",
        " *          Always present, the HTTP client that can be used to make external HTTP requests.",
        " *",
        " * realm - String (primitive).",
        " *          Always present, the name of the realm the user is authenticating to.",
        " *",
        " * existingSession - Map<String, String> (5)",
        " *          Present if the request contains the session cookie, the user's session object. The returned map from",
        " *          SSOToken.getProperties() (8)",
        " *",
        " * requestParameters - Map (5)",
        " *          Always present, the object that contains the authentication request parameters.",
        " *",
        " *",
        " * Outputs:",
        " *",
        " * config - Map (5)",
        " *           Define and fill a Map object named 'config' with custom values, this will define the configuration for the",
        " *           associated node selected in the ConfigProviderNode.",
        " *",
        " * Reference:",
        " * (1) Node State - https://backstage.forgerock.com/docs/idcloud-am/latest/authentication-guide/scripting-api-node.html#scripting-api-node-nodeState",
        " * (2) Profile Data - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-node-id-repo",
        " * (3) Credentials and Secrets - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-authn-secrets",
        " * (4) Request Headers - https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html",
        " * (6) Debug Logging - https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * (7) HTTP Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (8) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " */",
        "",
        "config = {",
        "    \"key0\": {\"subKey\": \"value0\"},",
        "    \"key1\": \"value1\"",
        "};"
      ]
    },
    "69f06e63-128c-4e2f-af52-079a8a6f448b": {
      "_id": "69f06e63-128c-4e2f-af52-079a8a6f448b",
      "context": "SAML2_SP_ADAPTER",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for SAML2 SP Adapter",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "SAML2 SP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOnRequest",
        " *      - preSingleSignOnProcess",
        " *      - postSingleSignOnSuccess",
        " *      - postSingleSignOnFailure",
        " *      - postNewNameIDSuccess",
        " *      - postTerminateNameIDSuccess",
        " *      - preSingleLogoutProcess",
        " *      - postSingleLogoutSuccess",
        " *",
        " * Please see the JavaDoc for the interface for more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/org/forgerock/openam/saml2/plugins/SPAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpEntityId - String",
        " *     The entity ID for the Identity Provider for which the sign-on request will be sent.",
        " * request - HttpServletRequest (1)",
        " *     Servlet request object",
        " * response - HttpServletResponse (2)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (3)",
        " *     The authentication request sent that is sent from the Service Provider.",
        " * session - SSOToken (4)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * res - Response (5)",
        " *     The SSO Response received from the Identity Provider.",
        " * profile - String",
        " *     The protocol profile that is used, this will be one of the following values from SAML2Constants (6):",
        " *          - SAML2Constants.HTTP_POST",
        " *          - SAML2Constants.HTTP_ARTIFACT",
        " *          - SAML2Constants.PAOS",
        " * out - PrintWriter (7)",
        " *     The PrintWriter that can be used to write to.",
        " * isFederation - boolean",
        " *     Set to true if using federation, otherwise false.",
        " * failureCode - int",
        " *     An integer holding the failure code when an error has occurred. For potential values see SPAdapter.",
        " * userId - String",
        " *     The unique universal ID of the user with whom the new name identifier request was performed.",
        " * idRequest - ManageNameIDRequest (8)",
        " *     The new name identifier request, this will be null if the request object is not available",
        " * idResponse - ManageNameIDResponse (9)",
        " *     The new name identifier response, this will be null if the response object is not available",
        " * binding - String",
        " *     The binding used for the new name identifier request. This will be one of the following values:",
        " *          - SAML2Constants.SOAP",
        " *          - SAML2Constants.HTTP_REDIRECT",
        " * logoutRequest - LogoutRequest (10)",
        " *     The single logout request.",
        " * logoutResponse - LogoutResponse (11)",
        " *     The single logout response.",
        " * spAdapterScriptHelper - SpAdapterScriptHelper (12)",
        " *     An instance of SpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (13):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (2) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (3) AuthnRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/Response.html",
        " * (6) SAML2Constants - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/common/SAML2Constants.html",
        " * (7) PrintWriter - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/PrintWriter.html",
        " * (8) ManageNameIDRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/ManageNameIDRequest.html",
        " * (9) ManageNameIDResponse - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/ManageNameIDResponse.html",
        " * (10) LogoutRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/LogoutRequest.html",
        " * (11) LogoutResponse - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/LogoutResponse.html",
        " * (12) SpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/plugins/scripted/SpAdapterScriptHelper.html.",
        " * (13) SAML2Exception - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 SP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOnRequest:",
        " *     hostedEntityId",
        " *     idpEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     authnRequest",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function preSingleSignOnRequest() {",
        "}",
        "",
        "/*",
        " * Available variables for preSingleSignOnProcess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     authnRequest",
        " *     res",
        " *     profile",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function preSingleSignOnProcess() {",
        "}",
        "",
        "/*",
        " * Available variables for postSingleSignOnSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     out",
        " *     session",
        " *     authnRequest",
        " *     res",
        " *     profile",
        " *     isFederation",
        " *     spAdapterScriptHelper",
        " *     logger",
        " *",
        " * Return - true if response is being redirected, false if not. Default to false.",
        " */",
        "function postSingleSignOnSuccess() {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for postSingleSignOnFailure:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     authnRequest",
        " *     res",
        " *     profile",
        " *     failureCode",
        " *     spAdapterScriptHelper",
        " *     logger",
        " *",
        " * Return - true if response is being redirected, false if not. Default to false.",
        " */",
        "function postSingleSignOnFailure() {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for postNewNameIDSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     idRequest",
        " *     idResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function postNewNameIDSuccess() {",
        "}",
        "",
        "/*",
        " * Available variables for postTerminateNameIDSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     idRequest",
        " *     idResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function postTerminateNameIDSuccess() {",
        "}",
        "",
        "/*",
        " * Available variables for preSingleLogoutProcess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     logoutRequest",
        " *     logoutResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function preSingleLogoutProcess() {",
        "}",
        "",
        "/*",
        " * Available variables for postSingleLogoutSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     logoutRequest",
        " *     logoutResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function postSingleLogoutSuccess() {",
        "}"
      ]
    },
    "6b3cfd48-62d3-48ff-a96f-fe8f3a22ab30": {
      "_id": "6b3cfd48-62d3-48ff-a96f-fe8f3a22ab30",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Amazon",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Amazon Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.user_id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email)))"
      ]
    },
    "703dab1a-1921-4981-98dd-b8e5349d8548": {
      "_id": "703dab1a-1921-4981-98dd-b8e5349d8548",
      "context": "AUTHENTICATION_SERVER_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for server side Device Id (Match) Authentication Module",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Device Id (Match) - Server Side",
      "script": [
        "/*",
        " * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.",
        " *",
        " * Copyright (c) 2009 Sun Microsystems Inc. All Rights Reserved",
        " *",
        " * The contents of this file are subject to the terms",
        " * of the Common Development and Distribution License",
        " * (the License). You may not use this file except in",
        " * compliance with the License.",
        " *",
        " * You can obtain a copy of the License at",
        " * https://opensso.dev.java.net/public/CDDLv1.0.html or",
        " * opensso/legal/CDDLv1.0.txt",
        " * See the License for the specific language governing",
        " * permission and limitations under the License.",
        " *",
        " * When distributing Covered Code, include this CDDL",
        " * Header Notice in each file and include the License file",
        " * at opensso/legal/CDDLv1.0.txt.",
        " * If applicable, add the following below the CDDL Header,",
        " * with the fields enclosed by brackets [] replaced by",
        " * your own identifying information:",
        " * \"Portions Copyrighted [year] [name of copyright owner]\"",
        " *",
        " */",
        "/*",
        " * Portions Copyrighted 2013 Syntegrity.",
        " * Portions Copyrighted 2013-2023 ForgeRock AS.",
        " */",
        "",
        "var ScalarComparator = {}, ScreenComparator = {}, MultiValueComparator = {}, UserAgentComparator = {}, GeolocationComparator = {};",
        "",
        "var config = {",
        "    profileExpiration: 30,              //in days",
        "    maxProfilesAllowed: 5,",
        "    maxPenaltyPoints: 0,",
        "    attributes: {",
        "        screen: {",
        "            required: true,",
        "            comparator: ScreenComparator,",
        "            args: {",
        "                penaltyPoints: 50",
        "            }",
        "        },",
        "        plugins: {",
        "            installedPlugins: {",
        "                required: false,",
        "                comparator: MultiValueComparator,",
        "                args: {",
        "                    maxPercentageDifference: 10,",
        "                    maxDifferences: 5,",
        "                    penaltyPoints: 100",
        "                }",
        "            }",
        "        },",
        "        fonts: {",
        "            installedFonts: {",
        "                required: false,",
        "                comparator: MultiValueComparator,",
        "                args: {",
        "                    maxPercentageDifference: 10,",
        "                    maxDifferences: 5,",
        "                    penaltyPoints: 100",
        "                }",
        "            }",
        "        },",
        "        timezone: {",
        "            timezone: {",
        "                required: false,",
        "                comparator: ScalarComparator,",
        "                args: {",
        "                    penaltyPoints: 100",
        "                }",
        "            }",
        "        },",
        "        userAgent: {",
        "            required: true,",
        "            comparator: UserAgentComparator,",
        "            args: {",
        "                ignoreVersion: true,",
        "                penaltyPoints: 100",
        "            }",
        "        },",
        "        geolocation: {",
        "            required: false,",
        "            comparator: GeolocationComparator,",
        "            args: {",
        "                allowedRange: 100,            //in miles",
        "                penaltyPoints: 100",
        "            }",
        "        }",
        "    }",
        "};",
        "",
        "//---------------------------------------------------------------------------//",
        "//                           Comparator functions                            //",
        "//---------------------------------------------------------------------------//",
        "",
        "var all, any, calculateDistance, calculateIntersection, calculatePercentage, nullOrUndefined, splitAndTrim,",
        "    undefinedLocation;",
        "",
        "// ComparisonResult",
        "",
        "/**",
        " * Constructs an instance of a ComparisonResult with the given penalty points.",
        " *",
        " * @param penaltyPoints (Number) The penalty points for the comparison (defaults to 0).",
        " * @param additionalInfoInCurrentValue (boolean) Whether the current value contains more information",
        " *                                               than the stored value (defaults to false).",
        " */",
        "function ComparisonResult() {",
        "",
        "    var penaltyPoints = 0,",
        "        additionalInfoInCurrentValue = false;",
        "",
        "    if (arguments[0] !== undefined && arguments[1] !== undefined) {",
        "        penaltyPoints = arguments[0];",
        "        additionalInfoInCurrentValue = arguments[1];",
        "    }",
        "",
        "    if (arguments[0] !== undefined && arguments[1] === undefined) {",
        "        if (typeof(arguments[0]) === \"boolean\") {",
        "            additionalInfoInCurrentValue = arguments[0];",
        "        } else {",
        "            penaltyPoints = arguments[0];",
        "        }",
        "    }",
        "",
        "    this.penaltyPoints = penaltyPoints;",
        "    this.additionalInfoInCurrentValue = additionalInfoInCurrentValue;",
        "",
        "}",
        "",
        "ComparisonResult.ZERO_PENALTY_POINTS = new ComparisonResult(0);",
        "",
        "/**",
        " * Static method for functional programming.",
        " *",
        " * @return boolean true if comparisonResult.isSuccessful().",
        " */",
        "ComparisonResult.isSuccessful =  function(comparisonResult) {",
        "    return comparisonResult.isSuccessful();",
        "};",
        "",
        "",
        "/**",
        " * Static method for functional programming.",
        " *",
        " * @return boolean true if comparisonResult.additionalInfoInCurrentValue.",
        " */",
        "ComparisonResult.additionalInfoInCurrentValue =  function(comparisonResult) {",
        "    return comparisonResult.additionalInfoInCurrentValue;",
        "};",
        "",
        "/**",
        " * Comparison function that can be provided as an argument to array.sort",
        " */",
        "ComparisonResult.compare = function(first, second) {",
        "    if (nullOrUndefined(first) && nullOrUndefined(second)) {",
        "        return 0;",
        "    } else if (nullOrUndefined(first)) {",
        "        return -1;",
        "    } else if (nullOrUndefined(second)) {",
        "        return 1;",
        "    } else {",
        "        if (first.penaltyPoints !== second.penaltyPoints) {",
        "            return first.penaltyPoints - second.penaltyPoints;",
        "        } else {",
        "            return (first.additionalInfoInCurrentValue ? 1 : 0) - (second.additionalInfoInCurrentValue ? 1 : 0);",
        "        }",
        "    }",
        "};",
        "",
        "/**",
        " * Amalgamates the given ComparisonResult into this ComparisonResult.",
        " *",
        " * @param comparisonResult The ComparisonResult to include.",
        " */",
        "ComparisonResult.prototype.addComparisonResult = function(comparisonResult) {",
        "    this.penaltyPoints += comparisonResult.penaltyPoints;",
        "    if (comparisonResult.additionalInfoInCurrentValue) {",
        "        this.additionalInfoInCurrentValue = comparisonResult.additionalInfoInCurrentValue;",
        "    }",
        "};",
        "",
        "/**",
        " * Returns true if no penalty points have been assigned for the comparison.",
        " *",
        " * @return boolean true if the comparison was successful.",
        " */",
        "ComparisonResult.prototype.isSuccessful = function() {",
        "    return nullOrUndefined(this.penaltyPoints) || this.penaltyPoints === 0;",
        "};",
        "",
        "/**",
        " * Compares two simple objects (String|Number) and if they are equal then returns a ComparisonResult with zero",
        " * penalty points assigned, otherwise returns a ComparisonResult with the given number of penalty points assigned.",
        " *",
        " * @param currentValue (String|Number) The current value.",
        " * @param storedValue (String|Number) The stored value.",
        " * @param config: {",
        " *            \"penaltyPoints\": (Number) The number of penalty points.",
        " *        }",
        " * @return ComparisonResult.",
        " */",
        "ScalarComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"StringComparator.compare:currentValue: \" + JSON.stringify(currentValue));",
        "        logger.message(\"StringComparator.compare:storedValue: \" + JSON.stringify(storedValue));",
        "        logger.message(\"StringComparator.compare:config: \" + JSON.stringify(config));",
        "    }",
        "    if (config.penaltyPoints === 0) {",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (!nullOrUndefined(storedValue)) {",
        "        if (nullOrUndefined(currentValue) || currentValue !== storedValue) {",
        "            return new ComparisonResult(config.penaltyPoints);",
        "        }",
        "    } else if (!nullOrUndefined(currentValue)) {",
        "        return new ComparisonResult(true);",
        "    }",
        "",
        "    return ComparisonResult.ZERO_PENALTY_POINTS;",
        "};",
        "",
        "/**",
        " * Compares two screens and if they are equal then returns a ComparisonResult with zero penalty points assigned,",
        " * otherwise returns a ComparisonResult with the given number of penalty points assigned.",
        " *",
        " * @param currentValue: {",
        " *            \"screenWidth\": (Number) The current client screen width.",
        " *            \"screenHeight\": (Number) The current client screen height.",
        " *            \"screenColourDepth\": (Number) The current client screen colour depth.",
        " *        }",
        " * @param storedValue: {",
        " *            \"screenWidth\": (Number) The stored client screen width.",
        " *            \"screenHeight\": (Number) The stored client screen height.",
        " *            \"screenColourDepth\": (Number) The stored client screen colour depth.",
        " *        }",
        " * @param config: {",
        " *            \"penaltyPoints\": (Number) The number of penalty points.",
        " *        }",
        " * @return ComparisonResult",
        " */",
        "ScreenComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"ScreenComparator.compare:currentValue: \" + JSON.stringify(currentValue));",
        "        logger.message(\"ScreenComparator.compare:storedValue: \" + JSON.stringify(storedValue));",
        "        logger.message(\"ScreenComparator.compare:config: \" + JSON.stringify(config));",
        "    }",
        "",
        "    if (nullOrUndefined(currentValue)) {",
        "        currentValue = {screenWidth: null, screenHeight: null, screenColourDepth: null};",
        "    }",
        "    if (nullOrUndefined(storedValue)) {",
        "        storedValue = {screenWidth: null, screenHeight: null, screenColourDepth: null};",
        "    }",
        "",
        "    var comparisonResults = [",
        "        ScalarComparator.compare(currentValue.screenWidth, storedValue.screenWidth, config),",
        "        ScalarComparator.compare(currentValue.screenHeight, storedValue.screenHeight, config),",
        "        ScalarComparator.compare(currentValue.screenColourDepth, storedValue.screenColourDepth, config)];",
        "",
        "    if (all(comparisonResults, ComparisonResult.isSuccessful)) {",
        "        return new ComparisonResult(any(comparisonResults, ComparisonResult.additionalInfoInCurrentValue));",
        "    } else {",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "};",
        "",
        "/**",
        " * Splits both values using delimiter, trims every value and compares collections of values.",
        " * Returns zero-result for same multi-value attributes.",
        " *",
        " * If collections are not same checks if number of differences is less or equal maxDifferences or",
        " * percentage of difference is less or equal maxPercentageDifference.",
        " *",
        " * If yes then returns zero-result with additional info, else returns penaltyPoints-result.",
        " *",
        " * @param currentValue: (String) The current value.",
        " * @param storedValue: (String) The stored value.",
        " * @param config: {",
        " *            \"maxPercentageDifference\": (Number) The max difference percentage in the values,",
        " *                                                before the penalty is assigned.",
        " *            \"maxDifferences\": (Number) The max number of differences in the values,",
        " *                                       before the penalty points are assigned.",
        " *            \"penaltyPoints\": (Number) The number of penalty points.",
        "  *        }",
        " * @return ComparisonResult",
        " */",
        "MultiValueComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"MultiValueComparator.compare:currentValue: \" + JSON.stringify(currentValue));",
        "        logger.message(\"MultiValueComparator.compare:storedValue: \" + JSON.stringify(storedValue));",
        "        logger.message(\"MultiValueComparator.compare:config: \" + JSON.stringify(config));",
        "    }",
        "",
        "    var delimiter = \";\",",
        "        currentValues = splitAndTrim(currentValue, delimiter),",
        "        storedValues = splitAndTrim(storedValue, delimiter),",
        "        maxNumberOfElements = Math.max(currentValues.length, storedValues.length),",
        "        numberOfTheSameElements = calculateIntersection(currentValues, storedValues).length,",
        "        numberOfDifferences = maxNumberOfElements - numberOfTheSameElements,",
        "        percentageOfDifferences = calculatePercentage(numberOfDifferences, maxNumberOfElements);",
        "",
        "    if (nullOrUndefined(storedValue) && !nullOrUndefined(currentValue)) {",
        "        return new ComparisonResult(true);",
        "    }",
        "",
        "    if (logger.messageEnabled()) {",
        "        logger.message(numberOfTheSameElements + \" of \" + maxNumberOfElements + \" are same\");",
        "    }",
        "",
        "    if (maxNumberOfElements === 0) {",
        "        logger.message(\"Ignored because no attributes found in both profiles\");",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (numberOfTheSameElements === maxNumberOfElements) {",
        "        logger.message(\"Ignored because all attributes are same\");",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (numberOfDifferences > config.maxDifferences) {",
        "        if (logger.messageEnabled()) {",
        "            logger.message(\"Would be ignored if not more than \" + config.maxDifferences + \" differences\");",
        "        }",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "",
        "    if (percentageOfDifferences > config.maxPercentageDifference) {",
        "        if (logger.messageEnabled()) {",
        "            logger.message(percentageOfDifferences + \" percents are different\");",
        "            logger.message(\"Would be ignored if not more than \" + config.maxPercentageDifference + \" percent\");",
        "        }",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"Ignored because number of differences(\" + numberOfDifferences + \") not more than \"",
        "            + config.maxDifferences);",
        "        logger.message(percentageOfDifferences + \" percents are different\");",
        "        logger.message(\"Ignored because not more than \" + config.maxPercentageDifference + \" percent\");",
        "    }",
        "    return new ComparisonResult(true);",
        "};",
        "",
        "/**",
        " * Compares two User Agent Strings and if they are equal then returns a ComparisonResult with zero penalty",
        " * points assigned, otherwise returns a ComparisonResult with the given number of penalty points assigned.",
        " *",
        " * @param currentValue (String) The current value.",
        " * @param storedValue (String) The stored value.",
        " * @param config: {",
        " *            \"ignoreVersion\": (boolean) If the version numbers in the User Agent Strings should be ignore",
        " *                                       in the comparison.",
        " *            \"penaltyPoints\": (Number) The number of penalty points.",
        " *        }",
        " * @return A ComparisonResult.",
        " */",
        "UserAgentComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"UserAgentComparator.compare:currentValue: \" + JSON.stringify(currentValue));",
        "        logger.message(\"UserAgentComparator.compare:storedValue: \" + JSON.stringify(storedValue));",
        "        logger.message(\"UserAgentComparator.compare:config: \" + JSON.stringify(config));",
        "    }",
        "",
        "    if (config.ignoreVersion) {",
        "        // remove version number",
        "        currentValue = nullOrUndefined(currentValue) ? null : currentValue.replace(/[\\d\\.]+/g, \"\").trim();",
        "        storedValue = nullOrUndefined(storedValue) ? null : storedValue.replace(/[\\d\\.]+/g, \"\").trim();",
        "    }",
        "",
        "    return ScalarComparator.compare(currentValue, storedValue, config);",
        "};",
        "",
        "/**",
        " * Compares two locations, taking into account a degree of difference.",
        " *",
        " * @param currentValue: {",
        " *            \"latitude\": (Number) The current latitude.",
        " *            \"longitude\": (Number) The current longitude.",
        " *        }",
        " * @param storedValue: {",
        " *            \"latitude\": (Number) The stored latitude.",
        " *            \"longitude\": (Number) The stored longitude.",
        " *        }",
        " * @param config: {",
        " *            \"allowedRange\": (Number) The max difference allowed in the two locations, before the penalty is assigned.",
        " *            \"penaltyPoints\": (Number) The number of penalty points.",
        "*         }",
        " * @return ComparisonResult",
        " */",
        "GeolocationComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"GeolocationComparator.compare:currentValue: \" + JSON.stringify(currentValue));",
        "        logger.message(\"GeolocationComparator.compare:storedValue: \" + JSON.stringify(storedValue));",
        "        logger.message(\"GeolocationComparator.compare:config: \" + JSON.stringify(config));",
        "    }",
        "",
        "    // Check for undefined stored or current locations",
        "",
        "    if (undefinedLocation(currentValue) && undefinedLocation(storedValue)) {",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "    if (undefinedLocation(currentValue) && !undefinedLocation(storedValue)) {",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "    if (!undefinedLocation(currentValue) && undefinedLocation(storedValue)) {",
        "        return new ComparisonResult(true);",
        "    }",
        "",
        "    // Both locations defined, therefore perform comparison",
        "",
        "    var distance = calculateDistance(currentValue, storedValue);",
        "",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"Distance between (\" + currentValue.latitude + \",\" + currentValue.longitude + \") and (\" +",
        "            storedValue.latitude + \",\" + storedValue.longitude + \") is \" + distance + \" miles\");",
        "    }",
        "",
        "    if (parseFloat(distance.toPrecision(5)) === 0) {",
        "        logger.message(\"Location is the same\");",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (distance <= config.allowedRange) {",
        "        if (logger.messageEnabled()) {",
        "            logger.message(\"Tolerated because distance not more then \" + config.allowedRange);",
        "        }",
        "        return new ComparisonResult(true);",
        "    } else {",
        "        if (logger.messageEnabled()) {",
        "            logger.message(\"Would be ignored if distance not more then \" + config.allowedRange);",
        "        }",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "};",
        "",
        "",
        "//---------------------------------------------------------------------------//",
        "//                    Device Print Logic - DO NOT MODIFY                     //",
        "//---------------------------------------------------------------------------//",
        "",
        "// Utility functions",
        "",
        "/**",
        " * Returns true if evaluating function f on each element of the Array a returns true.",
        " *",
        " * @param a: (Array) The array of elements to evaluate",
        " * @param f: (Function) A single argument function for mapping elements of the array to boolean.",
        " * @return boolean.",
        " */",
        "all = function(a, f) {",
        "    var i;",
        "    for (i = 0; i < a.length; i++) {",
        "        if (f(a[i]) === false) {",
        "            return false;",
        "        }",
        "    }",
        "    return true;",
        "};",
        "",
        "/**",
        " * Returns true if evaluating function f on any element of the Array a returns true.",
        " *",
        " * @param a: (Array) The array of elements to evaluate",
        " * @param f: (Function) A single argument function for mapping elements of the array to boolean.",
        " * @return boolean.",
        " */",
        "any = function(a, f) {",
        "    var i;",
        "    for (i = 0; i < a.length; i++) {",
        "        if (f(a[i]) === true) {",
        "            return true;",
        "        }",
        "    }",
        "    return false;",
        "};",
        "",
        "/**",
        " * Returns true if the provided location is null or has undefined longitude or latitude values.",
        " *",
        " * @param location: {",
        " *            \"latitude\": (Number) The latitude.",
        " *            \"longitude\": (Number) The longitude.",
        " *        }",
        " * @return boolean",
        " */",
        "undefinedLocation = function(location) {",
        "    return nullOrUndefined(location) || nullOrUndefined(location.latitude) || nullOrUndefined(location.longitude);",
        "};",
        "",
        "/**",
        " * Returns true if the provided value is null or undefined.",
        " *",
        " * @param value: a value of any type",
        " * @return boolean",
        " */",
        "nullOrUndefined = function(value) {",
        "    return value === null || value === undefined;",
        "};",
        "",
        "/**",
        " * Calculates the distances between the two locations.",
        " *",
        " * @param first: {",
        " *            \"latitude\": (Number) The first latitude.",
        " *            \"longitude\": (Number) The first longitude.",
        " *        }",
        " * @param second: {",
        " *            \"latitude\": (Number) The second latitude.",
        " *            \"longitude\": (Number) The second longitude.",
        " *        }",
        " * @return Number The distance between the two locations.",
        " */",
        "calculateDistance = function(first, second) {",
        "    var factor = (Math.PI / 180),",
        "        theta,",
        "        dist;",
        "    function degreesToRadians(degrees) {",
        "        return degrees * factor;",
        "    }",
        "    function radiansToDegrees(radians) {",
        "        return radians / factor;",
        "    }",
        "    theta = first.longitude - second.longitude;",
        "    dist = Math.sin(degreesToRadians(first.latitude)) * Math.sin(degreesToRadians(second.latitude))",
        "        + Math.cos(degreesToRadians(first.latitude)) * Math.cos(degreesToRadians(second.latitude))",
        "        * Math.cos(degreesToRadians(theta));",
        "    dist = Math.acos(dist);",
        "    dist = radiansToDegrees(dist);",
        "    dist = dist * 60 * 1.1515;",
        "    return dist;",
        "};",
        "",
        "/**",
        " * Converts a String holding a delimited sequence of values into an array.",
        " *",
        " * @param text (String) The String representation of a delimited sequence of values.",
        " * @param delimiter (String) The character delimiting values within the text String.",
        " * @return (Array) The comma separated values.",
        " */",
        "splitAndTrim = function(text, delimiter) {",
        "",
        "    var results = [],",
        "        i,",
        "        values,",
        "        value;",
        "    if (text === null) {",
        "        return results;",
        "    }",
        "",
        "    values = text.split(delimiter);",
        "    for (i = 0; i < values.length; i++) {",
        "        value = values[i].trim();",
        "        if (value !== \"\") {",
        "            results.push(value);",
        "        }",
        "    }",
        "",
        "    return results;",
        "};",
        "",
        "/**",
        " * Converts value to a percentage of range.",
        " *",
        " * @param value (Number) The actual number to be converted to a percentage.",
        " * @param range (Number) The total number of values (i.e. represents 100%).",
        " * @return (Number) The percentage.",
        " */",
        "calculatePercentage = function(value, range) {",
        "    if (range === 0) {",
        "        return 0;",
        "    }",
        "    return parseFloat((value / range).toPrecision(2)) * 100;",
        "};",
        "",
        "/**",
        " * Creates a new array containing only those elements found in both arrays received as arguments.",
        " *",
        " * @param first (Array) The first array.",
        " * @param second (Array) The second array.",
        " * @return (Array) The elements that found in first and second.",
        " */",
        "calculateIntersection = function(first, second) {",
        "    return first.filter(function(element) {",
        "        return second.indexOf(element) !== -1;",
        "    });",
        "};",
        "",
        "function getValue(obj, attributePath) {",
        "    var value = obj,",
        "        i;",
        "    for (i = 0; i < attributePath.length; i++) {",
        "        if (value === undefined) {",
        "            return null;",
        "        }",
        "        value = value[attributePath[i]];",
        "    }",
        "    return value;",
        "}",
        "",
        "",
        "function isLeafNode(attributeConfig) {",
        "    return attributeConfig.comparator !== undefined;",
        "}",
        "",
        "function getAttributePaths(attributeConfig, attributePath) {",
        "",
        "    var attributePaths = [],",
        "        attributeName,",
        "        attrPaths,",
        "        attrPath,",
        "        i;",
        "",
        "    for (attributeName in attributeConfig) {",
        "        if (attributeConfig.hasOwnProperty(attributeName)) {",
        "",
        "            if (isLeafNode(attributeConfig[attributeName])) {",
        "                attrPath = attributePath.slice();",
        "                attrPath.push(attributeName);",
        "                attributePaths.push(attrPath);",
        "            } else {",
        "                attrPath = attributePath.slice();",
        "                attrPath.push(attributeName);",
        "                attrPaths = getAttributePaths(attributeConfig[attributeName], attrPath);",
        "                for (i = 0; i < attrPaths.length; i++) {",
        "                    attributePaths.push(attrPaths[i]);",
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    return attributePaths;",
        "}",
        "",
        "function getDevicePrintAttributePaths(attributeConfig) {",
        "    return getAttributePaths(attributeConfig, []);",
        "}",
        "",
        "function hasRequiredAttributes(devicePrint, attributeConfig) {",
        "",
        "    var attributePaths = getDevicePrintAttributePaths(attributeConfig),",
        "        i,",
        "        attrValue,",
        "        attrConfig;",
        "",
        "    for (i = 0; i < attributePaths.length; i++) {",
        "",
        "        attrValue = getValue(devicePrint, attributePaths[i]);",
        "        attrConfig = getValue(attributeConfig, attributePaths[i]);",
        "",
        "        if (attrConfig.required && attrValue === undefined) {",
        "            logger.warning(\"Device Print profile missing required attribute, \" + attributePaths[i]);",
        "            return false;",
        "        }",
        "    }",
        "",
        "    logger.message(\"device print has required attributes\");",
        "    return true;",
        "}",
        "",
        "function compareDevicePrintProfiles(attributeConfig, devicePrint, devicePrintProfiles, maxPenaltyPoints) {",
        "",
        "    var attributePaths = getDevicePrintAttributePaths(attributeConfig),",
        "        dao = sharedState.get('_DeviceIdDao'),",
        "        results,",
        "        j,",
        "        aggregatedComparisonResult,",
        "        i,",
        "        currentValue,",
        "        storedValue,",
        "        attrConfig,",
        "        comparisonResult,",
        "        selectedComparisonResult,",
        "        selectedProfile,",
        "        curDevicePrintProfile,",
        "        vals;",
        "",
        "    results = [];",
        "    for (j = 0; j < devicePrintProfiles.length; j++) {",
        "        curDevicePrintProfile = JSON.parse(org.forgerock.json.JsonValue.json(devicePrintProfiles[j]));",
        "        aggregatedComparisonResult = new ComparisonResult();",
        "        for (i = 0; i < attributePaths.length; i++) {",
        "",
        "            currentValue = getValue(devicePrint, attributePaths[i]);",
        "            storedValue = getValue(curDevicePrintProfile.devicePrint, attributePaths[i]);",
        "            attrConfig = getValue(attributeConfig, attributePaths[i]);",
        "",
        "            if (storedValue === null) {",
        "                comparisonResult = new ComparisonResult(attrConfig.penaltyPoints);",
        "            } else {",
        "                comparisonResult = attrConfig.comparator.compare(currentValue, storedValue, attrConfig.args);",
        "            }",
        "",
        "            if (logger.messageEnabled()) {",
        "                logger.message(\"Comparing attribute path: \" + attributePaths[i]",
        "                    + \", Comparison result: successful=\" + comparisonResult.isSuccessful() + \", penaltyPoints=\"",
        "                    + comparisonResult.penaltyPoints + \", additionalInfoInCurrentValue=\"",
        "                    + comparisonResult.additionalInfoInCurrentValue);",
        "            }",
        "            aggregatedComparisonResult.addComparisonResult(comparisonResult);",
        "        }",
        "        if (logger.messageEnabled()) {",
        "            logger.message(\"Aggregated comparison result: successful=\"",
        "                + aggregatedComparisonResult.isSuccessful() + \", penaltyPoints=\"",
        "                + aggregatedComparisonResult.penaltyPoints + \", additionalInfoInCurrentValue=\"",
        "                + aggregatedComparisonResult.additionalInfoInCurrentValue);",
        "        }",
        "",
        "        results.push({",
        "            key: aggregatedComparisonResult,",
        "            value: devicePrintProfiles[j]",
        "        });",
        "    }",
        "",
        "    if (results.length === 0) {",
        "        return null;",
        "    }",
        "",
        "    results.sort(function(a, b) {",
        "        return ComparisonResult.compare(a.key, b.key);",
        "    });",
        "    selectedComparisonResult = results[0].key;",
        "    if (logger.messageEnabled()) {",
        "        logger.message(\"Selected comparison result: successful=\" + selectedComparisonResult.isSuccessful()",
        "            + \", penaltyPoints=\" + selectedComparisonResult.penaltyPoints + \", additionalInfoInCurrentValue=\"",
        "            + selectedComparisonResult.additionalInfoInCurrentValue);",
        "    }",
        "",
        "    selectedProfile = null;",
        "    if (selectedComparisonResult.penaltyPoints <= maxPenaltyPoints) {",
        "        selectedProfile = results[0].value;",
        "        if (logger.messageEnabled()) {",
        "            logger.message(\"Selected profile: \" + selectedProfile +",
        "                \" with \" + selectedComparisonResult.penaltyPoints + \" penalty points\");",
        "        }",
        "    }",
        "",
        "    if (selectedProfile === null) {",
        "        return false;",
        "    }",
        "",
        "    /* update profile */",
        "    selectedProfile.put(\"selectionCounter\",",
        "        java.lang.Integer.valueOf(parseInt(selectedProfile.get(\"selectionCounter\"), 10) + 1));",
        "    selectedProfile.put(\"lastSelectedDate\", java.lang.Long.valueOf(new Date().getTime()));",
        "    selectedProfile.put(\"devicePrint\", devicePrint);",
        "",
        "    vals = [];",
        "    for (i = 0; i < devicePrintProfiles.length; i++) {",
        "        vals.push(org.forgerock.json.JsonValue.json(devicePrintProfiles[i]));",
        "    }",
        "",
        "    dao.saveDeviceProfiles(username, realm, vals);",
        "",
        "    return true;",
        "}",
        "",
        "function matchDevicePrint() {",
        "",
        "    if (!username) {",
        "        logger.error(\"Username not set. Cannot compare user's device print profiles.\");",
        "        authState = FAILED;",
        "    } else {",
        "",
        "        if (logger.messageEnabled()) {",
        "            logger.message(\"client devicePrint: \" + clientScriptOutputData);",
        "        }",
        "",
        "        var getProfiles = function () {",
        "",
        "                function isExpiredProfile(devicePrintProfile) {",
        "                    var expirationDate = new Date(),",
        "                        lastSelectedDate;",
        "                    expirationDate.setDate(expirationDate.getDate() - config.profileExpiration);",
        "",
        "                    lastSelectedDate = new Date(devicePrintProfile.lastSelectedDate);",
        "",
        "                    return lastSelectedDate < expirationDate;",
        "                }",
        "",
        "                function getNotExpiredProfiles() {",
        "                    var profile,",
        "                        dao = sharedState.get('_DeviceIdDao'),",
        "                        results = [],",
        "                        profiles,",
        "                        iter;",
        "",
        "                    profiles = dao.getDeviceProfiles(username, realm);",
        "",
        "                    if (profiles) {",
        "                        iter = profiles.iterator();",
        "",
        "                        while (iter.hasNext()) {",
        "                            profile = iter.next().getObject();",
        "                            if (!isExpiredProfile(profile)) {",
        "                                results.push(profile);",
        "                            }",
        "                        }",
        "                    }",
        "                    if (logger.messageEnabled()) {",
        "                        logger.message(\"stored non-expired profiles: \" + results);",
        "                    }",
        "                    return results;",
        "                }",
        "",
        "                return getNotExpiredProfiles();",
        "            },",
        "            devicePrint = JSON.parse(clientScriptOutputData),",
        "            devicePrintProfiles = getProfiles();",
        "",
        "        if (!hasRequiredAttributes(devicePrint, config.attributes)) {",
        "            logger.message(\"devicePrint.hasRequiredAttributes: false\");",
        "            // Will fail this module but fall-through to next module. Which should be OTP.",
        "            authState = FAILED;",
        "        } else if (compareDevicePrintProfiles(config.attributes, devicePrint, devicePrintProfiles, config.maxPenaltyPoints)) {",
        "            logger.message(\"devicePrint.hasValidProfile: true\");",
        "            authState = SUCCESS;",
        "        } else {",
        "            logger.message(\"devicePrint.hasValidProfile: false\");",
        "            sharedState.put('devicePrintProfile', JSON.stringify(devicePrint));",
        "            // Will fail this module but fall-through to next module. Which should be OTP.",
        "            authState = FAILED;",
        "        }",
        "    }",
        "}",
        "",
        "matchDevicePrint();",
        ""
      ]
    },
    "739bdc48-fd24-4c52-b353-88706d75558a": {
      "_id": "739bdc48-fd24-4c52-b353-88706d75558a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check if username has already been collected.",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Check Username",
      "script": [
        "/* Check Username",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Check if username has already been collected.",
        " * Return \"known\" if yes, \"unknown\" otherwise.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - known",
        " * - unknown",
        " */",
        "(function () {",
        "    if (null != sharedState.get(\"username\")) {",
        "        outcome = \"known\";",
        "    }",
        "    else {",
        "        outcome = \"unknown\";",
        "    }",
        "}());"
      ]
    },
    "73cecbfc-dad0-4395-be6a-6858ee3a80e5": {
      "_id": "73cecbfc-dad0-4395-be6a-6858ee3a80e5",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Microsoft",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Microsoft Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.displayName),",
        "        field(\"givenName\", rawProfile.givenName),",
        "        field(\"familyName\", rawProfile.surname),",
        "        field(\"email\", rawProfile.userPrincipalName),",
        "        field(\"username\", rawProfile.userPrincipalName)))"
      ]
    },
    "7e3d7067-d50f-4674-8c76-a3e13a810c33": {
      "_id": "7e3d7067-d50f-4674-8c76-a3e13a810c33",
      "context": "AUTHENTICATION_SERVER_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for server side Scripted Authentication Module",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Scripted Module - Server Side",
      "script": [
        "/*",
        " * Copyright 2015-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var START_TIME = 9;  // 9am",
        "var END_TIME   = 17; // 5pm",
        "var longitude, latitude;",
        "var localTime;",
        "",
        "logger.message(\"Starting scripted authentication\");",
        "logger.message(\"User: \" + username);",
        "",
        "var userPostalAddress = getUserPostalAddress();",
        "logger.message(\"User address: \" + userPostalAddress);",
        "",
        "getLongitudeLatitudeFromUserPostalAddress();",
        "getLocalTime();",
        "",
        "logger.message(\"Current time at the users location: \" + localTime.getHours());",
        "if (localTime.getHours() < START_TIME || localTime.getHours() > END_TIME) {",
        "    logger.error(\"Login forbidden outside work hours!\");",
        "    authState = FAILED;",
        "} else {",
        "    logger.message(\"Authentication allowed!\");",
        "    authState = SUCCESS;",
        "}",
        "",
        "function getLongitudeLatitudeFromUserPostalAddress() {",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri(\"http://maps.googleapis.com/maps/api/geocode/json?address=\" + encodeURIComponent(userPostalAddress));",
        "      request.setMethod(\"GET\");",
        "      //the above URI has to be extended with an API_KEY if used in a frequent manner",
        "      //see documentation: https://developers.google.com/maps/documentation/geocoding/intro",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var geocode = JSON.parse(response.getEntity().getString());",
        "    var i;",
        "    for (i = 0; i < geocode.results.length; i++) {",
        "        var result = geocode.results[i];",
        "        latitude = result.geometry.location.lat;",
        "        longitude = result.geometry.location.lng;",
        "",
        "           logger.message(\"latitude:\" + latitude + \" longitude:\" + longitude);",
        "    }",
        "}",
        "",
        "function getLocalTime() {",
        "",
        "    var now = new Date().getTime() / 1000;",
        "    var location = \"location=\" + latitude + \",\" + longitude;",
        "    var timestamp = \"timestamp=\" + now;",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri(\"https://maps.googleapis.com/maps/api/timezone/json?\" + location + \"&\" + timestamp);",
        "      request.setMethod(\"GET\");",
        "      //the above URI has to be extended with an API_KEY if used in a frequent manner",
        "      //see documentation: https://developers.google.com/maps/documentation/timezone/intro",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var timezone = JSON.parse(response.getEntity().getString());",
        "    var localTimestamp = parseInt(now) + parseInt(timezone.dstOffset) + parseInt(timezone.rawOffset);",
        "    localTime = new Date(localTimestamp*1000);",
        "}",
        "",
        "function getUserPostalAddress() {",
        "    var userAddressSet = idRepository.getAttribute(username, \"postalAddress\");",
        "    if (userAddressSet == null || userAddressSet.isEmpty()) {",
        "        logger.warning(\"No address specified for user: \" + username);",
        "        return false;",
        "    }",
        "    return userAddressSet.iterator().next()",
        "}",
        "",
        "function logResponse(response) {",
        "    logger.message(\"User REST Call. Status: \" + response.getStatus() + \", Body: \" + response.getEntity().getString());",
        "}",
        ""
      ]
    },
    "8862ca8f-7770-4af5-a888-ac0df0947f36": {
      "_id": "8862ca8f-7770-4af5-a888-ac0df0947f36",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from LinkedIn",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "LinkedIn Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"givenName\", rawProfile.firstName.localized.get(0)),",
        "        field(\"familyName\", rawProfile.lastName.localized.get(0)),",
        "        field(\"photoUrl\", rawProfile.profilePicture.displayImage),",
        "        field(\"email\", rawProfile.elements.get(0).get(\"handle~\").emailAddress),",
        "        field(\"username\", rawProfile.elements.get(0).get(\"handle~\").emailAddress)))"
      ]
    },
    "8e298710-b55e-4085-a464-88a375a4004b": {
      "_id": "8e298710-b55e-4085-a464-88a375a4004b",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from Twitter",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Twitter Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id_str),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"photoUrl\", rawProfile.profile_image_url),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.screen_name)))"
      ]
    },
    "91d197de-5916-4dca-83b5-9a4df26e7159": {
      "_id": "91d197de-5916-4dca-83b5-9a4df26e7159",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from WordPress",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "WordPress Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.username),",
        "        field(\"displayName\", rawProfile.display_name),",
        "        field(\"photoUrl\", rawProfile.avatar_URL),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.username)))"
      ]
    },
    "9de3eb62-f131-4fac-a294-7bd170fd4acb": {
      "_id": "9de3eb62-f131-4fac-a294-7bd170fd4acb",
      "context": "POLICY_CONDITION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for Scripted Policy Conditions",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Scripted Policy Condition",
      "script": [
        "/*",
        " * Copyright 2015-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "/**",
        " * This is a Policy Condition example script. It demonstrates how to access a user's information,",
        " * use that information in external HTTP calls and make a policy decision based on the outcome.",
        " */",
        "",
        "var userAddress, userIP, resourceHost;",
        "",
        "if (validateAndInitializeParameters()) {",
        "",
        "    var countryFromUserAddress = getCountryFromUserAddress();",
        "    logger.message(\"Country retrieved from user's address: \" + countryFromUserAddress);",
        "    var countryFromUserIP = getCountryFromUserIP();",
        "    logger.message(\"Country retrieved from user's IP: \" + countryFromUserIP);",
        "    var countryFromResourceURI = getCountryFromResourceURI();",
        "    logger.message(\"Country retrieved from resource URI: \" + countryFromResourceURI);",
        "",
        "    if (countryFromUserAddress === countryFromUserIP && countryFromUserAddress === countryFromResourceURI) {",
        "        logger.message(\"Authorization Succeeded\");",
        "        responseAttributes.put(\"countryOfOrigin\", [countryFromUserAddress]);",
        "        authorized = true;",
        "    } else {",
        "        logger.message(\"Authorization Failed\");",
        "        authorized = false;",
        "    }",
        "",
        "} else {",
        "    logger.message(\"Required parameters not found. Authorization Failed.\");",
        "    authorized = false;",
        "}",
        "",
        "/**",
        " * Use the user's address to lookup their country of residence.",
        " *",
        " * @returns {*} The user's country of residence.",
        " */",
        "function getCountryFromUserAddress() {",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri(\"http://maps.googleapis.com/maps/api/geocode/json?address=\" + encodeURIComponent(userAddress));",
        "      request.setMethod(\"GET\");",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var geocode = JSON.parse(response.getEntity().getString());",
        "    var i;",
        "    for (i = 0; i < geocode.results.length; i++) {",
        "        var result = geocode.results[i];",
        "        var j;",
        "        for (j = 0; j < result.address_components.length; i++) {",
        "            if (result.address_components[i].types[0] == \"country\") {",
        "                return result.address_components[i].long_name;",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "/**",
        " * Use the user's IP to lookup the country from which the request originated.",
        " *",
        " * @returns {*} The country from which the request originated.",
        " */",
        "function getCountryFromUserIP() {",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri(\"http://ip-api.com/json/\" + userIP);",
        "      request.setMethod(\"GET\");",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    if (result) {",
        "        return result.country;",
        "    }",
        "}",
        "",
        "/**",
        " * Use the requested resource's host name to lookup the country where the resource is hosted.",
        " *",
        " * @returns {*} The country in which the resource is hosted.",
        " */",
        "function getCountryFromResourceURI() {",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri(\"http://ip-api.com/json/\" + encodeURIComponent(resourceHost));",
        "      request.setMethod(\"GET\");",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    if (result) {",
        "        return result.country;",
        "    }",
        "}",
        "",
        "/**",
        " * Retrieve and validate the variables required to make the external HTTP calls.",
        " *",
        " * @returns {boolean} Will be true if validation was successful.",
        " */",
        "function validateAndInitializeParameters() {",
        "    var userAddressSet = identity.getAttribute(\"postalAddress\");",
        "    if (userAddressSet == null || userAddressSet.isEmpty()) {",
        "        logger.warning(\"No address specified for user: \" + username);",
        "        return false;",
        "    }",
        "    userAddress = userAddressSet.iterator().next();",
        "    logger.message(\"User address: \" + userAddress);",
        "",
        "    if (!environment) {",
        "        logger.warning(\"No environment parameters specified in the evaluation request.\");",
        "        return false;",
        "    }",
        "",
        "    var ipSet = environment.get(\"IP\");",
        "    if (ipSet == null || ipSet.isEmpty()) {",
        "        logger.warning(\"No IP specified in the evaluation request environment parameters.\");",
        "        return false;",
        "    }",
        "    userIP = ipSet.iterator().next();",
        "    logger.message(\"User IP: \" + userIP);",
        "",
        "    if (!resourceURI) {",
        "        logger.warning(\"No resource URI specified.\");",
        "        return false;",
        "    }",
        "    resourceHost = resourceURI.match(/^(.*:\\/\\/)(www\\.)?([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/)[3];",
        "    logger.message(\"Resource host: \" + resourceHost);",
        "",
        "    return true;",
        "}",
        "",
        "function logResponse(response) {",
        "    logger.message(\"User REST Call. Status: \" + response.getStatus() + \", Body: \" + response.getEntity().getString());",
        "}",
        ""
      ]
    },
    "a7a78773-445b-4eca-bb93-409e86bced81": {
      "_id": "a7a78773-445b-4eca-bb93-409e86bced81",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Normalizes raw profile data from GitHub",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "GitHub Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"username\", rawProfile.login)))"
      ]
    },
    "bae1d54a-e97d-4997-aa5d-c027f21af82c": {
      "_id": "bae1d54a-e97d-4997-aa5d-c027f21af82c",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Facebook",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Facebook Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field(\"id\", rawProfile.id),",
        "        field(\"displayName\", rawProfile.name),",
        "        field(\"givenName\", rawProfile.first_name),",
        "        field(\"familyName\", rawProfile.last_name),",
        "        field(\"photoUrl\", rawProfile.picture.data.url),",
        "        field(\"email\", rawProfile.email),",
        "        field(\"username\", rawProfile.email)))"
      ]
    },
    "c234ba0b-58a1-4cfd-9567-09edde980745": {
      "_id": "c234ba0b-58a1-4cfd-9567-09edde980745",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Internal token modification script",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ForgeRock Internal: OAuth2 Access Token Modification Script",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "// Script is intentionally empty",
        ""
      ]
    },
    "c4f22465-2368-4e27-8013-e6399974fd48": {
      "_id": "c4f22465-2368-4e27-8013-e6399974fd48",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for SAML2 IDP Attribute Mapper",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "SAML2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = \"ScriptedIDPAttributeMapper.getAttributes:: \";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + \"Invalid session.\");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + \"Remote SP attribute map = {}\", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + \"Configuration map is not defined.\");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + \"Hosted IDP attribute map = {}\", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + \"Error accessing the datastore. \" + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + \"Adding static value {} for attribute named {}\", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + \"{} string value map was empty or null.\", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + \"User profile does not have value for {}, checking SSOToken.\", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + \"{} not found in user profile or SSOToken.\", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + \"Error mapping IDP attributes. \" + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();"
      ]
    },
    "c735de08-f8f2-4e69-aa4a-2d8d3d438323": {
      "_id": "c735de08-f8f2-4e69-aa4a-2d8d3d438323",
      "context": "OAUTH2_MAY_ACT",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for OAuth2 May Act",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "OAuth2 May Act Script",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/**",
        " * Defined variables:",
        " * token - The access token to be updated. Mutable object, all changes to the access token will be reflected.",
        " * logger - always present, corresponding log files will be prefixed with: scripts.OAUTH2_ACCESS_TOKEN_MODIFICATION.",
        " * scriptName - always present, the display name of the script",
        " * session - present if the request contains the session cookie, the user's session object",
        " * requestProperties - always present, contains a map of request properties:",
        " *                     requestUri - the request URI",
        " *                     realm - the realm that the request relates to",
        " *                     requestParams - a map of the request params and/or posted data. Each value is a list of one or",
        " *                     more properties. Please note that these should be handled in accordance with OWASP best",
        " *                     practices.",
        " * clientProperties - present if the client specified in the request was identified, contains a map of client",
        " *                    properties:",
        " *                    clientId - the client's Uri for the request locale",
        " *                    allowedGrantTypes - list of the allowed grant types (org.forgerock.oauth2.core.GrantType)",
        " *                                        for the client",
        " *                    allowedResponseTypes - list of the allowed response types for the client",
        " *                    allowedScopes - list of the allowed scopes for the client",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps, e.g:",
        " *                                       testMap[Key1]=Value1 will be returned as testmap -> Key1 -> Value1",
        " *",
        " * identity - always present, the identity of the resource owner",
        " * scopes - always present, the requested scopes",
        " */",
        "/*",
        "import org.forgerock.json.JsonValue",
        "",
        "token.setMayAct(",
        "    JsonValue.json(JsonValue.object(",
        "        JsonValue.field(\"client_id\", \"myClient\"), ",
        "        JsonValue.field(\"sub\", \"(usr!myActor)\"))))",
        "*/"
      ]
    },
    "c827d2b4-3608-4693-868e-bbcf86bd87c7": {
      "_id": "c827d2b4-3608-4693-868e-bbcf86bd87c7",
      "context": "AUTHENTICATION_CLIENT_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for client side Scripted Authentication Module",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Scripted Module - Client Side",
      "script": [
        "/*",
        " * Copyright 2016-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "/* Default Authentication client side script to use as a template for new scripts */",
        ""
      ]
    },
    "cf3515f0-8278-4ee3-a530-1bad7424c416": {
      "_id": "cf3515f0-8278-4ee3-a530-1bad7424c416",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Default alpha realm script for OIDC claims",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the \"OAuth2Provider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use \"return variable\" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * \"Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim.\"",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
        ""
      ]
    },
    "d22f9a0c-426a-4466-b95e-d0f125b0d5fa": {
      "_id": "d22f9a0c-426a-4466-b95e-d0f125b0d5fa",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for OAuth2 Access Token Modification",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "OAuth2 Access Token Modification Script",
      "script": [
        "/*",
        " * Copyright 2019-2023 ForgeRock AS. All Rights Reserved.",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you modify information associated with an OAuth2 access token",
        " * with methods provided by the AccessToken (1) interface.",
        " * The changes made to OAuth2 access tokens will directly impact the size of the CTS tokens,",
        " * and, similarly, the size of the JWTs if client-based OAuth2 tokens are utilized.",
        " * When adding/updating fields make sure that the token size remains within client/user-agent limits.",
        " *",
        " * Defined variables:",
        " * accessToken - AccessToken (1).",
        " *               The access token to be updated.",
        " *               Mutable object, all changes to the access token will be reflected.",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the \"OAuth2Provider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_ACCESS_TOKEN_MODIFICATION.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *",
        " * Return - no value is expected, changes shall be made to the accessToken parameter directly.",
        " *",
        " * Class reference:",
        " * (1) AccessToken - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/AccessToken.html.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " */",
        "",
        "/* EXAMPLE",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.http.protocol.Request,",
        "        org.forgerock.http.protocol.Response",
        "    );",
        "",
        "    // Always includes this field in the token.",
        "    accessToken.setField('key1', 'value1');",
        "",
        "    // Receives and adds to the access token additional values by performing a REST call to an external service.",
        "    // WARNING: Below, you will find a reference to a third-party site, which is provided only as an example.",
        "    var uri = 'https://jsonplaceholder.typicode.com/posts';",
        "",
        "    try {",
        "        var request = new frJava.Request();",
        "",
        "        // You can chain methods that return the request object.",
        "        request.setUri(uri)",
        "            .setMethod('POST')",
        "            .setEntity(JSON.stringify({",
        "                updatedFields: {",
        "                    key2: 'value2',",
        "                    key3: 'value3'",
        "                }",
        "            }));",
        "",
        "        // You can call a method when chaining is not possible.",
        "        request.getHeaders().add('Content-Type', 'application/json; charset=UTF-8');",
        "",
        "        // Sends the request and receives the response.",
        "        var response = httpClient.send(request).getOrThrow();",
        "",
        "        // Checks if the response status is as expected.",
        "        if (response.getStatus() === org.forgerock.http.protocol.Status.CREATED) {",
        "            var result = JSON.parse(response.getEntity().getString());",
        "",
        "            // Set multiple token fields at once.",
        "            accessToken.setFields(result.updatedFields);",
        "        } else {",
        "            logger.error('Unable to obtain access token modifications. Status: ' + response.getStatus() + '. Content: ' + response.getEntity().getString());",
        "        }",
        "    } catch (e) {",
        "        logger.error('The request processing was interrupted. ' + e);",
        "",
        "        // The access token request fails with the HTTP 500 error in this case.",
        "        throw ('Unable to obtain response from: ' + uri);",
        "    }",
        "",
        "    // Adds new fields containing identity attribute values to the access token.",
        "    accessToken.setField('mail', identity.getAttribute('mail'));",
        "    accessToken.setField('phone', identity.getAttribute('telephoneNumber').toArray()[0]);",
        "",
        "    // Adds new fields containing the session property values.",
        "    // NOTE: session may not be available for non-interactive authorization grants.",
        "    if (session) {",
        "        try {",
        "            accessToken.setField('ipAddress', session.getProperty('Host'));",
        "        } catch (e) {",
        "            logger.error('Unable to retrieve session property value. ' + e);",
        "        }",
        "    }",
        "",
        "    // Removes a native field from the token entry, that was set by AM.",
        "    // WARNING: removing native fields from the token may result in loss of functionality.",
        "    // accessToken.removeTokenName()",
        "",
        "    // No return value is expected. Let it be undefined.",
        "}());",
        "*/",
        ""
      ]
    },
    "d58977ed-0542-4147-8197-973ef7300191": {
      "_id": "d58977ed-0542-4147-8197-973ef7300191",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Custom Device Match Script",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Custom Device Match Script",
      "script": [
        "/*",
        " * Custom Device Match Script",
        " */",
        "",
        "outcome = \"true\";"
      ]
    },
    "da56fe60-8b38-4c46-a405-d6b306d4b336": {
      "_id": "da56fe60-8b38-4c46-a405-d6b306d4b336",
      "context": "OAUTH2_EVALUATE_SCOPE",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Default global script for OAuth2 Scope Evaluation",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "OAuth2 Evaluate Scope Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you populate the scopes with profile attribute values when the tokeninfo endpoint is called.",
        " * For example, if one of the scopes is mail, AM sets mail to the resource owner's email address in the token information returned.",
        " *",
        " * Defined variables:",
        " * accessToken - AccessToken (1).",
        " *               The access token to be updated.",
        " *               Mutable object, all changes to the access token will be reflected.",
        " * identity - AMIdentity (2).",
        " *            The client's identity if present or the resource owner's identity. Can be null.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_EVALUATE_SCOPE",
        " * httpClient - HTTP Client (3).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *",
        " * Return - a Map<String, Object> of the access token's information (4).",
        " *",
        " * Class reference:",
        " * (1) AccessToken - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/AccessToken.html.",
        " * (2) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (3) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (4) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html.",
        " */",
        "",
        "/**",
        " * Default evaluate scope script to use as a template for new scripts.",
        " */",
        "",
        "(function () {",
        "    var map = new java.util.HashMap();",
        "    if (identity !== null) {",
        "        var scopes = accessToken.getScope().toArray();",
        "        scopes.forEach(function (scope) {",
        "            var attributes = identity.getAttribute(scope).toArray();",
        "            map.put(scope, attributes.join(\",\"));",
        "        });",
        "    } else {",
        "        logger.error('identity is null');",
        "    }",
        "    return map;",
        "}());"
      ]
    },
    "dbe0bf9a-72aa-49d5-8483-9db147985a47": {
      "_id": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Normalizes raw profile data from ADFS",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ADFS Profile Normalization (JS)",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns the social identity profile information for the authenticating user",
        " * in a standard form expected by the Social Provider Handler Node.",
        " *",
        " * Defined variables:",
        " * rawProfile - The social identity provider profile information for the authenticating user.",
        " *              JsonValue (1).",
        " * logger - The debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * requestHeaders - TreeMap (2).",
        " *                  The object that provides methods for accessing headers in the login request:",
        " *                  https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * requestParameters - TreeMap (2).",
        " *                     The object that contains the authentication request parameters.",
        " * selectedIdp - String (primitive).",
        " *               The social identity provider name. For example: google.",
        " * sharedState - LinkedHashMap (3).",
        " *               The object that holds the state of the authentication tree and allows data exchange between the stateless nodes:",
        " *               https://backstage.forgerock.com/docs/am/7/auth-nodes/core-action.html#accessing-tree-state.",
        " * transientState - LinkedHashMap (3).",
        " *                  The object for storing sensitive information that must not leave the server unencrypted,",
        " *                  and that may not need to persist between authentication requests during the authentication session:",
        " *                  https://backstage.forgerock.com/docs/am/7/auth-nodes/core-action.html#accessing-tree-state.",
        " *",
        " * Return - a JsonValue (1).",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use \"return variable\" statement outside of a function definition.",
        " *",
        " *          This script's last statement should result in a JsonValue (1) with the following keys:",
        " *          {",
        " *              {\"displayName\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"email\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"familyName\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"givenName\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"id\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"locale\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"photoUrl\": \"corresponding-social-identity-provider-value\"},",
        " *              {\"username\": \"corresponding-social-identity-provider-value\"}",
        " *          }",
        " *",
        " *          The consumer of this data defines which keys are required and which are optional.",
        " *          For example, the script associated with the Social Provider Handler Node and,",
        " *          ultimately, the managed object created/updated with this data",
        " *          will expect certain keys to be populated.",
        " *          In some common default configurations, the following keys are required to be not empty:",
        " *          username, givenName, familyName, email.",
        " *",
        " *          From RFC4517: A value of the Directory String syntax is a string of one or more",
        " *          arbitrary characters from the Universal Character Set (UCS).",
        " *          A zero-length character string is not permitted.",
        " *",
        " * (1) JsonValue - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/json/JsonValue.html.",
        " * (2) TreeMap - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html.",
        " * (3) LinkedHashMap - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " */",
        "",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.json.JsonValue",
        "    );",
        "",
        "    var normalizedProfileData = frJava.JsonValue.json(frJava.JsonValue.object());",
        "  ",
        "      //logger.message('Seguin rawProfile: '+rawProfile);",
        "",
        "    normalizedProfileData.put('id', rawProfile.get('sub').asString());",
        "    normalizedProfileData.put('displayName', rawProfile.get('givenName').asString() + ' ' + rawProfile.get('sn').asString());",
        "    normalizedProfileData.put('email', rawProfile.get('mail').asString());",
        "    normalizedProfileData.put('givenName', rawProfile.get('givenName').asString());",
        "    normalizedProfileData.put('familyName', rawProfile.get('sn').asString());",
        "    normalizedProfileData.put('username', rawProfile.get('upn').asString());",
        "    normalizedProfileData.put('roles', rawProfile.get('roles').asString());",
        "  ",
        "      //logger.message('Seguin normalizedProfileData: '+normalizedProfileData);",
        "",
        "    return normalizedProfileData;",
        "}());"
      ]
    },
    "e1db8a0a-0329-4962-a5bf-ecffaca376ae": {
      "_id": "e1db8a0a-0329-4962-a5bf-ecffaca376ae",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Used by endUserUIClient",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha endUserUIClient OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the \"OAuth2Provider\" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use \"return variable\" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * \"Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim.\"",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
        ""
      ]
    },
    "e232cff3-2460-47cd-80b2-36c86c0d0f06": {
      "_id": "e232cff3-2460-47cd-80b2-36c86c0d0f06",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Used by endUserUIClient",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha endUserUIClient OAuth2 Access Token Modification Script",
      "script": [
        "(function () {",
        "  if (scopes.contains('fr:autoaccess:*') || scopes.contains('fr:iga:*') || scopes.contains('fr:idc:analytics:*')) {",
        "    var fr = JavaImporter(",
        "      com.sun.identity.idm.IdType",
        "    );",
        "    var groups = [];",
        "    identity.getMemberships(fr.IdType.GROUP).toArray().forEach(function (group) {",
        "      groups.push(group.getAttribute('cn').toArray()[0]);",
        "    });",
        "    accessToken.setField('groups', groups);",
        "  }",
        "}());",
        ""
      ]
    },
    "ed685f9f-5909-4726-86e8-22bd38b47663": {
      "_id": "ed685f9f-5909-4726-86e8-22bd38b47663",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Converts a normalized social profile into an Identity",
      "evaluatorVersion": "1.0",
      "language": "GROOVY",
      "lastModifiedBy": "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
      "lastModifiedDate": 1433147666269,
      "name": "Normalized Profile to Identity",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue identity = json(object(",
        "        field(\"givenName\", normalizedProfile.givenName),",
        "        field(\"sn\", normalizedProfile.familyName),",
        "        field(\"mail\", normalizedProfile.email),",
        "        field(\"cn\", normalizedProfile.displayName),",
        "        field(\"userName\", normalizedProfile.username),",
        "        field(\"iplanet-am-user-alias-list\", selectedIdp + '-' + normalizedProfile.id.asString())))",
        "",
        "return identity"
      ]
    }
  },
  "secrets": {
    "esv-test-secret-euler": {
      "_id": "esv-test-secret-euler",
      "activeVersion": "1",
      "description": "A test secret containing the value of Euler's number",
      "encoding": "generic",
      "lastChangeDate": "2023-12-14T15:27:34.607038892Z",
      "lastChangedBy": "1e9280f6-eab6-467e-889c-83d147c8b936",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true
    },
    "esv-test-secret-pi": {
      "_id": "esv-test-secret-pi",
      "activeVersion": "1",
      "description": "Secret that contains the value of pi",
      "encoding": "generic",
      "lastChangeDate": "2023-12-14T15:22:28.519043207Z",
      "lastChangedBy": "1e9280f6-eab6-467e-889c-83d147c8b936",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true
    }
  },
  "service": {
    "CorsService": {
      "_id": "",
      "_type": {
        "_id": "CorsService",
        "collection": false,
        "name": "CORS Service"
      },
      "enabled": true,
      "nextDescendents": []
    },
    "SocialIdentityProviders": {
      "_id": "",
      "_type": {
        "_id": "SocialIdentityProviders",
        "collection": false,
        "name": "Social Identity Provider Service"
      },
      "enabled": true,
      "nextDescendents": [
        {
          "_id": "google",
          "_type": {
            "_id": "googleConfig",
            "collection": true,
            "name": "Client configuration for Google."
          },
          "acrValues": [],
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "297338177925-mho17cgnm540s2gre8h27feb6sbs1msd.apps.googleusercontent.com",
          "enableNativeNonce": true,
          "enabled": true,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://accounts.google.com",
          "issuerComparisonCheckType": "EXACT",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "openid",
            "profile",
            "email"
          ],
          "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
          "transform": "58d29080-4563-480b-89bb-1e7719776a21",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
            "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
            "buttonDisplayName": "Google",
            "buttonImage": "images/g-logo.png",
            "iconBackground": "#4184f3",
            "iconClass": "fa-google",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration"
        },
        {
          "_id": "github",
          "_type": {
            "_id": "oauth2Config",
            "collection": true,
            "name": "Client configuration for providers that implement the OAuth2 specification."
          },
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://github.com/login/oauth/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "bdae6d141d4dcf95a630",
          "enabled": true,
          "issuerComparisonCheckType": "EXACT",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "user"
          ],
          "tokenEndpoint": "https://ig.mytestrun.com/login/oauth/access_token",
          "transform": "23143919-6b78-40c3-b25e-beca19b229e0",
          "uiConfig": {
            "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
            "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
            "buttonDisplayName": "GitHub",
            "buttonImage": "https://cdn-icons-png.flaticon.com/512/25/25231.png",
            "iconBackground": "#4184f3",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoEndpoint": "https://ig.mytestrun.com/user"
        },
        {
          "_id": "adfs",
          "_type": {
            "_id": "oidcConfig",
            "collection": true,
            "name": "Client configuration for providers that implement the OpenID Connect specification."
          },
          "acrValues": [],
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "aa9a179e-cdba-4db8-8477-3d1069d5ec04",
          "enableNativeNonce": true,
          "enabled": true,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://adfs.mytestrun.com/adfs",
          "issuerComparisonCheckType": "EXACT",
          "jwksUriEndpoint": "https://adfs.mytestrun.com/adfs/discovery/keys",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "RS256",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "openid",
            "profile",
            "email"
          ],
          "tokenEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/token",
          "transform": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonDisplayName": "Microsoft ADFS",
            "buttonImage": "/login/images/microsoft-logo.png",
            "iconBackground": "#0078d7",
            "iconClass": "fa-windows",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://adfs.mytestrun.com/adfs/.well-known/openid-configuration"
        }
      ]
    },
    "baseurl": {
      "_id": "",
      "_type": {
        "_id": "baseurl",
        "collection": false,
        "name": "Base URL Source"
      },
      "contextPath": "/am",
      "fixedValue": "https://&{fqdn}",
      "nextDescendents": [],
      "source": "REQUEST_VALUES"
    },
    "dashboard": {
      "_id": "",
      "_type": {
        "_id": "dashboard",
        "collection": false,
        "name": "Dashboard"
      },
      "defaults": {
        "assignedDashboard": []
      },
      "nextDescendents": [
        {
          "_id": "Google",
          "_type": {
            "_id": "instances",
            "collection": true,
            "name": "instance"
          },
          "className": "SAML2ApplicationClass",
          "displayName": "Google",
          "icfIdentifier": "idm magic 34",
          "icon": "images/logos/googleplus.png",
          "login": "http://www.google.com",
          "name": "Google"
        },
        {
          "_id": "SalesForce",
          "_type": {
            "_id": "instances",
            "collection": true,
            "name": "instance"
          },
          "className": "SAML2ApplicationClass",
          "displayName": "SalesForce",
          "icfIdentifier": "idm magic 12",
          "icon": "images/logos/salesforce.png",
          "login": "http://www.salesforce.com",
          "name": "SalesForce"
        },
        {
          "_id": "ZenDesk",
          "_type": {
            "_id": "instances",
            "collection": true,
            "name": "instance"
          },
          "className": "SAML2ApplicationClass",
          "displayName": "ZenDesk",
          "icfIdentifier": "idm magic 56",
          "icon": "images/logos/zendesk.png",
          "login": "http://www.ZenDesk.com",
          "name": "ZenDesk"
        }
      ]
    },
    "oauth-oidc": {
      "_id": "",
      "_type": {
        "_id": "oauth-oidc",
        "collection": false,
        "name": "OAuth2 Provider"
      },
      "advancedOAuth2Config": {
        "allowClientCredentialsInTokenRequestQueryParameters": true,
        "allowedAudienceValues": [],
        "authenticationAttributes": [
          "uid"
        ],
        "codeVerifierEnforced": "false",
        "defaultScopes": [
          "address",
          "phone",
          "openid",
          "profile",
          "email"
        ],
        "displayNameAttribute": "cn",
        "expClaimRequiredInRequestObject": false,
        "grantTypes": [
          "implicit",
          "urn:ietf:params:oauth:grant-type:saml2-bearer",
          "refresh_token",
          "password",
          "client_credentials",
          "urn:ietf:params:oauth:grant-type:device_code",
          "authorization_code",
          "urn:openid:params:grant-type:ciba",
          "urn:ietf:params:oauth:grant-type:uma-ticket",
          "urn:ietf:params:oauth:grant-type:jwt-bearer"
        ],
        "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
        "includeSubnameInTokenClaims": true,
        "macaroonTokenFormat": "V2",
        "maxAgeOfRequestObjectNbfClaim": 0,
        "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
        "moduleMessageEnabledInPasswordGrant": false,
        "nbfClaimRequiredInRequestObject": false,
        "parRequestUriLifetime": 90,
        "passwordGrantAuthService": "Login",
        "persistentClaims": [],
        "refreshTokenGracePeriod": 0,
        "requestObjectProcessing": "OIDC",
        "requirePushedAuthorizationRequests": false,
        "responseTypeClasses": [
          "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
          "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
          "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
          "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler"
        ],
        "supportedScopes": [
          "email|Your email address",
          "openid|",
          "address|Your postal address",
          "phone|Your telephone number(s)",
          "profile|Your personal information",
          "fr:idm:*",
          "am-introspect-all-tokens"
        ],
        "supportedSubjectTypes": [
          "public",
          "pairwise"
        ],
        "tlsCertificateBoundAccessTokensEnabled": true,
        "tlsCertificateRevocationCheckingEnabled": false,
        "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
        "tokenCompressionEnabled": false,
        "tokenEncryptionEnabled": false,
        "tokenExchangeClasses": [
          "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
          "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
          "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
          "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger"
        ],
        "tokenSigningAlgorithm": "HS256",
        "tokenValidatorClasses": [
          "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
          "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator"
        ]
      },
      "advancedOIDCConfig": {
        "alwaysAddClaimsToToken": true,
        "amrMappings": {},
        "authorisedIdmDelegationClients": [],
        "authorisedOpenIdConnectSSOClients": [],
        "claimsParameterSupported": false,
        "defaultACR": [],
        "idTokenInfoClientAuthenticationEnabled": true,
        "includeAllKtyAlgCombinationsInJwksUri": false,
        "loaMapping": {},
        "storeOpsTokens": true,
        "supportedAuthorizationResponseEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedAuthorizationResponseEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedAuthorizationResponseSigningAlgorithms": [
          "PS384",
          "RS384",
          "EdDSA",
          "ES384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedRequestParameterEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "ECDH-ES+A128KW",
          "RSA-OAEP",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedRequestParameterEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedRequestParameterSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedTokenEndpointAuthenticationSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedTokenIntrospectionResponseEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedTokenIntrospectionResponseSigningAlgorithms": [
          "PS384",
          "RS384",
          "EdDSA",
          "ES384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedUserInfoEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedUserInfoEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedUserInfoSigningAlgorithms": [
          "ES384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512"
        ],
        "useForceAuthnForMaxAge": false,
        "useForceAuthnForPromptLogin": false
      },
      "cibaConfig": {
        "cibaAuthReqIdLifetime": 600,
        "cibaMinimumPollingInterval": 2,
        "supportedCibaSigningAlgorithms": [
          "ES256",
          "PS256"
        ]
      },
      "clientDynamicRegistrationConfig": {
        "allowDynamicRegistration": false,
        "dynamicClientRegistrationScope": "dynamic_client_registration",
        "dynamicClientRegistrationSoftwareStatementRequired": false,
        "generateRegistrationAccessTokens": true,
        "requiredSoftwareStatementAttestedAttributes": [
          "redirect_uris"
        ]
      },
      "consent": {
        "clientsCanSkipConsent": true,
        "enableRemoteConsent": false,
        "supportedRcsRequestEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedRcsRequestEncryptionMethods": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedRcsRequestSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedRcsResponseEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "ECDH-ES+A128KW",
          "RSA-OAEP",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedRcsResponseEncryptionMethods": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedRcsResponseSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ]
      },
      "coreOAuth2Config": {
        "accessTokenLifetime": 3600,
        "accessTokenMayActScript": "[Empty]",
        "codeLifetime": 120,
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "macaroonTokensEnabled": false,
        "oidcMayActScript": "[Empty]",
        "refreshTokenLifetime": 604800,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": true,
        "usePolicyEngineForScope": false
      },
      "coreOIDCConfig": {
        "jwtTokenLifetime": 3600,
        "oidcDiscoveryEndpointEnabled": true,
        "overrideableOIDCClaims": [],
        "supportedClaims": [],
        "supportedIDTokenEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedIDTokenEncryptionMethods": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedIDTokenSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ]
      },
      "deviceCodeConfig": {
        "deviceCodeLifetime": 300,
        "devicePollInterval": 5,
        "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
        "deviceUserCodeLength": 8
      },
      "nextDescendents": [],
      "pluginsConfig": {
        "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
        "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "authorizeEndpointDataProviderPluginType": "JAVA",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "evaluateScopePluginType": "JAVA",
        "evaluateScopeScript": "[Empty]",
        "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "oidcClaimsPluginType": "SCRIPTED",
        "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
        "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
        "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "validateScopePluginType": "JAVA",
        "validateScopeScript": "[Empty]"
      }
    },
    "policyconfiguration": {
      "_id": "",
      "_type": {
        "_id": "policyconfiguration",
        "collection": false,
        "name": "Policy Configuration"
      },
      "bindDn": "&{am.stores.user.username}",
      "bindPassword": {
        "$string": "&{am.stores.user.password}"
      },
      "checkIfResourceTypeExists": true,
      "connectionPoolMaximumSize": 10,
      "connectionPoolMinimumSize": 1,
      "ldapServer": [
        "userstore-1.userstore:1389",
        "userstore-0.userstore:1389",
        "userstore-2.userstore:1389"
      ],
      "maximumSearchResults": 100,
      "mtlsEnabled": false,
      "nextDescendents": [],
      "policyHeartbeatInterval": 10,
      "policyHeartbeatTimeUnit": "SECONDS",
      "realmSearchFilter": "(objectclass=sunismanagedorganization)",
      "searchTimeout": 5,
      "sslEnabled": {
        "$bool": "&{am.stores.ssl.enabled}"
      },
      "subjectsResultTTL": 10,
      "userAliasEnabled": false,
      "usersBaseDn": "ou=identities",
      "usersSearchAttribute": "uid",
      "usersSearchFilter": "(objectclass=inetorgperson)",
      "usersSearchScope": "SCOPE_SUB"
    },
    "selfServiceTrees": {
      "_id": "",
      "_type": {
        "_id": "selfServiceTrees",
        "collection": false,
        "name": "Self Service Trees"
      },
      "enabled": true,
      "nextDescendents": [],
      "treeMapping": {
        "forgottenUsername": "ForgottenUsername",
        "registration": "Registration",
        "resetPassword": "ResetPassword",
        "updatePassword": "UpdatePassword"
      }
    },
    "validation": {
      "_id": "",
      "_type": {
        "_id": "validation",
        "collection": false,
        "name": "Validation Service"
      },
      "nextDescendents": [],
      "validGotoDestinations": [
        "&{am.server.protocol|https}://&{fqdn}/*?*"
      ]
    }
  },
  "theme": {
    "00203891-dde0-4114-b27a-219ae0b43a61": {
      "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
      "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\" style=\"color: #5e6d82\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\" style=\"color: #5e6d82\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
      "accountFooterEnabled": true,
      "accountPageSections": {
        "accountControls": {
          "enabled": false
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true
            },
            "securityQuestions": {
              "enabled": false
            },
            "twoStepVerification": {
              "enabled": true
            },
            "username": {
              "enabled": true
            }
          }
        },
        "consent": {
          "enabled": false
        },
        "oauthApplications": {
          "enabled": false
        },
        "personalInformation": {
          "enabled": true
        },
        "preferences": {
          "enabled": false
        },
        "social": {
          "enabled": false
        },
        "trustedDevices": {
          "enabled": true
        }
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#5E6D82",
      "buttonRounded": "50",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<footer class=\"w-100\">\n    <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n        <div class=\"container w-100\">\n            <div class=\"mt-5 py-4 border-top border-darkened\">\n                <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Company\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Support\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                        <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">\n                            Community\n                        </h5>\n                        <ul class=\"nav mb-4 flex-column\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                            <span class=\"pr-1\">&copy; 2021</span>\n                            <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Highlander, Inc.</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</footer>\n\n",
      "journeyFooterEnabled": true,
      "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
      "journeyHeaderEnabled": true,
      "journeyJustifiedContent": "",
      "journeyJustifiedContentEnabled": false,
      "journeyLayout": "card",
      "journeyTheaterMode": false,
      "linkActiveColor": "#C60819",
      "linkColor": "#EB0A1E",
      "linkedTrees": [],
      "logo": "",
      "logoAltText": "",
      "logoEnabled": true,
      "logoHeight": "40",
      "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
      "logoProfileAltText": "Highlander",
      "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
      "logoProfileCollapsedAltText": "Highlander",
      "logoProfileCollapsedHeight": "28",
      "logoProfileHeight": "28",
      "name": "Highlander",
      "pageTitle": "#23282e",
      "primaryColor": "#EB0A1E",
      "primaryOffColor": "#C60819",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#455469",
      "profileMenuTextHighlightColor": "#EB0A1E",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff"
    },
    "cd6c93e2-52e2-4340-9770-66a588343841": {
      "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
      "accountFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
      "accountFooterEnabled": false,
      "accountPageSections": {
        "accountControls": {
          "enabled": false
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true
            },
            "securityQuestions": {
              "enabled": false
            },
            "twoStepVerification": {
              "enabled": true
            },
            "username": {
              "enabled": true
            }
          }
        },
        "consent": {
          "enabled": false
        },
        "oauthApplications": {
          "enabled": false
        },
        "personalInformation": {
          "enabled": true
        },
        "preferences": {
          "enabled": false
        },
        "social": {
          "enabled": false
        },
        "trustedDevices": {
          "enabled": true
        }
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#000000",
      "buttonRounded": "0",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
      "journeyFooterEnabled": false,
      "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
      "journeyHeaderEnabled": false,
      "journeyJustifiedContent": "",
      "journeyJustifiedContentEnabled": false,
      "journeyLayout": "card",
      "journeyTheaterMode": false,
      "linkActiveColor": "#000000",
      "linkColor": "#000000",
      "linkedTrees": [],
      "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
      "logoAltText": "Contrast",
      "logoEnabled": true,
      "logoHeight": "72",
      "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
      "logoProfileAltText": "Contrast",
      "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
      "logoProfileCollapsedAltText": "",
      "logoProfileCollapsedHeight": "22",
      "logoProfileHeight": "22",
      "name": "Contrast",
      "pageTitle": "#23282e",
      "primaryColor": "#000000",
      "primaryOffColor": "#000000",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#000000",
      "profileMenuTextHighlightColor": "#455469",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff"
    },
    "86ce2f64-586d-44fe-8593-b12a85aac68d": {
      "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
      "accountFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
      "accountFooterEnabled": false,
      "accountPageSections": {
        "accountControls": {
          "enabled": false
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true
            },
            "securityQuestions": {
              "enabled": false
            },
            "twoStepVerification": {
              "enabled": true
            },
            "username": {
              "enabled": true
            }
          }
        },
        "consent": {
          "enabled": false
        },
        "oauthApplications": {
          "enabled": false
        },
        "personalInformation": {
          "enabled": true
        },
        "preferences": {
          "enabled": false
        },
        "social": {
          "enabled": false
        },
        "trustedDevices": {
          "enabled": true
        }
      },
      "backgroundColor": "#324054",
      "backgroundImage": "",
      "bodyText": "#23282e",
      "buttonRounded": 5,
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": true,
      "journeyFooter": "<div class=\"d-flex justify-content-center py-4 w-100\"><span class=\"pr-1\">© 2021</span>\n<a href=\"#\" target=\"_blank\" class=\"text-body\">My Company, Inc</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Privacy Policy</a><a href=\"#\" target=\"_blank\" style=\"color: #0000ee\" class=\"pl-3 text-body\">Terms & Conditions</a></div>",
      "journeyFooterEnabled": false,
      "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
      "journeyHeaderEnabled": false,
      "journeyJustifiedContent": "",
      "journeyJustifiedContentEnabled": false,
      "journeyLayout": "card",
      "journeyTheaterMode": false,
      "linkActiveColor": "#0c85cf",
      "linkColor": "#109cf1",
      "linkedTrees": [],
      "logo": "",
      "logoAltText": "",
      "logoHeight": "40",
      "logoProfile": "",
      "logoProfileAltText": "",
      "logoProfileCollapsed": "",
      "logoProfileCollapsedAltText": "",
      "logoProfileCollapsedHeight": "40",
      "logoProfileHeight": "40",
      "name": "Starter Theme",
      "pageTitle": "#23282e",
      "primaryColor": "#324054",
      "primaryOffColor": "#242E3C",
      "profileBackgroundColor": "#f6f8fa",
      "profileMenuHighlightColor": "#f3f5f8",
      "profileMenuHoverColor": "#324054",
      "profileMenuHoverTextColor": "#ffffff",
      "profileMenuTextHighlightColor": "#455469",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff"
    },
    "4ded6d91-ceea-400a-ae3f-42209f1b0e06": {
      "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
      "accountFooter": "<footer>\n  <div class=\"container-md\">\n    <div class=\"py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100\">\n      <div class=\"text-nowrap\">\n        <span class=\"pr-1\">© 2022</span>\n        <a href=\"#\" target=\"_blank\" class=\"notranslate text-body\">Zardoz, Inc</a>\n      </div>\n      <ul class=\"nav\">\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">Privacy Policy</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">Terms of Use</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</footer>\n",
      "accountFooterEnabled": true,
      "accountPageSections": {
        "accountControls": {
          "enabled": false
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true
            },
            "securityQuestions": {
              "enabled": false
            },
            "twoStepVerification": {
              "enabled": true
            },
            "username": {
              "enabled": true
            }
          }
        },
        "consent": {
          "enabled": false
        },
        "oauthApplications": {
          "enabled": false
        },
        "personalInformation": {
          "enabled": true
        },
        "preferences": {
          "enabled": false
        },
        "social": {
          "enabled": false
        },
        "trustedDevices": {
          "enabled": true
        }
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#5E6D82",
      "buttonRounded": "50",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<footer>\n            <div class=\"container-md\">\n            <div class=\"py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100\">\n              <div class=\"text-nowrap\">\n                <span class=\"pr-1\">© 2022</span>\n                <a href=\"#\" target=\"_blank\" class=\"notranslate text-body\">Zardoz, Inc</a>\n              </div>\n              <ul class=\"nav\">\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link\">Privacy Policy</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link\">Terms of Use</a>\n                </li>\n              </ul>\n            </div>\n            </div>\n          </footer>\n",
      "journeyFooterEnabled": true,
      "journeyHeader": "<div class=\"d-flex justify-content-center py-4 flex-grow-1\">Header Content</div>",
      "journeyHeaderEnabled": false,
      "journeyJustifiedContent": "<div style=\"display: flex; background-color: black; height: 100vh;\">\n    <div class=\"d-none d-md-flex justify-content-center align-items-center p-5\" style=\"background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);\n    background-size: cover;\"><h1 class=\"text-center display-3\" style=\"color: rgb(255, 255, 255);\">Uptime &amp; Performance Benchmarking Made Easy</h1></div>\n</div>\n\n",
      "journeyJustifiedContentEnabled": true,
      "journeyLayout": "justified-right",
      "journeyTheaterMode": true,
      "linkActiveColor": "#007661",
      "linkColor": "#009C80",
      "linkedTrees": [],
      "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
      "logoAltText": "Zardoz Logo",
      "logoEnabled": true,
      "logoHeight": "47",
      "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
      "logoProfileAltText": "Zardaz Logo",
      "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
      "logoProfileCollapsedAltText": "Zardaz Logo",
      "logoProfileCollapsedHeight": "28",
      "logoProfileHeight": "40",
      "name": "Zardoz",
      "pageTitle": "#23282e",
      "primaryColor": "#009C80",
      "primaryOffColor": "#007661",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#455469",
      "profileMenuTextHighlightColor": "#009C80",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff"
    },
    "b82755e8-fe9a-4d27-b66b-45e37ae12345": {
      "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
      "accountFooter": "<footer class=\"w-100\">\n            <div class=\"d-flex flex-column flex-md-row justify-content-center align-items-center py-4\">\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e;\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Company</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">About Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Contact Us</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Support</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Help Center</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Docs</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Privacy &amp; Terms</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem;\">Community</h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Facebook</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Twitter</a></li>\n                        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\">Forum</a></li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                      <div class=\"d-flex align-items-center justify-content-lg-end py-4 py-lg-0\">\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\">Rob Roy Markets, Inc</a>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n            </div>\n          </footer>\n",
      "accountFooterEnabled": true,
      "accountPageSections": {
        "accountControls": {
          "enabled": false
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true
            },
            "securityQuestions": {
              "enabled": false
            },
            "twoStepVerification": {
              "enabled": true
            },
            "username": {
              "enabled": true
            }
          }
        },
        "consent": {
          "enabled": false
        },
        "oauthApplications": {
          "enabled": false
        },
        "personalInformation": {
          "enabled": true
        },
        "preferences": {
          "enabled": false
        },
        "social": {
          "enabled": false
        },
        "trustedDevices": {
          "enabled": true
        }
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#5E6D82",
      "buttonRounded": "50",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<footer class=\"w-100\">\n            <div\n              class=\"\n                d-flex\n                flex-column flex-md-row\n                justify-content-center\n                align-items-center\n                py-4\n              \"\n            >\n              <div class=\"container w-100\">\n                <div class=\"mt-5 py-4 border-top border-darkened\">\n                  <div class=\"row\" style=\"color: #23282e\">\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Company\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >About Us</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Contact Us</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Privacy &amp; Terms</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Support\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Help Center</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Docs</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Privacy &amp; Terms</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4 col-md-3 col-lg-2\">\n                      <h5 style=\"font-weight: 600; font-size: 0.9375rem\">\n                        Community\n                      </h5>\n                      <ul class=\"nav mb-4 flex-column\">\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Facebook</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Twitter</a\n                          >\n                        </li>\n                        <li class=\"nav-item\">\n                          <a href=\"#\" class=\"nav-link px-0 py-1\" target=\"_self\"\n                            >Forum</a\n                          >\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-12 col-lg-6\">\n                      <div\n                        class=\"\n                          d-flex\n                          align-items-center\n                          justify-content-lg-end\n                          py-4 py-lg-0\n                        \"\n                      >\n                        <span class=\"pr-1\">&copy; 2021</span>\n                        <a href=\"#\" class=\"text-decoration-none\" target=\"_self\"\n                          >Rob Roy Markets, Inc</a\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </footer>\n",
      "journeyFooterEnabled": true,
      "journeyHeader": "<header>\n            <nav\n              class=\"navbar shadow-lg navbar-light bg-white navbar-expand-lg\"\n            >\n              <a href=\"#\" target=\"_self\" class=\"navbar-brand\">\n                <img\n                  src=\"https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg\"\n                  alt=\"Logo\"\n                  style=\"height: 28px\"\n                />\n              </a>\n              <div\n                class=\"navbar-collapse d-none d-lg-flex\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul class=\"navbar-nav mr-auto\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link disabled\"\n                      href=\"#\"\n                      tabindex=\"-1\"\n                      aria-disabled=\"true\"\n                      >Disabled</a\n                    >\n                  </li>\n                </ul>\n                <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item\">\n                    <a href=\"#\" target=\"_self\" class=\"nav-link\">Link</a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </header>\n",
      "journeyHeaderEnabled": true,
      "journeyJustifiedContent": "<img src=\"https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg\" class=\"w-100\">",
      "journeyJustifiedContentEnabled": true,
      "journeyLayout": "justified-right",
      "journeyTheaterMode": false,
      "linkActiveColor": "#49871E",
      "linkColor": "#5AA625",
      "linkedTrees": [],
      "logo": "",
      "logoAltText": "",
      "logoEnabled": true,
      "logoHeight": "40",
      "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
      "logoProfileAltText": "RobRoy",
      "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
      "logoProfileCollapsedAltText": "RobRoy",
      "logoProfileCollapsedHeight": "28",
      "logoProfileHeight": "28",
      "name": "Robroy",
      "pageTitle": "#23282e",
      "primaryColor": "#5AA625",
      "primaryOffColor": "#49871E",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#455469",
      "profileMenuTextHighlightColor": "#5AA625",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff"
    }
  },
  "trees": {
    "ForgottenUsername": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "9f1e8d94-4922-481b-9e14-212b66548900": {
          "_id": "9f1e8d94-4922-481b-9e14-212b66548900",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector"
          },
          "attributesToCollect": [
            "mail"
          ],
          "identityAttribute": "mail",
          "required": true,
          "validateInputs": false
        }
      },
      "nodes": {
        "5e2a7c95-94af-4b23-8724-deb13853726a": {
          "_id": "5e2a7c95-94af-4b23-8724-deb13853726a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "9f1e8d94-4922-481b-9e14-212b66548900",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode"
            }
          ],
          "pageDescription": {
            "en": "Enter your email address or <a href=\"#/service/Login\">Sign in</a>"
          },
          "pageHeader": {
            "en": "Forgotten Username"
          }
        },
        "b93ce36e-1976-4610-b24f-8d6760b5463b": {
          "_id": "b93ce36e-1976-4610-b24f-8d6760b5463b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator"
          },
          "tree": "Login"
        },
        "bf9ea8d5-9802-4f26-9664-a21840faac23": {
          "_id": "bf9ea8d5-9802-4f26-9664-a21840faac23",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User"
          },
          "identifier": "userName",
          "identityAttribute": "mail"
        },
        "d9a79f01-2ce3-4be2-a28a-975f35c3c8ca": {
          "_id": "d9a79f01-2ce3-4be2-a28a-975f35c3c8ca",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node"
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "forgottenUsername",
          "identityAttribute": "mail",
          "objectLookup": true
        }
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ForgottenUsername",
        "description": "Forgotten Username Tree",
        "enabled": true,
        "entryNodeId": "5e2a7c95-94af-4b23-8724-deb13853726a",
        "identityResource": "managed/alpha_user",
        "innerTreeOnly": false,
        "nodes": {
          "5e2a7c95-94af-4b23-8724-deb13853726a": {
            "connections": {
              "outcome": "bf9ea8d5-9802-4f26-9664-a21840faac23"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode"
          },
          "b93ce36e-1976-4610-b24f-8d6760b5463b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "InnerTreeEvaluatorNode"
          },
          "bf9ea8d5-9802-4f26-9664-a21840faac23": {
            "connections": {
              "false": "d9a79f01-2ce3-4be2-a28a-975f35c3c8ca",
              "true": "d9a79f01-2ce3-4be2-a28a-975f35c3c8ca"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode"
          },
          "d9a79f01-2ce3-4be2-a28a-975f35c3c8ca": {
            "connections": {
              "outcome": "b93ce36e-1976-4610-b24f-8d6760b5463b"
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode"
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {},
          "e301438c-0bd0-429c-ab0c-66126501069a": {},
          "startNode": {}
        },
        "uiConfig": {
          "categories": "[\"Username Reset\"]"
        }
      }
    },
    "Login": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "0c80c39b-4813-4e67-b4fb-5a0bba85f994": {
          "_id": "0c80c39b-4813-4e67-b4fb-5a0bba85f994",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password"
          },
          "passwordAttribute": "password",
          "validateInput": false
        },
        "7354982f-57b6-4b04-9ddc-f1dd1e1e07d0": {
          "_id": "7354982f-57b6-4b04-9ddc-f1dd1e1e07d0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username"
          },
          "usernameAttribute": "userName",
          "validateInput": false
        }
      },
      "nodes": {
        "2119f332-0f69-4088-a7a1-6582bf0f2001": {
          "_id": "2119f332-0f69-4088-a7a1-6582bf0f2001",
          "_outcomes": [
            {
              "displayName": "Retry",
              "id": "Retry"
            },
            {
              "displayName": "Reject",
              "id": "Reject"
            }
          ],
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "collection": true,
            "name": "Retry Limit Decision"
          },
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 5
        },
        "33b24514-3e50-4180-8f08-ab6f4e51b07e": {
          "_id": "33b24514-3e50-4180-8f08-ab6f4e51b07e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator"
          },
          "tree": "ProgressiveProfile"
        },
        "51e8c4c1-3509-4635-90e6-d2cc31c4a6a5": {
          "_id": "51e8c4c1-3509-4635-90e6-d2cc31c4a6a5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "AccountLockoutNode",
            "collection": true,
            "name": "Account Lockout"
          },
          "lockAction": "LOCK"
        },
        "7f0c2aee-8c74-4d02-82a6-9d4ed9d11708": {
          "_id": "7f0c2aee-8c74-4d02-82a6-9d4ed9d11708",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "TRUE"
            },
            {
              "displayName": "False",
              "id": "FALSE"
            },
            {
              "displayName": "Locked",
              "id": "LOCKED"
            },
            {
              "displayName": "Cancelled",
              "id": "CANCELLED"
            },
            {
              "displayName": "Expired",
              "id": "EXPIRED"
            }
          ],
          "_type": {
            "_id": "IdentityStoreDecisionNode",
            "collection": true,
            "name": "Identity Store Decision"
          },
          "minimumPasswordLength": 8,
          "mixedCaseForPasswordChangeMessages": false,
          "useUniversalIdForUsername": false
        },
        "a12bc72f-ad97-4f1e-a789-a1fa3dd566c8": {
          "_id": "a12bc72f-ad97-4f1e-a789-a1fa3dd566c8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "7354982f-57b6-4b04-9ddc-f1dd1e1e07d0",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode"
            },
            {
              "_id": "0c80c39b-4813-4e67-b4fb-5a0bba85f994",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode"
            }
          ],
          "pageDescription": {
            "en": "New here? <a href=\"#/service/Registration\">Create an account</a><br><a href=\"#/service/ForgottenUsername\">Forgot username?</a><a href=\"#/service/ResetPassword\"> Forgot password?</a>"
          },
          "pageHeader": {
            "en": "Sign In"
          }
        },
        "bba3e0d8-8525-4e82-bf48-ac17f7988917": {
          "_id": "bba3e0d8-8525-4e82-bf48-ac17f7988917",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count"
          },
          "identityAttribute": "userName"
        }
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Login",
        "description": "Platform Login Tree",
        "enabled": true,
        "entryNodeId": "a12bc72f-ad97-4f1e-a789-a1fa3dd566c8",
        "identityResource": "managed/alpha_user",
        "innerTreeOnly": false,
        "nodes": {
          "2119f332-0f69-4088-a7a1-6582bf0f2001": {
            "connections": {
              "Reject": "51e8c4c1-3509-4635-90e6-d2cc31c4a6a5",
              "Retry": "a12bc72f-ad97-4f1e-a789-a1fa3dd566c8"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 612,
            "y": 105.015625
          },
          "33b24514-3e50-4180-8f08-ab6f4e51b07e": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 827,
            "y": 13
          },
          "51e8c4c1-3509-4635-90e6-d2cc31c4a6a5": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Account Lockout",
            "nodeType": "AccountLockoutNode",
            "x": 836,
            "y": 184.015625
          },
          "7f0c2aee-8c74-4d02-82a6-9d4ed9d11708": {
            "connections": {
              "CANCELLED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "EXPIRED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FALSE": "2119f332-0f69-4088-a7a1-6582bf0f2001",
              "LOCKED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "bba3e0d8-8525-4e82-bf48-ac17f7988917"
            },
            "displayName": "Identity Store Decision",
            "nodeType": "IdentityStoreDecisionNode",
            "x": 352,
            "y": 40.015625
          },
          "a12bc72f-ad97-4f1e-a789-a1fa3dd566c8": {
            "connections": {
              "outcome": "7f0c2aee-8c74-4d02-82a6-9d4ed9d11708"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 136,
            "y": 59
          },
          "bba3e0d8-8525-4e82-bf48-ac17f7988917": {
            "connections": {
              "outcome": "33b24514-3e50-4180-8f08-ab6f4e51b07e"
            },
            "displayName": "Increment Login Count",
            "nodeType": "IncrementLoginCountNode",
            "x": 579,
            "y": 34
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1073,
            "y": 30
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 761,
            "y": 401
          },
          "startNode": {
            "x": 50,
            "y": 25
          }
        },
        "uiConfig": {
          "categories": "[\"Authentication\"]"
        }
      }
    },
    "ProgressiveProfile": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "0a042e10-b22e-4e02-86c4-65e26e775f7a": {
          "_id": "0a042e10-b22e-4e02-86c4-65e26e775f7a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector"
          },
          "attributesToCollect": [
            "preferences/updates",
            "preferences/marketing"
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": false
        }
      },
      "nodes": {
        "423a959a-a1b9-498a-b0f7-596b6b6e775a": {
          "_id": "423a959a-a1b9-498a-b0f7-596b6b6e775a",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED"
            },
            {
              "displayName": "Failed",
              "id": "FAILURE"
            }
          ],
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object"
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false
        },
        "8afdaec3-275e-4301-bb53-34f03e6a4b29": {
          "_id": "8afdaec3-275e-4301-bb53-34f03e6a4b29",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "LoginCountDecisionNode",
            "collection": true,
            "name": "Login Count Decision"
          },
          "amount": 3,
          "identityAttribute": "userName",
          "interval": "AT"
        },
        "a1f45b44-5bf7-4c57-aa3f-75c619c7db8e": {
          "_id": "a1f45b44-5bf7-4c57-aa3f-75c619c7db8e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "QueryFilterDecisionNode",
            "collection": true,
            "name": "Query Filter Decision"
          },
          "identityAttribute": "userName",
          "queryFilter": "!(/preferences pr) or /preferences/marketing eq false or /preferences/updates eq false"
        },
        "a5aecad8-854a-4ed5-b719-ff6c90e858c0": {
          "_id": "a5aecad8-854a-4ed5-b719-ff6c90e858c0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "0a042e10-b22e-4e02-86c4-65e26e775f7a",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Please select your preferences"
          }
        }
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ProgressiveProfile",
        "description": "Prompt for missing preferences on 3rd login",
        "enabled": true,
        "entryNodeId": "8afdaec3-275e-4301-bb53-34f03e6a4b29",
        "identityResource": "managed/alpha_user",
        "innerTreeOnly": false,
        "nodes": {
          "423a959a-a1b9-498a-b0f7-596b6b6e775a": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 766,
            "y": 36
          },
          "8afdaec3-275e-4301-bb53-34f03e6a4b29": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "a1f45b44-5bf7-4c57-aa3f-75c619c7db8e"
            },
            "displayName": "Login Count Decision",
            "nodeType": "LoginCountDecisionNode",
            "x": 152,
            "y": 36
          },
          "a1f45b44-5bf7-4c57-aa3f-75c619c7db8e": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "a5aecad8-854a-4ed5-b719-ff6c90e858c0"
            },
            "displayName": "Query Filter Decision",
            "nodeType": "QueryFilterDecisionNode",
            "x": 357,
            "y": 36
          },
          "a5aecad8-854a-4ed5-b719-ff6c90e858c0": {
            "connections": {
              "outcome": "423a959a-a1b9-498a-b0f7-596b6b6e775a"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 555,
            "y": 20
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 802,
            "y": 312
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 919,
            "y": 171
          },
          "startNode": {
            "x": 50,
            "y": 58.5
          }
        },
        "uiConfig": {
          "categories": "[\"Progressive Profile\"]"
        }
      }
    },
    "Registration": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "120c69d3-90b4-4ad4-b7af-380e8b119340": {
          "_id": "120c69d3-90b4-4ad4-b7af-380e8b119340",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "KbaCreateNode",
            "collection": true,
            "name": "KBA Definition"
          },
          "allowUserDefinedQuestions": true,
          "message": {
            "en": "Select a security question"
          }
        },
        "3d8709a1-f09f-4d1f-8094-2850e472c1db": {
          "_id": "3d8709a1-f09f-4d1f-8094-2850e472c1db",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password"
          },
          "passwordAttribute": "password",
          "validateInput": true
        },
        "7fcaf48e-a754-4959-858b-05b2933b825f": {
          "_id": "7fcaf48e-a754-4959-858b-05b2933b825f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username"
          },
          "usernameAttribute": "userName",
          "validateInput": true
        },
        "b4a0e915-c15d-4b83-9c9d-18347d645976": {
          "_id": "b4a0e915-c15d-4b83-9c9d-18347d645976",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "collection": true,
            "name": "Accept Terms and Conditions"
          }
        },
        "d3ce2036-1523-4ce8-b1a2-895a2a036667": {
          "_id": "d3ce2036-1523-4ce8-b1a2-895a2a036667",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector"
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "preferences/marketing",
            "preferences/updates"
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true
        }
      },
      "nodes": {
        "0c091c49-f3af-48fb-ac6f-07fba0499dd6": {
          "_id": "0c091c49-f3af-48fb-ac6f-07fba0499dd6",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "7fcaf48e-a754-4959-858b-05b2933b825f",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode"
            },
            {
              "_id": "d3ce2036-1523-4ce8-b1a2-895a2a036667",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode"
            },
            {
              "_id": "3d8709a1-f09f-4d1f-8094-2850e472c1db",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode"
            },
            {
              "_id": "120c69d3-90b4-4ad4-b7af-380e8b119340",
              "displayName": "KBA Definition",
              "nodeType": "KbaCreateNode"
            },
            {
              "_id": "b4a0e915-c15d-4b83-9c9d-18347d645976",
              "displayName": "Accept Terms and Conditions",
              "nodeType": "AcceptTermsAndConditionsNode"
            }
          ],
          "pageDescription": {
            "en": "Signing up is fast and easy.<br>Already have an account? <a href='#/service/Login'>Sign In</a>"
          },
          "pageHeader": {
            "en": "Sign Up"
          }
        },
        "466f8b54-07fb-4e31-a11d-a6842618cc37": {
          "_id": "466f8b54-07fb-4e31-a11d-a6842618cc37",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node"
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "registration",
          "identityAttribute": "userName",
          "objectLookup": false
        },
        "97a15eb2-a015-4b6d-81a0-be78c3aa1a3b": {
          "_id": "97a15eb2-a015-4b6d-81a0-be78c3aa1a3b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count"
          },
          "identityAttribute": "userName"
        },
        "ad5dcbb3-7335-49b7-b3e7-7d850bb88237": {
          "_id": "ad5dcbb3-7335-49b7-b3e7-7d850bb88237",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED"
            },
            {
              "displayName": "Failed",
              "id": "FAILURE"
            }
          ],
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object"
          },
          "identityResource": "managed/alpha_user"
        }
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Registration",
        "description": "Platform Registration Tree",
        "enabled": true,
        "entryNodeId": "0c091c49-f3af-48fb-ac6f-07fba0499dd6",
        "identityResource": "managed/alpha_user",
        "innerTreeOnly": false,
        "nodes": {
          "0c091c49-f3af-48fb-ac6f-07fba0499dd6": {
            "connections": {
              "outcome": "466f8b54-07fb-4e31-a11d-a6842618cc37"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 261,
            "y": 168
          },
          "466f8b54-07fb-4e31-a11d-a6842618cc37": {
            "connections": {
              "outcome": "ad5dcbb3-7335-49b7-b3e7-7d850bb88237"
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 484,
            "y": 267.015625
          },
          "97a15eb2-a015-4b6d-81a0-be78c3aa1a3b": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Increment Login Count",
            "nodeType": "IncrementLoginCountNode",
            "x": 861,
            "y": 221
          },
          "ad5dcbb3-7335-49b7-b3e7-7d850bb88237": {
            "connections": {
              "CREATED": "97a15eb2-a015-4b6d-81a0-be78c3aa1a3b",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Create Object",
            "nodeType": "CreateObjectNode",
            "x": 717,
            "y": 283
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1085,
            "y": 248
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 921,
            "y": 370
          },
          "startNode": {
            "x": 50,
            "y": 25
          }
        },
        "uiConfig": {
          "categories": "[\"Registration\"]"
        }
      }
    },
    "ResetPassword": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "009c19c8-9572-47bb-adb2-1f092c559a43": {
          "_id": "009c19c8-9572-47bb-adb2-1f092c559a43",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password"
          },
          "passwordAttribute": "password",
          "validateInput": true
        },
        "276afa7c-a680-4cf4-a5f6-d6c78191f5c9": {
          "_id": "276afa7c-a680-4cf4-a5f6-d6c78191f5c9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector"
          },
          "attributesToCollect": [
            "mail"
          ],
          "identityAttribute": "mail",
          "required": true,
          "validateInputs": false
        }
      },
      "nodes": {
        "06c97be5-7fdd-4739-aea1-ecc7fe082865": {
          "_id": "06c97be5-7fdd-4739-aea1-ecc7fe082865",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node"
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "resetPassword",
          "identityAttribute": "mail",
          "objectLookup": true
        },
        "21b8ddf3-0203-4ae1-ab05-51cf3a3a707a": {
          "_id": "21b8ddf3-0203-4ae1-ab05-51cf3a3a707a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User"
          },
          "identifier": "userName",
          "identityAttribute": "mail"
        },
        "989f0bf8-a328-4217-b82b-5275d79ca8bd": {
          "_id": "989f0bf8-a328-4217-b82b-5275d79ca8bd",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED"
            },
            {
              "displayName": "Failed",
              "id": "FAILURE"
            }
          ],
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object"
          },
          "identityAttribute": "mail",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false
        },
        "cc3e1ed2-25f1-47bf-83c6-17084f8b2b2b": {
          "_id": "cc3e1ed2-25f1-47bf-83c6-17084f8b2b2b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "276afa7c-a680-4cf4-a5f6-d6c78191f5c9",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode"
            }
          ],
          "pageDescription": {
            "en": "Enter your email address or <a href=\"#/service/Login\">Sign in</a>"
          },
          "pageHeader": {
            "en": "Reset Password"
          }
        },
        "e4c752f9-c625-48c9-9644-a58802fa9e9c": {
          "_id": "e4c752f9-c625-48c9-9644-a58802fa9e9c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "009c19c8-9572-47bb-adb2-1f092c559a43",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode"
            }
          ],
          "pageDescription": {
            "en": "Change password"
          },
          "pageHeader": {
            "en": "Reset Password"
          }
        }
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ResetPassword",
        "description": "Reset Password Tree",
        "enabled": true,
        "entryNodeId": "cc3e1ed2-25f1-47bf-83c6-17084f8b2b2b",
        "identityResource": "managed/alpha_user",
        "innerTreeOnly": false,
        "nodes": {
          "06c97be5-7fdd-4739-aea1-ecc7fe082865": {
            "connections": {
              "outcome": "e4c752f9-c625-48c9-9644-a58802fa9e9c"
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 453,
            "y": 66
          },
          "21b8ddf3-0203-4ae1-ab05-51cf3a3a707a": {
            "connections": {
              "false": "06c97be5-7fdd-4739-aea1-ecc7fe082865",
              "true": "06c97be5-7fdd-4739-aea1-ecc7fe082865"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 271,
            "y": 21
          },
          "989f0bf8-a328-4217-b82b-5275d79ca8bd": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 819,
            "y": 61
          },
          "cc3e1ed2-25f1-47bf-83c6-17084f8b2b2b": {
            "connections": {
              "outcome": "21b8ddf3-0203-4ae1-ab05-51cf3a3a707a"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 103,
            "y": 50
          },
          "e4c752f9-c625-48c9-9644-a58802fa9e9c": {
            "connections": {
              "outcome": "989f0bf8-a328-4217-b82b-5275d79ca8bd"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 643,
            "y": 50
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 970,
            "y": 79
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 981,
            "y": 147
          },
          "startNode": {
            "x": 25,
            "y": 25
          }
        },
        "uiConfig": {
          "categories": "[\"Password Reset\"]"
        }
      }
    },
    "UpdatePassword": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "21a99653-a7a7-47ee-b650-f493a84bba09": {
          "_id": "21a99653-a7a7-47ee-b650-f493a84bba09",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password"
          },
          "passwordAttribute": "password",
          "validateInput": true
        },
        "fe2962fc-4db3-4066-8624-553649afc438": {
          "_id": "fe2962fc-4db3-4066-8624-553649afc438",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password"
          },
          "passwordAttribute": "password",
          "validateInput": false
        }
      },
      "nodes": {
        "0f0904e6-1da3-4cdb-9abf-0d2545016fab": {
          "_id": "0f0904e6-1da3-4cdb-9abf-0d2545016fab",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "AttributePresentDecisionNode",
            "collection": true,
            "name": "Attribute Present Decision"
          },
          "identityAttribute": "userName",
          "presentAttribute": "password"
        },
        "20237b34-26cb-4a0b-958f-abb422290d42": {
          "_id": "20237b34-26cb-4a0b-958f-abb422290d42",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "fe2962fc-4db3-4066-8624-553649afc438",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode"
            }
          ],
          "pageDescription": {
            "en": "Enter current password"
          },
          "pageHeader": {
            "en": "Verify Existing Password"
          }
        },
        "3990ce1f-cce6-435b-ae1c-f138e89411c1": {
          "_id": "3990ce1f-cce6-435b-ae1c-f138e89411c1",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED"
            },
            {
              "displayName": "Failed",
              "id": "FAILURE"
            }
          ],
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object"
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName"
          ],
          "patchAsObject": false
        },
        "7d1deabe-cd98-49c8-943f-ca12305775f3": {
          "_id": "7d1deabe-cd98-49c8-943f-ca12305775f3",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true"
            },
            {
              "displayName": "False",
              "id": "false"
            }
          ],
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision"
          }
        },
        "a3d97b53-e38a-4b24-aed0-a021050eb744": {
          "_id": "a3d97b53-e38a-4b24-aed0-a021050eb744",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node"
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to your address, please verify your email address to update your password. Click the link in that email to proceed."
          },
          "emailTemplateName": "updatePassword",
          "identityAttribute": "userName",
          "objectLookup": true
        },
        "d018fcd1-4e22-4160-8c41-63bee51c9cb3": {
          "_id": "d018fcd1-4e22-4160-8c41-63bee51c9cb3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node"
          },
          "nodes": [
            {
              "_id": "21a99653-a7a7-47ee-b650-f493a84bba09",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode"
            }
          ],
          "pageDescription": {
            "en": "Enter new password"
          },
          "pageHeader": {
            "en": "Update Password"
          }
        },
        "d1b79744-493a-44fe-bc26-7d324a8caa4e": {
          "_id": "d1b79744-493a-44fe-bc26-7d324a8caa4e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome"
            }
          ],
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data"
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName"
        }
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "UpdatePassword",
        "description": "Update password using active session",
        "enabled": true,
        "entryNodeId": "d1b79744-493a-44fe-bc26-7d324a8caa4e",
        "identityResource": "managed/alpha_user",
        "innerTreeOnly": false,
        "nodes": {
          "0f0904e6-1da3-4cdb-9abf-0d2545016fab": {
            "connections": {
              "false": "a3d97b53-e38a-4b24-aed0-a021050eb744",
              "true": "20237b34-26cb-4a0b-958f-abb422290d42"
            },
            "displayName": "Attribute Present Decision",
            "nodeType": "AttributePresentDecisionNode",
            "x": 288,
            "y": 133
          },
          "20237b34-26cb-4a0b-958f-abb422290d42": {
            "connections": {
              "outcome": "7d1deabe-cd98-49c8-943f-ca12305775f3"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 526,
            "y": 46
          },
          "3990ce1f-cce6-435b-ae1c-f138e89411c1": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1062,
            "y": 189
          },
          "7d1deabe-cd98-49c8-943f-ca12305775f3": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "d018fcd1-4e22-4160-8c41-63bee51c9cb3"
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 722,
            "y": 45
          },
          "a3d97b53-e38a-4b24-aed0-a021050eb744": {
            "connections": {
              "outcome": "d018fcd1-4e22-4160-8c41-63bee51c9cb3"
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 659,
            "y": 223
          },
          "d018fcd1-4e22-4160-8c41-63bee51c9cb3": {
            "connections": {
              "outcome": "3990ce1f-cce6-435b-ae1c-f138e89411c1"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 943,
            "y": 30
          },
          "d1b79744-493a-44fe-bc26-7d324a8caa4e": {
            "connections": {
              "outcome": "0f0904e6-1da3-4cdb-9abf-0d2545016fab"
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 122,
            "y": 129
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1212,
            "y": 128
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 939,
            "y": 290
          },
          "startNode": {
            "x": 50,
            "y": 25
          }
        },
        "uiConfig": {
          "categories": "[\"Password Reset\"]"
        }
      }
    }
  },
  "variables": {
    "esv-test-variable-belphegor": {
      "_id": "esv-test-variable-belphegor",
      "description": "A test variable containing belphegor's palindromic prime number (as a string).",
      "expressionType": "string",
      "lastChangeDate": "2023-12-14T15:31:06.433097476Z",
      "lastChangedBy": "1e9280f6-eab6-467e-889c-83d147c8b936",
      "loaded": true,
      "value": "1000000000000066600000000000001",
      "valueBase64": "MTAwMDAwMDAwMDAwMDA2NjYwMDAwMDAwMDAwMDAwMQ=="
    },
    "esv-test-variable-light": {
      "_id": "esv-test-variable-light",
      "description": "Test variable containing the speed of light in meters per second (as an int).",
      "expressionType": "int",
      "lastChangeDate": "2023-12-14T15:34:13.446903047Z",
      "lastChangedBy": "1e9280f6-eab6-467e-889c-83d147c8b936",
      "loaded": true,
      "value": "299792458",
      "valueBase64": "Mjk5NzkyNDU4"
    }
  }
}
